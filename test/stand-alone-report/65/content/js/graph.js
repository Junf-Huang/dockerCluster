/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 49.0, "minX": 0.0, "maxY": 67218.0, "series": [{"data": [[0.0, 57.0], [0.1, 57.0], [0.2, 57.0], [0.3, 57.0], [0.4, 58.0], [0.5, 58.0], [0.6, 58.0], [0.7, 58.0], [0.8, 58.0], [0.9, 58.0], [1.0, 58.0], [1.1, 58.0], [1.2, 58.0], [1.3, 58.0], [1.4, 58.0], [1.5, 58.0], [1.6, 58.0], [1.7, 59.0], [1.8, 59.0], [1.9, 59.0], [2.0, 59.0], [2.1, 59.0], [2.2, 59.0], [2.3, 59.0], [2.4, 59.0], [2.5, 59.0], [2.6, 59.0], [2.7, 59.0], [2.8, 59.0], [2.9, 59.0], [3.0, 60.0], [3.1, 60.0], [3.2, 60.0], [3.3, 60.0], [3.4, 60.0], [3.5, 60.0], [3.6, 60.0], [3.7, 60.0], [3.8, 60.0], [3.9, 60.0], [4.0, 60.0], [4.1, 60.0], [4.2, 60.0], [4.3, 60.0], [4.4, 60.0], [4.5, 60.0], [4.6, 60.0], [4.7, 60.0], [4.8, 60.0], [4.9, 60.0], [5.0, 60.0], [5.1, 60.0], [5.2, 60.0], [5.3, 61.0], [5.4, 61.0], [5.5, 61.0], [5.6, 61.0], [5.7, 61.0], [5.8, 61.0], [5.9, 61.0], [6.0, 61.0], [6.1, 61.0], [6.2, 61.0], [6.3, 61.0], [6.4, 61.0], [6.5, 61.0], [6.6, 61.0], [6.7, 61.0], [6.8, 61.0], [6.9, 61.0], [7.0, 61.0], [7.1, 61.0], [7.2, 61.0], [7.3, 61.0], [7.4, 61.0], [7.5, 61.0], [7.6, 61.0], [7.7, 62.0], [7.8, 62.0], [7.9, 62.0], [8.0, 62.0], [8.1, 62.0], [8.2, 62.0], [8.3, 62.0], [8.4, 62.0], [8.5, 62.0], [8.6, 62.0], [8.7, 62.0], [8.8, 62.0], [8.9, 62.0], [9.0, 62.0], [9.1, 62.0], [9.2, 62.0], [9.3, 62.0], [9.4, 62.0], [9.5, 62.0], [9.6, 62.0], [9.7, 62.0], [9.8, 62.0], [9.9, 62.0], [10.0, 63.0], [10.1, 63.0], [10.2, 63.0], [10.3, 63.0], [10.4, 63.0], [10.5, 63.0], [10.6, 63.0], [10.7, 63.0], [10.8, 63.0], [10.9, 63.0], [11.0, 63.0], [11.1, 63.0], [11.2, 63.0], [11.3, 63.0], [11.4, 63.0], [11.5, 63.0], [11.6, 63.0], [11.7, 63.0], [11.8, 63.0], [11.9, 63.0], [12.0, 63.0], [12.1, 63.0], [12.2, 63.0], [12.3, 63.0], [12.4, 63.0], [12.5, 63.0], [12.6, 64.0], [12.7, 64.0], [12.8, 64.0], [12.9, 64.0], [13.0, 64.0], [13.1, 64.0], [13.2, 64.0], [13.3, 64.0], [13.4, 64.0], [13.5, 64.0], [13.6, 64.0], [13.7, 64.0], [13.8, 64.0], [13.9, 64.0], [14.0, 64.0], [14.1, 64.0], [14.2, 64.0], [14.3, 64.0], [14.4, 64.0], [14.5, 64.0], [14.6, 64.0], [14.7, 64.0], [14.8, 64.0], [14.9, 64.0], [15.0, 64.0], [15.1, 64.0], [15.2, 64.0], [15.3, 64.0], [15.4, 65.0], [15.5, 65.0], [15.6, 65.0], [15.7, 65.0], [15.8, 65.0], [15.9, 65.0], [16.0, 65.0], [16.1, 65.0], [16.2, 65.0], [16.3, 65.0], [16.4, 65.0], [16.5, 65.0], [16.6, 65.0], [16.7, 65.0], [16.8, 65.0], [16.9, 65.0], [17.0, 65.0], [17.1, 65.0], [17.2, 65.0], [17.3, 65.0], [17.4, 65.0], [17.5, 65.0], [17.6, 65.0], [17.7, 65.0], [17.8, 65.0], [17.9, 65.0], [18.0, 65.0], [18.1, 65.0], [18.2, 65.0], [18.3, 65.0], [18.4, 65.0], [18.5, 66.0], [18.6, 66.0], [18.7, 66.0], [18.8, 66.0], [18.9, 66.0], [19.0, 66.0], [19.1, 66.0], [19.2, 66.0], [19.3, 66.0], [19.4, 66.0], [19.5, 66.0], [19.6, 67.0], [19.7, 67.0], [19.8, 67.0], [19.9, 67.0], [20.0, 67.0], [20.1, 67.0], [20.2, 67.0], [20.3, 67.0], [20.4, 67.0], [20.5, 67.0], [20.6, 67.0], [20.7, 67.0], [20.8, 67.0], [20.9, 67.0], [21.0, 67.0], [21.1, 67.0], [21.2, 67.0], [21.3, 67.0], [21.4, 67.0], [21.5, 67.0], [21.6, 67.0], [21.7, 67.0], [21.8, 67.0], [21.9, 67.0], [22.0, 67.0], [22.1, 67.0], [22.2, 67.0], [22.3, 67.0], [22.4, 67.0], [22.5, 68.0], [22.6, 68.0], [22.7, 68.0], [22.8, 68.0], [22.9, 68.0], [23.0, 68.0], [23.1, 68.0], [23.2, 68.0], [23.3, 68.0], [23.4, 68.0], [23.5, 68.0], [23.6, 68.0], [23.7, 68.0], [23.8, 68.0], [23.9, 68.0], [24.0, 68.0], [24.1, 68.0], [24.2, 69.0], [24.3, 69.0], [24.4, 69.0], [24.5, 69.0], [24.6, 69.0], [24.7, 69.0], [24.8, 69.0], [24.9, 69.0], [25.0, 69.0], [25.1, 69.0], [25.2, 69.0], [25.3, 69.0], [25.4, 69.0], [25.5, 69.0], [25.6, 69.0], [25.7, 69.0], [25.8, 70.0], [25.9, 70.0], [26.0, 70.0], [26.1, 70.0], [26.2, 70.0], [26.3, 70.0], [26.4, 70.0], [26.5, 70.0], [26.6, 70.0], [26.7, 70.0], [26.8, 70.0], [26.9, 70.0], [27.0, 70.0], [27.1, 70.0], [27.2, 71.0], [27.3, 71.0], [27.4, 71.0], [27.5, 71.0], [27.6, 71.0], [27.7, 71.0], [27.8, 71.0], [27.9, 71.0], [28.0, 71.0], [28.1, 71.0], [28.2, 71.0], [28.3, 71.0], [28.4, 71.0], [28.5, 71.0], [28.6, 72.0], [28.7, 72.0], [28.8, 72.0], [28.9, 72.0], [29.0, 72.0], [29.1, 72.0], [29.2, 72.0], [29.3, 72.0], [29.4, 72.0], [29.5, 73.0], [29.6, 73.0], [29.7, 73.0], [29.8, 73.0], [29.9, 73.0], [30.0, 73.0], [30.1, 73.0], [30.2, 73.0], [30.3, 73.0], [30.4, 73.0], [30.5, 73.0], [30.6, 73.0], [30.7, 73.0], [30.8, 73.0], [30.9, 73.0], [31.0, 73.0], [31.1, 73.0], [31.2, 74.0], [31.3, 74.0], [31.4, 74.0], [31.5, 74.0], [31.6, 74.0], [31.7, 74.0], [31.8, 75.0], [31.9, 75.0], [32.0, 75.0], [32.1, 75.0], [32.2, 75.0], [32.3, 75.0], [32.4, 75.0], [32.5, 75.0], [32.6, 75.0], [32.7, 75.0], [32.8, 75.0], [32.9, 76.0], [33.0, 76.0], [33.1, 76.0], [33.2, 76.0], [33.3, 76.0], [33.4, 76.0], [33.5, 76.0], [33.6, 76.0], [33.7, 76.0], [33.8, 77.0], [33.9, 77.0], [34.0, 77.0], [34.1, 78.0], [34.2, 78.0], [34.3, 78.0], [34.4, 79.0], [34.5, 79.0], [34.6, 80.0], [34.7, 80.0], [34.8, 80.0], [34.9, 80.0], [35.0, 80.0], [35.1, 81.0], [35.2, 81.0], [35.3, 81.0], [35.4, 81.0], [35.5, 81.0], [35.6, 81.0], [35.7, 83.0], [35.8, 83.0], [35.9, 83.0], [36.0, 83.0], [36.1, 83.0], [36.2, 84.0], [36.3, 84.0], [36.4, 84.0], [36.5, 84.0], [36.6, 84.0], [36.7, 84.0], [36.8, 84.0], [36.9, 85.0], [37.0, 85.0], [37.1, 85.0], [37.2, 85.0], [37.3, 86.0], [37.4, 86.0], [37.5, 86.0], [37.6, 86.0], [37.7, 87.0], [37.8, 88.0], [37.9, 88.0], [38.0, 88.0], [38.1, 88.0], [38.2, 88.0], [38.3, 90.0], [38.4, 90.0], [38.5, 91.0], [38.6, 91.0], [38.7, 91.0], [38.8, 92.0], [38.9, 92.0], [39.0, 92.0], [39.1, 92.0], [39.2, 92.0], [39.3, 92.0], [39.4, 92.0], [39.5, 92.0], [39.6, 93.0], [39.7, 93.0], [39.8, 95.0], [39.9, 95.0], [40.0, 96.0], [40.1, 96.0], [40.2, 96.0], [40.3, 98.0], [40.4, 99.0], [40.5, 99.0], [40.6, 99.0], [40.7, 99.0], [40.8, 99.0], [40.9, 100.0], [41.0, 100.0], [41.1, 106.0], [41.2, 106.0], [41.3, 107.0], [41.4, 108.0], [41.5, 108.0], [41.6, 109.0], [41.7, 110.0], [41.8, 110.0], [41.9, 112.0], [42.0, 112.0], [42.1, 113.0], [42.2, 114.0], [42.3, 114.0], [42.4, 114.0], [42.5, 114.0], [42.6, 114.0], [42.7, 115.0], [42.8, 115.0], [42.9, 115.0], [43.0, 116.0], [43.1, 116.0], [43.2, 117.0], [43.3, 117.0], [43.4, 118.0], [43.5, 119.0], [43.6, 119.0], [43.7, 120.0], [43.8, 120.0], [43.9, 121.0], [44.0, 122.0], [44.1, 122.0], [44.2, 123.0], [44.3, 123.0], [44.4, 123.0], [44.5, 123.0], [44.6, 123.0], [44.7, 124.0], [44.8, 125.0], [44.9, 125.0], [45.0, 129.0], [45.1, 129.0], [45.2, 129.0], [45.3, 138.0], [45.4, 138.0], [45.5, 138.0], [45.6, 138.0], [45.7, 142.0], [45.8, 143.0], [45.9, 143.0], [46.0, 143.0], [46.1, 158.0], [46.2, 158.0], [46.3, 158.0], [46.4, 158.0], [46.5, 159.0], [46.6, 170.0], [46.7, 170.0], [46.8, 172.0], [46.9, 172.0], [47.0, 173.0], [47.1, 173.0], [47.2, 173.0], [47.3, 176.0], [47.4, 192.0], [47.5, 192.0], [47.6, 204.0], [47.7, 204.0], [47.8, 206.0], [47.9, 210.0], [48.0, 210.0], [48.1, 213.0], [48.2, 213.0], [48.3, 214.0], [48.4, 215.0], [48.5, 215.0], [48.6, 222.0], [48.7, 222.0], [48.8, 222.0], [48.9, 223.0], [49.0, 223.0], [49.1, 226.0], [49.2, 232.0], [49.3, 232.0], [49.4, 233.0], [49.5, 233.0], [49.6, 257.0], [49.7, 257.0], [49.8, 257.0], [49.9, 268.0], [50.0, 271.0], [50.1, 271.0], [50.2, 282.0], [50.3, 282.0], [50.4, 313.0], [50.5, 328.0], [50.6, 328.0], [50.7, 330.0], [50.8, 330.0], [50.9, 333.0], [51.0, 340.0], [51.1, 340.0], [51.2, 344.0], [51.3, 344.0], [51.4, 344.0], [51.5, 347.0], [51.6, 347.0], [51.7, 351.0], [51.8, 354.0], [51.9, 354.0], [52.0, 364.0], [52.1, 364.0], [52.2, 369.0], [52.3, 371.0], [52.4, 371.0], [52.5, 373.0], [52.6, 373.0], [52.7, 380.0], [52.8, 397.0], [52.9, 397.0], [53.0, 398.0], [53.1, 419.0], [53.2, 419.0], [53.3, 437.0], [53.4, 437.0], [53.5, 474.0], [53.6, 513.0], [53.7, 513.0], [53.8, 516.0], [53.9, 516.0], [54.0, 535.0], [54.1, 555.0], [54.2, 555.0], [54.3, 561.0], [54.4, 562.0], [54.5, 562.0], [54.6, 565.0], [54.7, 565.0], [54.8, 567.0], [54.9, 575.0], [55.0, 575.0], [55.1, 580.0], [55.2, 580.0], [55.3, 581.0], [55.4, 584.0], [55.5, 584.0], [55.6, 592.0], [55.7, 592.0], [55.8, 596.0], [55.9, 619.0], [56.0, 619.0], [56.1, 637.0], [56.2, 654.0], [56.3, 654.0], [56.4, 848.0], [56.5, 848.0], [56.6, 894.0], [56.7, 963.0], [56.8, 963.0], [56.9, 979.0], [57.0, 979.0], [57.1, 1077.0], [57.2, 1112.0], [57.3, 1112.0], [57.4, 1131.0], [57.5, 1169.0], [57.6, 1169.0], [57.7, 1440.0], [57.8, 1440.0], [57.9, 1542.0], [58.0, 1633.0], [58.1, 1633.0], [58.2, 1664.0], [58.3, 1664.0], [58.4, 1910.0], [58.5, 1920.0], [58.6, 1920.0], [58.7, 1950.0], [58.8, 2017.0], [58.9, 2017.0], [59.0, 2073.0], [59.1, 2073.0], [59.2, 2103.0], [59.3, 2803.0], [59.4, 2803.0], [59.5, 2829.0], [59.6, 2829.0], [59.7, 2957.0], [59.8, 3444.0], [59.9, 3444.0], [60.0, 4880.0], [60.1, 29725.0], [60.2, 29725.0], [60.3, 29739.0], [60.4, 29739.0], [60.5, 29747.0], [60.6, 29794.0], [60.7, 29794.0], [60.8, 29807.0], [60.9, 29807.0], [61.0, 29837.0], [61.1, 29869.0], [61.2, 29869.0], [61.3, 29964.0], [61.4, 29964.0], [61.5, 29979.0], [61.6, 30040.0], [61.7, 30040.0], [61.8, 30049.0], [61.9, 30060.0], [62.0, 30060.0], [62.1, 30062.0], [62.2, 30062.0], [62.3, 30063.0], [62.4, 30064.0], [62.5, 30064.0], [62.6, 30064.0], [62.7, 30064.0], [62.8, 30064.0], [62.9, 30065.0], [63.0, 30065.0], [63.1, 30067.0], [63.2, 30067.0], [63.3, 30067.0], [63.4, 30067.0], [63.5, 30067.0], [63.6, 30068.0], [63.7, 30068.0], [63.8, 30068.0], [63.9, 30069.0], [64.0, 30069.0], [64.1, 30069.0], [64.2, 30069.0], [64.3, 30069.0], [64.4, 30070.0], [64.5, 30072.0], [64.6, 30072.0], [64.7, 30073.0], [64.8, 30073.0], [64.9, 30074.0], [65.0, 30075.0], [65.1, 30075.0], [65.2, 30075.0], [65.3, 30075.0], [65.4, 30076.0], [65.5, 30076.0], [65.6, 30076.0], [65.7, 30077.0], [65.8, 30078.0], [65.9, 30078.0], [66.0, 30078.0], [66.1, 30078.0], [66.2, 30078.0], [66.3, 30079.0], [66.4, 30079.0], [66.5, 30079.0], [66.6, 30079.0], [66.7, 30079.0], [66.8, 30080.0], [66.9, 30080.0], [67.0, 30081.0], [67.1, 30081.0], [67.2, 30082.0], [67.3, 30083.0], [67.4, 30083.0], [67.5, 30084.0], [67.6, 30086.0], [67.7, 30086.0], [67.8, 30087.0], [67.9, 30087.0], [68.0, 30089.0], [68.1, 30091.0], [68.2, 30091.0], [68.3, 30091.0], [68.4, 30091.0], [68.5, 30092.0], [68.6, 30093.0], [68.7, 30093.0], [68.8, 30093.0], [68.9, 30093.0], [69.0, 30093.0], [69.1, 30095.0], [69.2, 30095.0], [69.3, 30095.0], [69.4, 30095.0], [69.5, 30095.0], [69.6, 30095.0], [69.7, 30095.0], [69.8, 30095.0], [69.9, 30096.0], [70.0, 30096.0], [70.1, 30096.0], [70.2, 30096.0], [70.3, 30096.0], [70.4, 30097.0], [70.5, 30097.0], [70.6, 30098.0], [70.7, 30098.0], [70.8, 30098.0], [70.9, 30098.0], [71.0, 30098.0], [71.1, 30098.0], [71.2, 30098.0], [71.3, 30098.0], [71.4, 30100.0], [71.5, 30103.0], [71.6, 30103.0], [71.7, 30103.0], [71.8, 30103.0], [71.9, 30105.0], [72.0, 30105.0], [72.1, 30105.0], [72.2, 30105.0], [72.3, 30105.0], [72.4, 30109.0], [72.5, 30110.0], [72.6, 30110.0], [72.7, 30114.0], [72.8, 30114.0], [72.9, 30116.0], [73.0, 30116.0], [73.1, 30116.0], [73.2, 30118.0], [73.3, 30118.0], [73.4, 30118.0], [73.5, 30125.0], [73.6, 30125.0], [73.7, 30126.0], [73.8, 30129.0], [73.9, 30129.0], [74.0, 30130.0], [74.1, 30130.0], [74.2, 30133.0], [74.3, 30133.0], [74.4, 30133.0], [74.5, 30135.0], [74.6, 30137.0], [74.7, 30137.0], [74.8, 30144.0], [74.9, 30144.0], [75.0, 30144.0], [75.1, 30145.0], [75.2, 30145.0], [75.3, 30145.0], [75.4, 30145.0], [75.5, 30149.0], [75.6, 30150.0], [75.7, 30150.0], [75.8, 30155.0], [75.9, 30159.0], [76.0, 30159.0], [76.1, 30164.0], [76.2, 30164.0], [76.3, 30169.0], [76.4, 30170.0], [76.5, 30170.0], [76.6, 30170.0], [76.7, 30170.0], [76.8, 30171.0], [76.9, 30174.0], [77.0, 30174.0], [77.1, 30179.0], [77.2, 30180.0], [77.3, 30180.0], [77.4, 30190.0], [77.5, 30190.0], [77.6, 30193.0], [77.7, 30196.0], [77.8, 30196.0], [77.9, 30204.0], [78.0, 30204.0], [78.1, 30205.0], [78.2, 30206.0], [78.3, 30206.0], [78.4, 30208.0], [78.5, 30208.0], [78.6, 30210.0], [78.7, 30211.0], [78.8, 30211.0], [78.9, 30216.0], [79.0, 30217.0], [79.1, 30217.0], [79.2, 30223.0], [79.3, 30223.0], [79.4, 30227.0], [79.5, 30228.0], [79.6, 30228.0], [79.7, 30235.0], [79.8, 30235.0], [79.9, 30235.0], [80.0, 30236.0], [80.1, 30236.0], [80.2, 30237.0], [80.3, 30243.0], [80.4, 30243.0], [80.5, 30257.0], [80.6, 30257.0], [80.7, 30268.0], [80.8, 30272.0], [80.9, 30272.0], [81.0, 30274.0], [81.1, 30274.0], [81.2, 30288.0], [81.3, 30288.0], [81.4, 30288.0], [81.5, 30302.0], [81.6, 30309.0], [81.7, 30309.0], [81.8, 30315.0], [81.9, 30315.0], [82.0, 30316.0], [82.1, 30322.0], [82.2, 30322.0], [82.3, 30330.0], [82.4, 30330.0], [82.5, 30335.0], [82.6, 30336.0], [82.7, 30336.0], [82.8, 30339.0], [82.9, 30347.0], [83.0, 30347.0], [83.1, 30378.0], [83.2, 30378.0], [83.3, 30380.0], [83.4, 30389.0], [83.5, 30389.0], [83.6, 30392.0], [83.7, 30392.0], [83.8, 30404.0], [83.9, 30406.0], [84.0, 30406.0], [84.1, 30409.0], [84.2, 30409.0], [84.3, 30411.0], [84.4, 30412.0], [84.5, 30412.0], [84.6, 30439.0], [84.7, 30484.0], [84.8, 30484.0], [84.9, 30521.0], [85.0, 30521.0], [85.1, 30542.0], [85.2, 30561.0], [85.3, 30561.0], [85.4, 30582.0], [85.5, 30582.0], [85.6, 30594.0], [85.7, 30614.0], [85.8, 30614.0], [85.9, 30620.0], [86.0, 30641.0], [86.1, 30641.0], [86.2, 30651.0], [86.3, 30651.0], [86.4, 30652.0], [86.5, 30658.0], [86.6, 30658.0], [86.7, 30670.0], [86.8, 30670.0], [86.9, 30671.0], [87.0, 30671.0], [87.1, 30671.0], [87.2, 30807.0], [87.3, 30819.0], [87.4, 30819.0], [87.5, 30828.0], [87.6, 30828.0], [87.7, 30849.0], [87.8, 30867.0], [87.9, 30867.0], [88.0, 30873.0], [88.1, 30873.0], [88.2, 30929.0], [88.3, 31062.0], [88.4, 31062.0], [88.5, 31072.0], [88.6, 31073.0], [88.7, 31073.0], [88.8, 31085.0], [88.9, 31085.0], [89.0, 31206.0], [89.1, 31493.0], [89.2, 31493.0], [89.3, 31501.0], [89.4, 31501.0], [89.5, 31503.0], [89.6, 31584.0], [89.7, 31584.0], [89.8, 31634.0], [89.9, 31634.0], [90.0, 31666.0], [90.1, 31795.0], [90.2, 31795.0], [90.3, 31938.0], [90.4, 32667.0], [90.5, 32667.0], [90.6, 32700.0], [90.7, 32700.0], [90.8, 32759.0], [90.9, 33411.0], [91.0, 33411.0], [91.1, 41471.0], [91.2, 41471.0], [91.3, 44004.0], [91.4, 45104.0], [91.5, 45104.0], [91.6, 45107.0], [91.7, 45154.0], [91.8, 45154.0], [91.9, 45611.0], [92.0, 45611.0], [92.1, 45662.0], [92.2, 45676.0], [92.3, 45676.0], [92.4, 46991.0], [92.5, 46991.0], [92.6, 47269.0], [92.7, 49786.0], [92.8, 49786.0], [92.9, 49804.0], [93.0, 57990.0], [93.1, 57990.0], [93.2, 57992.0], [93.3, 57992.0], [93.4, 59367.0], [93.5, 59605.0], [93.6, 59605.0], [93.7, 59624.0], [93.8, 59624.0], [93.9, 59633.0], [94.0, 59646.0], [94.1, 59646.0], [94.2, 59649.0], [94.3, 59650.0], [94.4, 59650.0], [94.5, 59671.0], [94.6, 59671.0], [94.7, 59687.0], [94.8, 59935.0], [94.9, 59935.0], [95.0, 59979.0], [95.1, 59979.0], [95.2, 59988.0], [95.3, 59988.0], [95.4, 59988.0], [95.5, 60074.0], [95.6, 60074.0], [95.7, 60082.0], [95.8, 60084.0], [95.9, 60084.0], [96.0, 60111.0], [96.1, 60144.0], [96.2, 60144.0], [96.3, 60154.0], [96.4, 60154.0], [96.5, 60158.0], [96.6, 60163.0], [96.7, 60163.0], [96.8, 60166.0], [96.9, 60166.0], [97.0, 60201.0], [97.1, 60216.0], [97.2, 60216.0], [97.3, 60217.0], [97.4, 60222.0], [97.5, 60222.0], [97.6, 60228.0], [97.7, 60228.0], [97.8, 60264.0], [97.9, 60267.0], [98.0, 60267.0], [98.1, 60268.0], [98.2, 60268.0], [98.3, 60282.0], [98.4, 60286.0], [98.5, 60286.0], [98.6, 60287.0], [98.7, 60290.0], [98.8, 60290.0], [98.9, 60294.0], [99.0, 60294.0], [99.1, 60297.0], [99.2, 60301.0], [99.3, 60301.0], [99.4, 60325.0], [99.5, 60325.0], [99.6, 60329.0], [99.7, 60382.0], [99.8, 60382.0], [99.9, 60393.0]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[0.0, 160.0], [0.1, 160.0], [0.2, 252.0], [0.3, 252.0], [0.4, 263.0], [0.5, 276.0], [0.6, 276.0], [0.7, 278.0], [0.8, 280.0], [0.9, 280.0], [1.0, 284.0], [1.1, 290.0], [1.2, 290.0], [1.3, 294.0], [1.4, 294.0], [1.5, 296.0], [1.6, 299.0], [1.7, 299.0], [1.8, 311.0], [1.9, 313.0], [2.0, 313.0], [2.1, 313.0], [2.2, 315.0], [2.3, 315.0], [2.4, 331.0], [2.5, 347.0], [2.6, 347.0], [2.7, 350.0], [2.8, 350.0], [2.9, 355.0], [3.0, 359.0], [3.1, 359.0], [3.2, 364.0], [3.3, 367.0], [3.4, 367.0], [3.5, 370.0], [3.6, 370.0], [3.7, 370.0], [3.8, 371.0], [3.9, 387.0], [4.0, 387.0], [4.1, 388.0], [4.2, 388.0], [4.3, 396.0], [4.4, 398.0], [4.5, 398.0], [4.6, 402.0], [4.7, 407.0], [4.8, 407.0], [4.9, 407.0], [5.0, 412.0], [5.1, 412.0], [5.2, 422.0], [5.3, 424.0], [5.4, 424.0], [5.5, 429.0], [5.6, 429.0], [5.7, 431.0], [5.8, 436.0], [5.9, 436.0], [6.0, 436.0], [6.1, 444.0], [6.2, 444.0], [6.3, 446.0], [6.4, 455.0], [6.5, 455.0], [6.6, 456.0], [6.7, 464.0], [6.8, 464.0], [6.9, 469.0], [7.0, 469.0], [7.1, 469.0], [7.2, 477.0], [7.3, 477.0], [7.4, 480.0], [7.5, 488.0], [7.6, 488.0], [7.7, 494.0], [7.8, 498.0], [7.9, 498.0], [8.0, 499.0], [8.1, 499.0], [8.2, 499.0], [8.3, 505.0], [8.4, 505.0], [8.5, 507.0], [8.6, 510.0], [8.7, 510.0], [8.8, 516.0], [8.9, 518.0], [9.0, 518.0], [9.1, 528.0], [9.2, 529.0], [9.3, 529.0], [9.4, 529.0], [9.5, 529.0], [9.6, 529.0], [9.7, 531.0], [9.8, 531.0], [9.9, 557.0], [10.0, 559.0], [10.1, 559.0], [10.2, 563.0], [10.3, 573.0], [10.4, 573.0], [10.5, 575.0], [10.6, 580.0], [10.7, 580.0], [10.8, 580.0], [10.9, 580.0], [11.0, 588.0], [11.1, 589.0], [11.2, 589.0], [11.3, 591.0], [11.4, 595.0], [11.5, 595.0], [11.6, 598.0], [11.7, 599.0], [11.8, 599.0], [11.9, 600.0], [12.0, 608.0], [12.1, 608.0], [12.2, 612.0], [12.3, 612.0], [12.4, 615.0], [12.5, 616.0], [12.6, 616.0], [12.7, 618.0], [12.8, 620.0], [12.9, 620.0], [13.0, 627.0], [13.1, 628.0], [13.2, 628.0], [13.3, 629.0], [13.4, 638.0], [13.5, 638.0], [13.6, 641.0], [13.7, 641.0], [13.8, 643.0], [13.9, 645.0], [14.0, 645.0], [14.1, 651.0], [14.2, 653.0], [14.3, 653.0], [14.4, 654.0], [14.5, 655.0], [14.6, 655.0], [14.7, 657.0], [14.8, 658.0], [14.9, 658.0], [15.0, 667.0], [15.1, 667.0], [15.2, 680.0], [15.3, 682.0], [15.4, 682.0], [15.5, 683.0], [15.6, 685.0], [15.7, 685.0], [15.8, 691.0], [15.9, 695.0], [16.0, 695.0], [16.1, 698.0], [16.2, 702.0], [16.3, 702.0], [16.4, 702.0], [16.5, 702.0], [16.6, 702.0], [16.7, 703.0], [16.8, 703.0], [16.9, 710.0], [17.0, 714.0], [17.1, 714.0], [17.2, 722.0], [17.3, 733.0], [17.4, 733.0], [17.5, 736.0], [17.6, 736.0], [17.7, 738.0], [17.8, 739.0], [17.9, 739.0], [18.0, 743.0], [18.1, 746.0], [18.2, 746.0], [18.3, 747.0], [18.4, 755.0], [18.5, 755.0], [18.6, 758.0], [18.7, 758.0], [18.8, 758.0], [18.9, 758.0], [19.0, 758.0], [19.1, 760.0], [19.2, 760.0], [19.3, 760.0], [19.4, 764.0], [19.5, 765.0], [19.6, 765.0], [19.7, 766.0], [19.8, 770.0], [19.9, 770.0], [20.0, 775.0], [20.1, 778.0], [20.2, 778.0], [20.3, 779.0], [20.4, 779.0], [20.5, 782.0], [20.6, 783.0], [20.7, 783.0], [20.8, 783.0], [20.9, 784.0], [21.0, 784.0], [21.1, 785.0], [21.2, 787.0], [21.3, 787.0], [21.4, 788.0], [21.5, 789.0], [21.6, 789.0], [21.7, 791.0], [21.8, 791.0], [21.9, 795.0], [22.0, 797.0], [22.1, 797.0], [22.2, 801.0], [22.3, 804.0], [22.4, 804.0], [22.5, 805.0], [22.6, 806.0], [22.7, 806.0], [22.8, 815.0], [22.9, 818.0], [23.0, 818.0], [23.1, 832.0], [23.2, 832.0], [23.3, 832.0], [23.4, 837.0], [23.5, 837.0], [23.6, 840.0], [23.7, 841.0], [23.8, 841.0], [23.9, 841.0], [24.0, 844.0], [24.1, 844.0], [24.2, 845.0], [24.3, 850.0], [24.4, 850.0], [24.5, 854.0], [24.6, 854.0], [24.7, 875.0], [24.8, 875.0], [24.9, 875.0], [25.0, 876.0], [25.1, 876.0], [25.2, 876.0], [25.3, 877.0], [25.4, 880.0], [25.5, 880.0], [25.6, 883.0], [25.7, 883.0], [25.8, 904.0], [25.9, 907.0], [26.0, 907.0], [26.1, 917.0], [26.2, 932.0], [26.3, 932.0], [26.4, 943.0], [26.5, 968.0], [26.6, 968.0], [26.7, 974.0], [26.8, 980.0], [26.9, 980.0], [27.0, 988.0], [27.1, 988.0], [27.2, 989.0], [27.3, 992.0], [27.4, 992.0], [27.5, 994.0], [27.6, 1000.0], [27.7, 1000.0], [27.8, 1005.0], [27.9, 1008.0], [28.0, 1008.0], [28.1, 1018.0], [28.2, 1036.0], [28.3, 1036.0], [28.4, 1054.0], [28.5, 1054.0], [28.6, 1059.0], [28.7, 1065.0], [28.8, 1065.0], [28.9, 1067.0], [29.0, 1070.0], [29.1, 1070.0], [29.2, 1081.0], [29.3, 1090.0], [29.4, 1090.0], [29.5, 1091.0], [29.6, 1092.0], [29.7, 1092.0], [29.8, 1093.0], [29.9, 1093.0], [30.0, 1098.0], [30.1, 1109.0], [30.2, 1109.0], [30.3, 1109.0], [30.4, 1111.0], [30.5, 1111.0], [30.6, 1126.0], [30.7, 1133.0], [30.8, 1133.0], [30.9, 1134.0], [31.0, 1136.0], [31.1, 1136.0], [31.2, 1136.0], [31.3, 1136.0], [31.4, 1146.0], [31.5, 1158.0], [31.6, 1158.0], [31.7, 1160.0], [31.8, 1163.0], [31.9, 1163.0], [32.0, 1167.0], [32.1, 1168.0], [32.2, 1168.0], [32.3, 1173.0], [32.4, 1176.0], [32.5, 1176.0], [32.6, 1177.0], [32.7, 1177.0], [32.8, 1178.0], [32.9, 1180.0], [33.0, 1180.0], [33.1, 1194.0], [33.2, 1196.0], [33.3, 1196.0], [33.4, 1199.0], [33.5, 1199.0], [33.6, 1199.0], [33.7, 1215.0], [33.8, 1215.0], [33.9, 1216.0], [34.0, 1216.0], [34.1, 1216.0], [34.2, 1217.0], [34.3, 1230.0], [34.4, 1230.0], [34.5, 1231.0], [34.6, 1233.0], [34.7, 1233.0], [34.8, 1247.0], [34.9, 1251.0], [35.0, 1251.0], [35.1, 1252.0], [35.2, 1252.0], [35.3, 1264.0], [35.4, 1266.0], [35.5, 1266.0], [35.6, 1274.0], [35.7, 1275.0], [35.8, 1275.0], [35.9, 1279.0], [36.0, 1283.0], [36.1, 1283.0], [36.2, 1283.0], [36.3, 1285.0], [36.4, 1285.0], [36.5, 1291.0], [36.6, 1291.0], [36.7, 1294.0], [36.8, 1297.0], [36.9, 1297.0], [37.0, 1312.0], [37.1, 1318.0], [37.2, 1318.0], [37.3, 1335.0], [37.4, 1335.0], [37.5, 1335.0], [37.6, 1342.0], [37.7, 1344.0], [37.8, 1344.0], [37.9, 1345.0], [38.0, 1345.0], [38.1, 1351.0], [38.2, 1353.0], [38.3, 1353.0], [38.4, 1356.0], [38.5, 1363.0], [38.6, 1363.0], [38.7, 1364.0], [38.8, 1371.0], [38.9, 1371.0], [39.0, 1374.0], [39.1, 1385.0], [39.2, 1385.0], [39.3, 1389.0], [39.4, 1389.0], [39.5, 1390.0], [39.6, 1393.0], [39.7, 1393.0], [39.8, 1401.0], [39.9, 1401.0], [40.0, 1401.0], [40.1, 1406.0], [40.2, 1407.0], [40.3, 1407.0], [40.4, 1407.0], [40.5, 1409.0], [40.6, 1409.0], [40.7, 1415.0], [40.8, 1415.0], [40.9, 1425.0], [41.0, 1439.0], [41.1, 1439.0], [41.2, 1465.0], [41.3, 1474.0], [41.4, 1474.0], [41.5, 1474.0], [41.6, 1481.0], [41.7, 1481.0], [41.8, 1488.0], [41.9, 1488.0], [42.0, 1494.0], [42.1, 1498.0], [42.2, 1498.0], [42.3, 1500.0], [42.4, 1511.0], [42.5, 1511.0], [42.6, 1513.0], [42.7, 1517.0], [42.8, 1517.0], [42.9, 1521.0], [43.0, 1524.0], [43.1, 1524.0], [43.2, 1541.0], [43.3, 1541.0], [43.4, 1567.0], [43.5, 1575.0], [43.6, 1575.0], [43.7, 1579.0], [43.8, 1590.0], [43.9, 1590.0], [44.0, 1615.0], [44.1, 1624.0], [44.2, 1624.0], [44.3, 1639.0], [44.4, 1648.0], [44.5, 1648.0], [44.6, 1652.0], [44.7, 1652.0], [44.8, 1670.0], [44.9, 1670.0], [45.0, 1670.0], [45.1, 1705.0], [45.2, 1709.0], [45.3, 1709.0], [45.4, 1709.0], [45.5, 1710.0], [45.6, 1710.0], [45.7, 1711.0], [45.8, 1734.0], [45.9, 1734.0], [46.0, 1740.0], [46.1, 1740.0], [46.2, 1741.0], [46.3, 1773.0], [46.4, 1773.0], [46.5, 1778.0], [46.6, 1791.0], [46.7, 1791.0], [46.8, 1793.0], [46.9, 1800.0], [47.0, 1800.0], [47.1, 1819.0], [47.2, 1841.0], [47.3, 1841.0], [47.4, 1846.0], [47.5, 1846.0], [47.6, 1866.0], [47.7, 1866.0], [47.8, 1866.0], [47.9, 1870.0], [48.0, 1878.0], [48.1, 1878.0], [48.2, 1900.0], [48.3, 1913.0], [48.4, 1913.0], [48.5, 1918.0], [48.6, 1919.0], [48.7, 1919.0], [48.8, 1928.0], [48.9, 1928.0], [49.0, 1934.0], [49.1, 1944.0], [49.2, 1944.0], [49.3, 1952.0], [49.4, 1952.0], [49.5, 1952.0], [49.6, 1957.0], [49.7, 1981.0], [49.8, 1981.0], [49.9, 1985.0], [50.0, 1985.0], [50.1, 1994.0], [50.2, 2012.0], [50.3, 2012.0], [50.4, 2018.0], [50.5, 2028.0], [50.6, 2028.0], [50.7, 2044.0], [50.8, 2068.0], [50.9, 2068.0], [51.0, 2072.0], [51.1, 2081.0], [51.2, 2081.0], [51.3, 2084.0], [51.4, 2084.0], [51.5, 2110.0], [51.6, 2153.0], [51.7, 2153.0], [51.8, 2155.0], [51.9, 2173.0], [52.0, 2173.0], [52.1, 2175.0], [52.2, 2177.0], [52.3, 2177.0], [52.4, 2186.0], [52.5, 2186.0], [52.6, 2186.0], [52.7, 2189.0], [52.8, 2189.0], [52.9, 2247.0], [53.0, 2249.0], [53.1, 2249.0], [53.2, 2261.0], [53.3, 2280.0], [53.4, 2280.0], [53.5, 2328.0], [53.6, 2359.0], [53.7, 2359.0], [53.8, 2362.0], [53.9, 2365.0], [54.0, 2365.0], [54.1, 2365.0], [54.2, 2365.0], [54.3, 2366.0], [54.4, 2404.0], [54.5, 2404.0], [54.6, 2413.0], [54.7, 2422.0], [54.8, 2422.0], [54.9, 2425.0], [55.0, 2447.0], [55.1, 2447.0], [55.2, 2452.0], [55.3, 2490.0], [55.4, 2490.0], [55.5, 2514.0], [55.6, 2514.0], [55.7, 2523.0], [55.8, 2529.0], [55.9, 2529.0], [56.0, 2541.0], [56.1, 2542.0], [56.2, 2542.0], [56.3, 2544.0], [56.4, 2549.0], [56.5, 2549.0], [56.6, 2554.0], [56.7, 2597.0], [56.8, 2597.0], [56.9, 2613.0], [57.0, 2613.0], [57.1, 2623.0], [57.2, 2640.0], [57.3, 2640.0], [57.4, 2647.0], [57.5, 2663.0], [57.6, 2663.0], [57.7, 2683.0], [57.8, 2692.0], [57.9, 2692.0], [58.0, 2695.0], [58.1, 2709.0], [58.2, 2709.0], [58.3, 2743.0], [58.4, 2743.0], [58.5, 2744.0], [58.6, 2756.0], [58.7, 2756.0], [58.8, 2781.0], [58.9, 2783.0], [59.0, 2783.0], [59.1, 2793.0], [59.2, 2800.0], [59.3, 2800.0], [59.4, 2810.0], [59.5, 2810.0], [59.6, 2824.0], [59.7, 2829.0], [59.8, 2829.0], [59.9, 2838.0], [60.0, 2875.0], [60.1, 2875.0], [60.2, 2902.0], [60.3, 2915.0], [60.4, 2915.0], [60.5, 2921.0], [60.6, 2935.0], [60.7, 2935.0], [60.8, 2948.0], [60.9, 2948.0], [61.0, 2958.0], [61.1, 2963.0], [61.2, 2963.0], [61.3, 2964.0], [61.4, 2965.0], [61.5, 2965.0], [61.6, 2965.0], [61.7, 2966.0], [61.8, 2966.0], [61.9, 2966.0], [62.0, 2967.0], [62.1, 2967.0], [62.2, 2973.0], [62.3, 2973.0], [62.4, 2996.0], [62.5, 3001.0], [62.6, 3001.0], [62.7, 3001.0], [62.8, 3003.0], [62.9, 3003.0], [63.0, 3005.0], [63.1, 3011.0], [63.2, 3011.0], [63.3, 3041.0], [63.4, 3079.0], [63.5, 3079.0], [63.6, 3085.0], [63.7, 3085.0], [63.8, 3085.0], [63.9, 3098.0], [64.0, 3098.0], [64.1, 3120.0], [64.2, 3121.0], [64.3, 3121.0], [64.4, 3121.0], [64.5, 3177.0], [64.6, 3177.0], [64.7, 3195.0], [64.8, 3201.0], [64.9, 3201.0], [65.0, 3201.0], [65.1, 3201.0], [65.2, 3206.0], [65.3, 3224.0], [65.4, 3224.0], [65.5, 3255.0], [65.6, 3262.0], [65.7, 3262.0], [65.8, 3269.0], [65.9, 3293.0], [66.0, 3293.0], [66.1, 3294.0], [66.2, 3311.0], [66.3, 3311.0], [66.4, 3315.0], [66.5, 3315.0], [66.6, 3405.0], [66.7, 3423.0], [66.8, 3423.0], [66.9, 3476.0], [67.0, 3547.0], [67.1, 3547.0], [67.2, 3570.0], [67.3, 3571.0], [67.4, 3571.0], [67.5, 3572.0], [67.6, 3572.0], [67.7, 3575.0], [67.8, 3680.0], [67.9, 3680.0], [68.0, 3687.0], [68.1, 3742.0], [68.2, 3742.0], [68.3, 3757.0], [68.4, 3764.0], [68.5, 3764.0], [68.6, 3771.0], [68.7, 3785.0], [68.8, 3785.0], [68.9, 3827.0], [69.0, 3827.0], [69.1, 3883.0], [69.2, 3897.0], [69.3, 3897.0], [69.4, 4038.0], [69.5, 4194.0], [69.6, 4194.0], [69.7, 4299.0], [69.8, 4330.0], [69.9, 4330.0], [70.0, 4383.0], [70.1, 4386.0], [70.2, 4386.0], [70.3, 4401.0], [70.4, 4401.0], [70.5, 4550.0], [70.6, 4669.0], [70.7, 4669.0], [70.8, 4718.0], [70.9, 4719.0], [71.0, 4719.0], [71.1, 4740.0], [71.2, 4770.0], [71.3, 4770.0], [71.4, 4886.0], [71.5, 4994.0], [71.6, 4994.0], [71.7, 5085.0], [71.8, 5085.0], [71.9, 5176.0], [72.0, 5245.0], [72.1, 5245.0], [72.2, 5489.0], [72.3, 5501.0], [72.4, 5501.0], [72.5, 5572.0], [72.6, 5609.0], [72.7, 5609.0], [72.8, 5735.0], [72.9, 7773.0], [73.0, 7773.0], [73.1, 7925.0], [73.2, 7925.0], [73.3, 8633.0], [73.4, 8954.0], [73.5, 8954.0], [73.6, 10490.0], [73.7, 19827.0], [73.8, 19827.0], [73.9, 19917.0], [74.0, 19997.0], [74.1, 19997.0], [74.2, 20042.0], [74.3, 20076.0], [74.4, 20076.0], [74.5, 20673.0], [74.6, 20673.0], [74.7, 21333.0], [74.8, 21369.0], [74.9, 21369.0], [75.0, 21429.0], [75.1, 21451.0], [75.2, 21451.0], [75.3, 22012.0], [75.4, 22018.0], [75.5, 22018.0], [75.6, 22037.0], [75.7, 22037.0], [75.8, 22063.0], [75.9, 22110.0], [76.0, 22110.0], [76.1, 22125.0], [76.2, 22147.0], [76.3, 22147.0], [76.4, 22214.0], [76.5, 22231.0], [76.6, 22231.0], [76.7, 28631.0], [76.8, 28914.0], [76.9, 28914.0], [77.0, 29221.0], [77.1, 29221.0], [77.2, 29250.0], [77.3, 29267.0], [77.4, 29267.0], [77.5, 29320.0], [77.6, 29599.0], [77.7, 29599.0], [77.8, 29827.0], [77.9, 29843.0], [78.0, 29843.0], [78.1, 29847.0], [78.2, 29902.0], [78.3, 29902.0], [78.4, 29959.0], [78.5, 29959.0], [78.6, 30071.0], [78.7, 30114.0], [78.8, 30114.0], [78.9, 30118.0], [79.0, 30120.0], [79.1, 30120.0], [79.2, 30125.0], [79.3, 30130.0], [79.4, 30130.0], [79.5, 30131.0], [79.6, 30133.0], [79.7, 30133.0], [79.8, 30133.0], [79.9, 30133.0], [80.0, 30134.0], [80.1, 30134.0], [80.2, 30134.0], [80.3, 30138.0], [80.4, 30139.0], [80.5, 30139.0], [80.6, 30140.0], [80.7, 30140.0], [80.8, 30140.0], [80.9, 30142.0], [81.0, 30147.0], [81.1, 30147.0], [81.2, 30147.0], [81.3, 30147.0], [81.4, 30151.0], [81.5, 30151.0], [81.6, 30151.0], [81.7, 30151.0], [81.8, 30151.0], [81.9, 30151.0], [82.0, 30153.0], [82.1, 30155.0], [82.2, 30155.0], [82.3, 30156.0], [82.4, 30159.0], [82.5, 30159.0], [82.6, 30159.0], [82.7, 30159.0], [82.8, 30159.0], [82.9, 30160.0], [83.0, 30160.0], [83.1, 30162.0], [83.2, 30162.0], [83.3, 30162.0], [83.4, 30171.0], [83.5, 30174.0], [83.6, 30174.0], [83.7, 30175.0], [83.8, 30175.0], [83.9, 30178.0], [84.0, 30183.0], [84.1, 30183.0], [84.2, 30187.0], [84.3, 30188.0], [84.4, 30188.0], [84.5, 30192.0], [84.6, 30196.0], [84.7, 30196.0], [84.8, 30202.0], [84.9, 30202.0], [85.0, 30202.0], [85.1, 30203.0], [85.2, 30203.0], [85.3, 30204.0], [85.4, 30206.0], [85.5, 30206.0], [85.6, 30206.0], [85.7, 30207.0], [85.8, 30207.0], [85.9, 30209.0], [86.0, 30212.0], [86.1, 30212.0], [86.2, 30215.0], [86.3, 30222.0], [86.4, 30222.0], [86.5, 30234.0], [86.6, 30234.0], [86.7, 30237.0], [86.8, 30238.0], [86.9, 30238.0], [87.0, 30240.0], [87.1, 30246.0], [87.2, 30246.0], [87.3, 30246.0], [87.4, 30251.0], [87.5, 30251.0], [87.6, 30265.0], [87.7, 30268.0], [87.8, 30268.0], [87.9, 30285.0], [88.0, 30285.0], [88.1, 30294.0], [88.2, 30299.0], [88.3, 30299.0], [88.4, 30301.0], [88.5, 30302.0], [88.6, 30302.0], [88.7, 30310.0], [88.8, 30311.0], [88.9, 30311.0], [89.0, 30317.0], [89.1, 30317.0], [89.2, 30317.0], [89.3, 30317.0], [89.4, 30317.0], [89.5, 30321.0], [89.6, 30323.0], [89.7, 30323.0], [89.8, 30326.0], [89.9, 30327.0], [90.0, 30327.0], [90.1, 30336.0], [90.2, 30337.0], [90.3, 30337.0], [90.4, 30344.0], [90.5, 30349.0], [90.6, 30349.0], [90.7, 30351.0], [90.8, 30351.0], [90.9, 30352.0], [91.0, 30357.0], [91.1, 30357.0], [91.2, 30362.0], [91.3, 30364.0], [91.4, 30364.0], [91.5, 30375.0], [91.6, 30375.0], [91.7, 30375.0], [91.8, 30383.0], [91.9, 30383.0], [92.0, 30393.0], [92.1, 30400.0], [92.2, 30400.0], [92.3, 30406.0], [92.4, 30412.0], [92.5, 30412.0], [92.6, 30416.0], [92.7, 30420.0], [92.8, 30420.0], [92.9, 30426.0], [93.0, 30428.0], [93.1, 30428.0], [93.2, 30429.0], [93.3, 30429.0], [93.4, 30430.0], [93.5, 30431.0], [93.6, 30431.0], [93.7, 30432.0], [93.8, 30434.0], [93.9, 30434.0], [94.0, 30435.0], [94.1, 30446.0], [94.2, 30446.0], [94.3, 30447.0], [94.4, 30456.0], [94.5, 30456.0], [94.6, 30458.0], [94.7, 30458.0], [94.8, 30459.0], [94.9, 30459.0], [95.0, 30459.0], [95.1, 30472.0], [95.2, 30514.0], [95.3, 30514.0], [95.4, 30523.0], [95.5, 30534.0], [95.6, 30534.0], [95.7, 30543.0], [95.8, 30546.0], [95.9, 30546.0], [96.0, 30546.0], [96.1, 30546.0], [96.2, 30551.0], [96.3, 30556.0], [96.4, 30556.0], [96.5, 30565.0], [96.6, 30567.0], [96.7, 30567.0], [96.8, 30595.0], [96.9, 30597.0], [97.0, 30597.0], [97.1, 30608.0], [97.2, 30616.0], [97.3, 30616.0], [97.4, 30627.0], [97.5, 30627.0], [97.6, 30628.0], [97.7, 30637.0], [97.8, 30637.0], [97.9, 30690.0], [98.0, 31113.0], [98.1, 31113.0], [98.2, 31162.0], [98.3, 31206.0], [98.4, 31206.0], [98.5, 31514.0], [98.6, 33742.0], [98.7, 33742.0], [98.8, 36131.0], [98.9, 36131.0], [99.0, 48587.0], [99.1, 48923.0], [99.2, 48923.0], [99.3, 49085.0], [99.4, 49357.0], [99.5, 49357.0], [99.6, 49428.0], [99.7, 62794.0], [99.8, 62794.0], [99.9, 67218.0]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[0.0, 60.0], [0.1, 60.0], [0.2, 61.0], [0.3, 61.0], [0.4, 66.0], [0.5, 66.0], [0.6, 66.0], [0.7, 75.0], [0.8, 76.0], [0.9, 76.0], [1.0, 83.0], [1.1, 83.0], [1.2, 107.0], [1.3, 107.0], [1.4, 107.0], [1.5, 107.0], [1.6, 108.0], [1.7, 108.0], [1.8, 109.0], [1.9, 109.0], [2.0, 109.0], [2.1, 110.0], [2.2, 110.0], [2.3, 111.0], [2.4, 112.0], [2.5, 112.0], [2.6, 113.0], [2.7, 113.0], [2.8, 113.0], [2.9, 116.0], [3.0, 116.0], [3.1, 116.0], [3.2, 117.0], [3.3, 117.0], [3.4, 117.0], [3.5, 117.0], [3.6, 118.0], [3.7, 119.0], [3.8, 119.0], [3.9, 120.0], [4.0, 121.0], [4.1, 121.0], [4.2, 122.0], [4.3, 122.0], [4.4, 124.0], [4.5, 124.0], [4.6, 124.0], [4.7, 124.0], [4.8, 125.0], [4.9, 125.0], [5.0, 127.0], [5.1, 127.0], [5.2, 127.0], [5.3, 128.0], [5.4, 128.0], [5.5, 130.0], [5.6, 132.0], [5.7, 132.0], [5.8, 133.0], [5.9, 133.0], [6.0, 136.0], [6.1, 136.0], [6.2, 136.0], [6.3, 139.0], [6.4, 144.0], [6.5, 144.0], [6.6, 145.0], [6.7, 151.0], [6.8, 151.0], [6.9, 154.0], [7.0, 154.0], [7.1, 155.0], [7.2, 156.0], [7.3, 156.0], [7.4, 159.0], [7.5, 162.0], [7.6, 162.0], [7.7, 162.0], [7.8, 162.0], [7.9, 163.0], [8.0, 169.0], [8.1, 169.0], [8.2, 172.0], [8.3, 174.0], [8.4, 174.0], [8.5, 175.0], [8.6, 175.0], [8.7, 175.0], [8.8, 176.0], [8.9, 176.0], [9.0, 178.0], [9.1, 179.0], [9.2, 179.0], [9.3, 187.0], [9.4, 187.0], [9.5, 193.0], [9.6, 193.0], [9.7, 193.0], [9.8, 195.0], [9.9, 196.0], [10.0, 196.0], [10.1, 199.0], [10.2, 199.0], [10.3, 200.0], [10.4, 203.0], [10.5, 203.0], [10.6, 204.0], [10.7, 206.0], [10.8, 206.0], [10.9, 207.0], [11.0, 207.0], [11.1, 212.0], [11.2, 212.0], [11.3, 212.0], [11.4, 215.0], [11.5, 215.0], [11.6, 215.0], [11.7, 219.0], [11.8, 219.0], [11.9, 224.0], [12.0, 226.0], [12.1, 226.0], [12.2, 227.0], [12.3, 229.0], [12.4, 229.0], [12.5, 233.0], [12.6, 235.0], [12.7, 235.0], [12.8, 238.0], [12.9, 238.0], [13.0, 240.0], [13.1, 243.0], [13.2, 243.0], [13.3, 245.0], [13.4, 252.0], [13.5, 252.0], [13.6, 252.0], [13.7, 252.0], [13.8, 252.0], [13.9, 253.0], [14.0, 253.0], [14.1, 253.0], [14.2, 256.0], [14.3, 256.0], [14.4, 257.0], [14.5, 257.0], [14.6, 258.0], [14.7, 259.0], [14.8, 259.0], [14.9, 260.0], [15.0, 263.0], [15.1, 263.0], [15.2, 266.0], [15.3, 266.0], [15.4, 275.0], [15.5, 277.0], [15.6, 277.0], [15.7, 279.0], [15.8, 281.0], [15.9, 281.0], [16.0, 285.0], [16.1, 285.0], [16.2, 286.0], [16.3, 287.0], [16.4, 287.0], [16.5, 290.0], [16.6, 294.0], [16.7, 294.0], [16.8, 294.0], [16.9, 294.0], [17.0, 297.0], [17.1, 298.0], [17.2, 298.0], [17.3, 298.0], [17.4, 302.0], [17.5, 302.0], [17.6, 302.0], [17.7, 302.0], [17.8, 303.0], [17.9, 303.0], [18.0, 303.0], [18.1, 308.0], [18.2, 314.0], [18.3, 314.0], [18.4, 315.0], [18.5, 315.0], [18.6, 316.0], [18.7, 318.0], [18.8, 318.0], [18.9, 318.0], [19.0, 320.0], [19.1, 320.0], [19.2, 322.0], [19.3, 324.0], [19.4, 324.0], [19.5, 325.0], [19.6, 325.0], [19.7, 326.0], [19.8, 326.0], [19.9, 326.0], [20.0, 330.0], [20.1, 331.0], [20.2, 331.0], [20.3, 334.0], [20.4, 334.0], [20.5, 334.0], [20.6, 334.0], [20.7, 334.0], [20.8, 340.0], [20.9, 341.0], [21.0, 341.0], [21.1, 343.0], [21.2, 343.0], [21.3, 343.0], [21.4, 344.0], [21.5, 344.0], [21.6, 346.0], [21.7, 350.0], [21.8, 350.0], [21.9, 351.0], [22.0, 351.0], [22.1, 351.0], [22.2, 354.0], [22.3, 354.0], [22.4, 355.0], [22.5, 355.0], [22.6, 355.0], [22.7, 356.0], [22.8, 356.0], [22.9, 356.0], [23.0, 362.0], [23.1, 362.0], [23.2, 362.0], [23.3, 363.0], [23.4, 363.0], [23.5, 363.0], [23.6, 363.0], [23.7, 367.0], [23.8, 368.0], [23.9, 368.0], [24.0, 369.0], [24.1, 374.0], [24.2, 374.0], [24.3, 374.0], [24.4, 374.0], [24.5, 382.0], [24.6, 382.0], [24.7, 382.0], [24.8, 389.0], [24.9, 394.0], [25.0, 394.0], [25.1, 398.0], [25.2, 404.0], [25.3, 404.0], [25.4, 405.0], [25.5, 405.0], [25.6, 409.0], [25.7, 409.0], [25.8, 409.0], [25.9, 411.0], [26.0, 411.0], [26.1, 411.0], [26.2, 415.0], [26.3, 415.0], [26.4, 421.0], [26.5, 422.0], [26.6, 422.0], [26.7, 438.0], [26.8, 449.0], [26.9, 449.0], [27.0, 449.0], [27.1, 449.0], [27.2, 449.0], [27.3, 459.0], [27.4, 459.0], [27.5, 462.0], [27.6, 466.0], [27.7, 466.0], [27.8, 475.0], [27.9, 475.0], [28.0, 477.0], [28.1, 477.0], [28.2, 477.0], [28.3, 481.0], [28.4, 482.0], [28.5, 482.0], [28.6, 490.0], [28.7, 490.0], [28.8, 493.0], [28.9, 496.0], [29.0, 496.0], [29.1, 499.0], [29.2, 502.0], [29.3, 502.0], [29.4, 510.0], [29.5, 510.0], [29.6, 513.0], [29.7, 520.0], [29.8, 520.0], [29.9, 521.0], [30.0, 527.0], [30.1, 527.0], [30.2, 529.0], [30.3, 529.0], [30.4, 530.0], [30.5, 533.0], [30.6, 533.0], [30.7, 536.0], [30.8, 536.0], [30.9, 536.0], [31.0, 548.0], [31.1, 548.0], [31.2, 550.0], [31.3, 558.0], [31.4, 558.0], [31.5, 566.0], [31.6, 566.0], [31.7, 566.0], [31.8, 572.0], [31.9, 572.0], [32.0, 572.0], [32.1, 574.0], [32.2, 574.0], [32.3, 577.0], [32.4, 578.0], [32.5, 578.0], [32.6, 578.0], [32.7, 579.0], [32.8, 579.0], [32.9, 583.0], [33.0, 583.0], [33.1, 586.0], [33.2, 588.0], [33.3, 588.0], [33.4, 590.0], [33.5, 591.0], [33.6, 591.0], [33.7, 592.0], [33.8, 592.0], [33.9, 593.0], [34.0, 594.0], [34.1, 594.0], [34.2, 600.0], [34.3, 600.0], [34.4, 600.0], [34.5, 603.0], [34.6, 603.0], [34.7, 603.0], [34.8, 608.0], [34.9, 608.0], [35.0, 610.0], [35.1, 612.0], [35.2, 612.0], [35.3, 613.0], [35.4, 613.0], [35.5, 618.0], [35.6, 619.0], [35.7, 619.0], [35.8, 620.0], [35.9, 621.0], [36.0, 621.0], [36.1, 622.0], [36.2, 622.0], [36.3, 623.0], [36.4, 630.0], [36.5, 630.0], [36.6, 632.0], [36.7, 634.0], [36.8, 634.0], [36.9, 638.0], [37.0, 638.0], [37.1, 638.0], [37.2, 639.0], [37.3, 639.0], [37.4, 644.0], [37.5, 647.0], [37.6, 647.0], [37.7, 656.0], [37.8, 656.0], [37.9, 656.0], [38.0, 657.0], [38.1, 657.0], [38.2, 658.0], [38.3, 659.0], [38.4, 659.0], [38.5, 660.0], [38.6, 664.0], [38.7, 664.0], [38.8, 671.0], [38.9, 671.0], [39.0, 676.0], [39.1, 678.0], [39.2, 678.0], [39.3, 680.0], [39.4, 682.0], [39.5, 682.0], [39.6, 684.0], [39.7, 684.0], [39.8, 684.0], [39.9, 688.0], [40.0, 688.0], [40.1, 689.0], [40.2, 694.0], [40.3, 694.0], [40.4, 715.0], [40.5, 715.0], [40.6, 716.0], [40.7, 726.0], [40.8, 726.0], [40.9, 748.0], [41.0, 752.0], [41.1, 752.0], [41.2, 754.0], [41.3, 754.0], [41.4, 755.0], [41.5, 759.0], [41.6, 759.0], [41.7, 764.0], [41.8, 783.0], [41.9, 783.0], [42.0, 787.0], [42.1, 787.0], [42.2, 791.0], [42.3, 793.0], [42.4, 793.0], [42.5, 794.0], [42.6, 795.0], [42.7, 795.0], [42.8, 806.0], [42.9, 806.0], [43.0, 810.0], [43.1, 815.0], [43.2, 815.0], [43.3, 818.0], [43.4, 832.0], [43.5, 832.0], [43.6, 850.0], [43.7, 850.0], [43.8, 853.0], [43.9, 856.0], [44.0, 856.0], [44.1, 857.0], [44.2, 858.0], [44.3, 858.0], [44.4, 864.0], [44.5, 894.0], [44.6, 894.0], [44.7, 899.0], [44.8, 899.0], [44.9, 901.0], [45.0, 902.0], [45.1, 902.0], [45.2, 903.0], [45.3, 906.0], [45.4, 906.0], [45.5, 916.0], [45.6, 916.0], [45.7, 922.0], [45.8, 928.0], [45.9, 928.0], [46.0, 930.0], [46.1, 933.0], [46.2, 933.0], [46.3, 934.0], [46.4, 934.0], [46.5, 934.0], [46.6, 942.0], [46.7, 942.0], [46.8, 943.0], [46.9, 948.0], [47.0, 948.0], [47.1, 951.0], [47.2, 951.0], [47.3, 954.0], [47.4, 956.0], [47.5, 956.0], [47.6, 956.0], [47.7, 963.0], [47.8, 963.0], [47.9, 971.0], [48.0, 971.0], [48.1, 973.0], [48.2, 974.0], [48.3, 974.0], [48.4, 985.0], [48.5, 1024.0], [48.6, 1024.0], [48.7, 1033.0], [48.8, 1033.0], [48.9, 1040.0], [49.0, 1041.0], [49.1, 1041.0], [49.2, 1042.0], [49.3, 1043.0], [49.4, 1043.0], [49.5, 1043.0], [49.6, 1043.0], [49.7, 1066.0], [49.8, 1080.0], [49.9, 1080.0], [50.0, 1080.0], [50.1, 1085.0], [50.2, 1085.0], [50.3, 1086.0], [50.4, 1090.0], [50.5, 1090.0], [50.6, 1091.0], [50.7, 1091.0], [50.8, 1091.0], [50.9, 1092.0], [51.0, 1092.0], [51.1, 1096.0], [51.2, 1101.0], [51.3, 1101.0], [51.4, 1109.0], [51.5, 1109.0], [51.6, 1111.0], [51.7, 1120.0], [51.8, 1120.0], [51.9, 1125.0], [52.0, 1126.0], [52.1, 1126.0], [52.2, 1134.0], [52.3, 1134.0], [52.4, 1143.0], [52.5, 1144.0], [52.6, 1144.0], [52.7, 1145.0], [52.8, 1148.0], [52.9, 1148.0], [53.0, 1149.0], [53.1, 1149.0], [53.2, 1150.0], [53.3, 1152.0], [53.4, 1152.0], [53.5, 1161.0], [53.6, 1166.0], [53.7, 1166.0], [53.8, 1166.0], [53.9, 1166.0], [54.0, 1167.0], [54.1, 1168.0], [54.2, 1168.0], [54.3, 1174.0], [54.4, 1176.0], [54.5, 1176.0], [54.6, 1176.0], [54.7, 1176.0], [54.8, 1180.0], [54.9, 1187.0], [55.0, 1187.0], [55.1, 1190.0], [55.2, 1193.0], [55.3, 1193.0], [55.4, 1200.0], [55.5, 1200.0], [55.6, 1203.0], [55.7, 1206.0], [55.8, 1206.0], [55.9, 1228.0], [56.0, 1238.0], [56.1, 1238.0], [56.2, 1242.0], [56.3, 1251.0], [56.4, 1251.0], [56.5, 1260.0], [56.6, 1260.0], [56.7, 1261.0], [56.8, 1271.0], [56.9, 1271.0], [57.0, 1274.0], [57.1, 1278.0], [57.2, 1278.0], [57.3, 1279.0], [57.4, 1279.0], [57.5, 1315.0], [57.6, 1346.0], [57.7, 1346.0], [57.8, 1355.0], [57.9, 1382.0], [58.0, 1382.0], [58.1, 1384.0], [58.2, 1384.0], [58.3, 1403.0], [58.4, 1403.0], [58.5, 1403.0], [58.6, 1406.0], [58.7, 1416.0], [58.8, 1416.0], [58.9, 1419.0], [59.0, 1419.0], [59.1, 1433.0], [59.2, 1435.0], [59.3, 1435.0], [59.4, 1435.0], [59.5, 1439.0], [59.6, 1439.0], [59.7, 1450.0], [59.8, 1450.0], [59.9, 1459.0], [60.0, 1460.0], [60.1, 1460.0], [60.2, 1471.0], [60.3, 1479.0], [60.4, 1479.0], [60.5, 1485.0], [60.6, 1485.0], [60.7, 1488.0], [60.8, 1490.0], [60.9, 1490.0], [61.0, 1497.0], [61.1, 1515.0], [61.2, 1515.0], [61.3, 1522.0], [61.4, 1522.0], [61.5, 1536.0], [61.6, 1538.0], [61.7, 1538.0], [61.8, 1544.0], [61.9, 1553.0], [62.0, 1553.0], [62.1, 1576.0], [62.2, 1576.0], [62.3, 1590.0], [62.4, 1598.0], [62.5, 1598.0], [62.6, 1609.0], [62.7, 1610.0], [62.8, 1610.0], [62.9, 1617.0], [63.0, 1618.0], [63.1, 1618.0], [63.2, 1618.0], [63.3, 1618.0], [63.4, 1625.0], [63.5, 1626.0], [63.6, 1626.0], [63.7, 1631.0], [63.8, 1633.0], [63.9, 1633.0], [64.0, 1641.0], [64.1, 1641.0], [64.2, 1648.0], [64.3, 1651.0], [64.4, 1651.0], [64.5, 1651.0], [64.6, 1652.0], [64.7, 1652.0], [64.8, 1656.0], [64.9, 1656.0], [65.0, 1664.0], [65.1, 1677.0], [65.2, 1677.0], [65.3, 1678.0], [65.4, 1685.0], [65.5, 1685.0], [65.6, 1691.0], [65.7, 1691.0], [65.8, 1709.0], [65.9, 1715.0], [66.0, 1715.0], [66.1, 1717.0], [66.2, 1725.0], [66.3, 1725.0], [66.4, 1734.0], [66.5, 1734.0], [66.6, 1755.0], [66.7, 1782.0], [66.8, 1782.0], [66.9, 1785.0], [67.0, 1788.0], [67.1, 1788.0], [67.2, 1812.0], [67.3, 1812.0], [67.4, 1827.0], [67.5, 1829.0], [67.6, 1829.0], [67.7, 1834.0], [67.8, 1844.0], [67.9, 1844.0], [68.0, 1852.0], [68.1, 1852.0], [68.2, 1860.0], [68.3, 1864.0], [68.4, 1864.0], [68.5, 1865.0], [68.6, 1866.0], [68.7, 1866.0], [68.8, 1876.0], [68.9, 1878.0], [69.0, 1878.0], [69.1, 1890.0], [69.2, 1890.0], [69.3, 1891.0], [69.4, 1918.0], [69.5, 1918.0], [69.6, 1971.0], [69.7, 1982.0], [69.8, 1982.0], [69.9, 1987.0], [70.0, 1987.0], [70.1, 2004.0], [70.2, 2013.0], [70.3, 2013.0], [70.4, 2026.0], [70.5, 2031.0], [70.6, 2031.0], [70.7, 2037.0], [70.8, 2037.0], [70.9, 2054.0], [71.0, 2059.0], [71.1, 2059.0], [71.2, 2078.0], [71.3, 2081.0], [71.4, 2081.0], [71.5, 2102.0], [71.6, 2102.0], [71.7, 2110.0], [71.8, 2121.0], [71.9, 2121.0], [72.0, 2122.0], [72.1, 2128.0], [72.2, 2128.0], [72.3, 2131.0], [72.4, 2131.0], [72.5, 2138.0], [72.6, 2151.0], [72.7, 2151.0], [72.8, 2151.0], [72.9, 2156.0], [73.0, 2156.0], [73.1, 2160.0], [73.2, 2160.0], [73.3, 2161.0], [73.4, 2162.0], [73.5, 2162.0], [73.6, 2174.0], [73.7, 2178.0], [73.8, 2178.0], [73.9, 2186.0], [74.0, 2186.0], [74.1, 2201.0], [74.2, 2201.0], [74.3, 2201.0], [74.4, 2210.0], [74.5, 2219.0], [74.6, 2219.0], [74.7, 2221.0], [74.8, 2221.0], [74.9, 2228.0], [75.0, 2243.0], [75.1, 2243.0], [75.2, 2258.0], [75.3, 2288.0], [75.4, 2288.0], [75.5, 2299.0], [75.6, 2301.0], [75.7, 2301.0], [75.8, 2315.0], [75.9, 2315.0], [76.0, 2354.0], [76.1, 2366.0], [76.2, 2366.0], [76.3, 2404.0], [76.4, 2410.0], [76.5, 2410.0], [76.6, 2446.0], [76.7, 2446.0], [76.8, 2462.0], [76.9, 2537.0], [77.0, 2537.0], [77.1, 2574.0], [77.2, 2593.0], [77.3, 2593.0], [77.4, 2737.0], [77.5, 2737.0], [77.6, 2738.0], [77.7, 2781.0], [77.8, 2781.0], [77.9, 2791.0], [78.0, 2807.0], [78.1, 2807.0], [78.2, 2874.0], [78.3, 2874.0], [78.4, 2897.0], [78.5, 2898.0], [78.6, 2898.0], [78.7, 2930.0], [78.8, 2999.0], [78.9, 2999.0], [79.0, 3288.0], [79.1, 3288.0], [79.2, 3381.0], [79.3, 3459.0], [79.4, 3459.0], [79.5, 3482.0], [79.6, 3488.0], [79.7, 3488.0], [79.8, 3490.0], [79.9, 3490.0], [80.0, 3514.0], [80.1, 4293.0], [80.2, 4293.0], [80.3, 4350.0], [80.4, 4431.0], [80.5, 4431.0], [80.6, 4739.0], [80.7, 4739.0], [80.8, 5277.0], [80.9, 7736.0], [81.0, 7736.0], [81.1, 7817.0], [81.2, 7888.0], [81.3, 7888.0], [81.4, 19610.0], [81.5, 19883.0], [81.6, 19883.0], [81.7, 19971.0], [81.8, 19971.0], [81.9, 20486.0], [82.0, 21020.0], [82.1, 21020.0], [82.2, 21179.0], [82.3, 21271.0], [82.4, 21271.0], [82.5, 21451.0], [82.6, 21451.0], [82.7, 21639.0], [82.8, 21942.0], [82.9, 21942.0], [83.0, 21968.0], [83.1, 23258.0], [83.2, 23258.0], [83.3, 23524.0], [83.4, 23524.0], [83.5, 28484.0], [83.6, 29571.0], [83.7, 29571.0], [83.8, 29756.0], [83.9, 29803.0], [84.0, 29803.0], [84.1, 29890.0], [84.2, 29890.0], [84.3, 29962.0], [84.4, 29989.0], [84.5, 29989.0], [84.6, 29997.0], [84.7, 30005.0], [84.8, 30005.0], [84.9, 30005.0], [85.0, 30005.0], [85.1, 30044.0], [85.2, 30047.0], [85.3, 30047.0], [85.4, 30055.0], [85.5, 30056.0], [85.6, 30056.0], [85.7, 30056.0], [85.8, 30056.0], [85.9, 30060.0], [86.0, 30060.0], [86.1, 30060.0], [86.2, 30064.0], [86.3, 30068.0], [86.4, 30068.0], [86.5, 30069.0], [86.6, 30069.0], [86.7, 30073.0], [86.8, 30074.0], [86.9, 30074.0], [87.0, 30076.0], [87.1, 30076.0], [87.2, 30076.0], [87.3, 30077.0], [87.4, 30077.0], [87.5, 30077.0], [87.6, 30081.0], [87.7, 30081.0], [87.8, 30081.0], [87.9, 30084.0], [88.0, 30084.0], [88.1, 30085.0], [88.2, 30086.0], [88.3, 30086.0], [88.4, 30086.0], [88.5, 30086.0], [88.6, 30088.0], [88.7, 30092.0], [88.8, 30092.0], [88.9, 30094.0], [89.0, 30100.0], [89.1, 30100.0], [89.2, 30100.0], [89.3, 30100.0], [89.4, 30107.0], [89.5, 30107.0], [89.6, 30107.0], [89.7, 30108.0], [89.8, 30108.0], [89.9, 30108.0], [90.0, 30112.0], [90.1, 30112.0], [90.2, 30113.0], [90.3, 30114.0], [90.4, 30114.0], [90.5, 30114.0], [90.6, 30116.0], [90.7, 30116.0], [90.8, 30117.0], [90.9, 30117.0], [91.0, 30122.0], [91.1, 30127.0], [91.2, 30127.0], [91.3, 30129.0], [91.4, 30132.0], [91.5, 30132.0], [91.6, 30134.0], [91.7, 30134.0], [91.8, 30137.0], [91.9, 30138.0], [92.0, 30138.0], [92.1, 30139.0], [92.2, 30140.0], [92.3, 30140.0], [92.4, 30145.0], [92.5, 30145.0], [92.6, 30151.0], [92.7, 30152.0], [92.8, 30152.0], [92.9, 30160.0], [93.0, 30160.0], [93.1, 30160.0], [93.2, 30162.0], [93.3, 30162.0], [93.4, 30163.0], [93.5, 30165.0], [93.6, 30165.0], [93.7, 30203.0], [93.8, 30204.0], [93.9, 30204.0], [94.0, 30224.0], [94.1, 30229.0], [94.2, 30229.0], [94.3, 30246.0], [94.4, 30246.0], [94.5, 30258.0], [94.6, 30264.0], [94.7, 30264.0], [94.8, 30313.0], [94.9, 30344.0], [95.0, 30344.0], [95.1, 30355.0], [95.2, 30355.0], [95.3, 30367.0], [95.4, 30367.0], [95.5, 30367.0], [95.6, 30377.0], [95.7, 30382.0], [95.8, 30382.0], [95.9, 30383.0], [96.0, 30383.0], [96.1, 30383.0], [96.2, 30404.0], [96.3, 30404.0], [96.4, 30413.0], [96.5, 30439.0], [96.6, 30439.0], [96.7, 30440.0], [96.8, 30440.0], [96.9, 30448.0], [97.0, 30466.0], [97.1, 30466.0], [97.2, 30497.0], [97.3, 30513.0], [97.4, 30513.0], [97.5, 30518.0], [97.6, 30518.0], [97.7, 30535.0], [97.8, 30553.0], [97.9, 30553.0], [98.0, 30554.0], [98.1, 30555.0], [98.2, 30555.0], [98.3, 30562.0], [98.4, 30562.0], [98.5, 30594.0], [98.6, 30601.0], [98.7, 30601.0], [98.8, 30623.0], [98.9, 30627.0], [99.0, 30627.0], [99.1, 30732.0], [99.2, 30732.0], [99.3, 48639.0], [99.4, 48881.0], [99.5, 48881.0], [99.6, 49143.0], [99.7, 49237.0], [99.8, 49237.0], [99.9, 62305.0], [100.0, 62305.0]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[0.0, 49.0], [0.1, 49.0], [0.2, 50.0], [0.3, 50.0], [0.4, 50.0], [0.5, 51.0], [0.6, 51.0], [0.7, 51.0], [0.8, 51.0], [0.9, 51.0], [1.0, 51.0], [1.1, 51.0], [1.2, 52.0], [1.3, 52.0], [1.4, 52.0], [1.5, 52.0], [1.6, 52.0], [1.7, 52.0], [1.8, 52.0], [1.9, 52.0], [2.0, 52.0], [2.1, 52.0], [2.2, 52.0], [2.3, 52.0], [2.4, 52.0], [2.5, 52.0], [2.6, 52.0], [2.7, 52.0], [2.8, 52.0], [2.9, 52.0], [3.0, 52.0], [3.1, 53.0], [3.2, 53.0], [3.3, 53.0], [3.4, 53.0], [3.5, 53.0], [3.6, 53.0], [3.7, 53.0], [3.8, 53.0], [3.9, 53.0], [4.0, 53.0], [4.1, 53.0], [4.2, 53.0], [4.3, 53.0], [4.4, 53.0], [4.5, 53.0], [4.6, 53.0], [4.7, 53.0], [4.8, 53.0], [4.9, 53.0], [5.0, 53.0], [5.1, 53.0], [5.2, 53.0], [5.3, 53.0], [5.4, 54.0], [5.5, 54.0], [5.6, 54.0], [5.7, 54.0], [5.8, 54.0], [5.9, 54.0], [6.0, 54.0], [6.1, 54.0], [6.2, 54.0], [6.3, 54.0], [6.4, 54.0], [6.5, 54.0], [6.6, 54.0], [6.7, 54.0], [6.8, 54.0], [6.9, 54.0], [7.0, 54.0], [7.1, 55.0], [7.2, 55.0], [7.3, 55.0], [7.4, 55.0], [7.5, 55.0], [7.6, 55.0], [7.7, 55.0], [7.8, 55.0], [7.9, 55.0], [8.0, 55.0], [8.1, 55.0], [8.2, 55.0], [8.3, 55.0], [8.4, 56.0], [8.5, 56.0], [8.6, 56.0], [8.7, 56.0], [8.8, 56.0], [8.9, 56.0], [9.0, 56.0], [9.1, 56.0], [9.2, 56.0], [9.3, 56.0], [9.4, 56.0], [9.5, 57.0], [9.6, 57.0], [9.7, 57.0], [9.8, 57.0], [9.9, 57.0], [10.0, 57.0], [10.1, 57.0], [10.2, 57.0], [10.3, 57.0], [10.4, 57.0], [10.5, 57.0], [10.6, 58.0], [10.7, 58.0], [10.8, 58.0], [10.9, 58.0], [11.0, 58.0], [11.1, 58.0], [11.2, 58.0], [11.3, 58.0], [11.4, 58.0], [11.5, 58.0], [11.6, 58.0], [11.7, 58.0], [11.8, 58.0], [11.9, 58.0], [12.0, 58.0], [12.1, 58.0], [12.2, 58.0], [12.3, 59.0], [12.4, 59.0], [12.5, 59.0], [12.6, 59.0], [12.7, 59.0], [12.8, 59.0], [12.9, 59.0], [13.0, 59.0], [13.1, 59.0], [13.2, 59.0], [13.3, 59.0], [13.4, 60.0], [13.5, 60.0], [13.6, 60.0], [13.7, 60.0], [13.8, 60.0], [13.9, 60.0], [14.0, 60.0], [14.1, 60.0], [14.2, 61.0], [14.3, 61.0], [14.4, 61.0], [14.5, 61.0], [14.6, 61.0], [14.7, 62.0], [14.8, 62.0], [14.9, 62.0], [15.0, 63.0], [15.1, 63.0], [15.2, 63.0], [15.3, 63.0], [15.4, 63.0], [15.5, 63.0], [15.6, 63.0], [15.7, 63.0], [15.8, 63.0], [15.9, 63.0], [16.0, 63.0], [16.1, 63.0], [16.2, 63.0], [16.3, 63.0], [16.4, 63.0], [16.5, 64.0], [16.6, 64.0], [16.7, 64.0], [16.8, 64.0], [16.9, 64.0], [17.0, 65.0], [17.1, 65.0], [17.2, 65.0], [17.3, 65.0], [17.4, 65.0], [17.5, 65.0], [17.6, 65.0], [17.7, 65.0], [17.8, 65.0], [17.9, 65.0], [18.0, 65.0], [18.1, 66.0], [18.2, 66.0], [18.3, 66.0], [18.4, 66.0], [18.5, 66.0], [18.6, 66.0], [18.7, 66.0], [18.8, 66.0], [18.9, 66.0], [19.0, 66.0], [19.1, 67.0], [19.2, 67.0], [19.3, 67.0], [19.4, 67.0], [19.5, 67.0], [19.6, 68.0], [19.7, 68.0], [19.8, 69.0], [19.9, 69.0], [20.0, 69.0], [20.1, 69.0], [20.2, 70.0], [20.3, 70.0], [20.4, 70.0], [20.5, 70.0], [20.6, 70.0], [20.7, 70.0], [20.8, 70.0], [20.9, 70.0], [21.0, 70.0], [21.1, 70.0], [21.2, 71.0], [21.3, 71.0], [21.4, 71.0], [21.5, 72.0], [21.6, 72.0], [21.7, 72.0], [21.8, 72.0], [21.9, 73.0], [22.0, 74.0], [22.1, 74.0], [22.2, 74.0], [22.3, 74.0], [22.4, 77.0], [22.5, 77.0], [22.6, 77.0], [22.7, 78.0], [22.8, 78.0], [22.9, 79.0], [23.0, 80.0], [23.1, 80.0], [23.2, 80.0], [23.3, 81.0], [23.4, 81.0], [23.5, 84.0], [23.6, 84.0], [23.7, 90.0], [23.8, 94.0], [23.9, 94.0], [24.0, 95.0], [24.1, 95.0], [24.2, 96.0], [24.3, 98.0], [24.4, 98.0], [24.5, 98.0], [24.6, 98.0], [24.7, 98.0], [24.8, 99.0], [24.9, 99.0], [25.0, 99.0], [25.1, 100.0], [25.2, 100.0], [25.3, 100.0], [25.4, 100.0], [25.5, 100.0], [25.6, 100.0], [25.7, 100.0], [25.8, 100.0], [25.9, 100.0], [26.0, 100.0], [26.1, 101.0], [26.2, 101.0], [26.3, 101.0], [26.4, 101.0], [26.5, 101.0], [26.6, 101.0], [26.7, 101.0], [26.8, 101.0], [26.9, 102.0], [27.0, 102.0], [27.1, 102.0], [27.2, 102.0], [27.3, 102.0], [27.4, 102.0], [27.5, 102.0], [27.6, 102.0], [27.7, 102.0], [27.8, 102.0], [27.9, 103.0], [28.0, 103.0], [28.1, 103.0], [28.2, 103.0], [28.3, 103.0], [28.4, 103.0], [28.5, 103.0], [28.6, 103.0], [28.7, 104.0], [28.8, 104.0], [28.9, 104.0], [29.0, 104.0], [29.1, 104.0], [29.2, 104.0], [29.3, 104.0], [29.4, 104.0], [29.5, 104.0], [29.6, 104.0], [29.7, 104.0], [29.8, 104.0], [29.9, 104.0], [30.0, 105.0], [30.1, 105.0], [30.2, 105.0], [30.3, 105.0], [30.4, 105.0], [30.5, 105.0], [30.6, 105.0], [30.7, 105.0], [30.8, 106.0], [30.9, 106.0], [31.0, 106.0], [31.1, 106.0], [31.2, 106.0], [31.3, 106.0], [31.4, 106.0], [31.5, 106.0], [31.6, 106.0], [31.7, 106.0], [31.8, 106.0], [31.9, 106.0], [32.0, 106.0], [32.1, 106.0], [32.2, 106.0], [32.3, 107.0], [32.4, 107.0], [32.5, 107.0], [32.6, 107.0], [32.7, 107.0], [32.8, 108.0], [32.9, 108.0], [33.0, 108.0], [33.1, 108.0], [33.2, 108.0], [33.3, 108.0], [33.4, 108.0], [33.5, 108.0], [33.6, 108.0], [33.7, 108.0], [33.8, 109.0], [33.9, 109.0], [34.0, 109.0], [34.1, 109.0], [34.2, 109.0], [34.3, 109.0], [34.4, 109.0], [34.5, 109.0], [34.6, 109.0], [34.7, 109.0], [34.8, 109.0], [34.9, 111.0], [35.0, 111.0], [35.1, 111.0], [35.2, 111.0], [35.3, 111.0], [35.4, 111.0], [35.5, 111.0], [35.6, 111.0], [35.7, 112.0], [35.8, 112.0], [35.9, 113.0], [36.0, 113.0], [36.1, 113.0], [36.2, 113.0], [36.3, 113.0], [36.4, 113.0], [36.5, 113.0], [36.6, 113.0], [36.7, 113.0], [36.8, 113.0], [36.9, 113.0], [37.0, 114.0], [37.1, 114.0], [37.2, 114.0], [37.3, 115.0], [37.4, 115.0], [37.5, 115.0], [37.6, 115.0], [37.7, 115.0], [37.8, 115.0], [37.9, 115.0], [38.0, 116.0], [38.1, 116.0], [38.2, 116.0], [38.3, 116.0], [38.4, 116.0], [38.5, 116.0], [38.6, 117.0], [38.7, 117.0], [38.8, 117.0], [38.9, 117.0], [39.0, 118.0], [39.1, 118.0], [39.2, 118.0], [39.3, 118.0], [39.4, 118.0], [39.5, 118.0], [39.6, 119.0], [39.7, 119.0], [39.8, 119.0], [39.9, 119.0], [40.0, 119.0], [40.1, 120.0], [40.2, 120.0], [40.3, 120.0], [40.4, 120.0], [40.5, 120.0], [40.6, 120.0], [40.7, 120.0], [40.8, 120.0], [40.9, 121.0], [41.0, 121.0], [41.1, 121.0], [41.2, 121.0], [41.3, 121.0], [41.4, 122.0], [41.5, 122.0], [41.6, 122.0], [41.7, 122.0], [41.8, 122.0], [41.9, 122.0], [42.0, 122.0], [42.1, 123.0], [42.2, 123.0], [42.3, 123.0], [42.4, 123.0], [42.5, 123.0], [42.6, 123.0], [42.7, 123.0], [42.8, 123.0], [42.9, 123.0], [43.0, 124.0], [43.1, 124.0], [43.2, 124.0], [43.3, 124.0], [43.4, 124.0], [43.5, 124.0], [43.6, 124.0], [43.7, 124.0], [43.8, 124.0], [43.9, 124.0], [44.0, 125.0], [44.1, 125.0], [44.2, 125.0], [44.3, 125.0], [44.4, 125.0], [44.5, 126.0], [44.6, 126.0], [44.7, 126.0], [44.8, 126.0], [44.9, 126.0], [45.0, 126.0], [45.1, 126.0], [45.2, 126.0], [45.3, 126.0], [45.4, 126.0], [45.5, 127.0], [45.6, 127.0], [45.7, 127.0], [45.8, 127.0], [45.9, 127.0], [46.0, 127.0], [46.1, 129.0], [46.2, 129.0], [46.3, 129.0], [46.4, 129.0], [46.5, 130.0], [46.6, 130.0], [46.7, 130.0], [46.8, 130.0], [46.9, 130.0], [47.0, 130.0], [47.1, 131.0], [47.2, 131.0], [47.3, 131.0], [47.4, 131.0], [47.5, 131.0], [47.6, 132.0], [47.7, 132.0], [47.8, 132.0], [47.9, 132.0], [48.0, 132.0], [48.1, 132.0], [48.2, 132.0], [48.3, 132.0], [48.4, 132.0], [48.5, 132.0], [48.6, 132.0], [48.7, 133.0], [48.8, 133.0], [48.9, 133.0], [49.0, 133.0], [49.1, 134.0], [49.2, 134.0], [49.3, 134.0], [49.4, 135.0], [49.5, 135.0], [49.6, 135.0], [49.7, 136.0], [49.8, 136.0], [49.9, 137.0], [50.0, 137.0], [50.1, 137.0], [50.2, 137.0], [50.3, 137.0], [50.4, 138.0], [50.5, 138.0], [50.6, 138.0], [50.7, 139.0], [50.8, 139.0], [50.9, 139.0], [51.0, 139.0], [51.1, 139.0], [51.2, 140.0], [51.3, 140.0], [51.4, 141.0], [51.5, 141.0], [51.6, 141.0], [51.7, 141.0], [51.8, 142.0], [51.9, 142.0], [52.0, 142.0], [52.1, 142.0], [52.2, 142.0], [52.3, 142.0], [52.4, 142.0], [52.5, 143.0], [52.6, 143.0], [52.7, 144.0], [52.8, 144.0], [52.9, 144.0], [53.0, 144.0], [53.1, 144.0], [53.2, 144.0], [53.3, 144.0], [53.4, 144.0], [53.5, 144.0], [53.6, 146.0], [53.7, 146.0], [53.8, 147.0], [53.9, 147.0], [54.0, 149.0], [54.1, 150.0], [54.2, 150.0], [54.3, 151.0], [54.4, 152.0], [54.5, 152.0], [54.6, 152.0], [54.7, 152.0], [54.8, 152.0], [54.9, 152.0], [55.0, 152.0], [55.1, 153.0], [55.2, 153.0], [55.3, 154.0], [55.4, 154.0], [55.5, 154.0], [55.6, 156.0], [55.7, 156.0], [55.8, 157.0], [55.9, 160.0], [56.0, 160.0], [56.1, 160.0], [56.2, 162.0], [56.3, 162.0], [56.4, 165.0], [56.5, 165.0], [56.6, 165.0], [56.7, 165.0], [56.8, 165.0], [56.9, 168.0], [57.0, 168.0], [57.1, 168.0], [57.2, 170.0], [57.3, 170.0], [57.4, 170.0], [57.5, 171.0], [57.6, 171.0], [57.7, 176.0], [57.8, 176.0], [57.9, 176.0], [58.0, 176.0], [58.1, 176.0], [58.2, 176.0], [58.3, 176.0], [58.4, 178.0], [58.5, 178.0], [58.6, 178.0], [58.7, 179.0], [58.8, 179.0], [58.9, 179.0], [59.0, 179.0], [59.1, 179.0], [59.2, 180.0], [59.3, 181.0], [59.4, 181.0], [59.5, 182.0], [59.6, 182.0], [59.7, 183.0], [59.8, 183.0], [59.9, 183.0], [60.0, 184.0], [60.1, 185.0], [60.2, 185.0], [60.3, 186.0], [60.4, 186.0], [60.5, 186.0], [60.6, 187.0], [60.7, 187.0], [60.8, 189.0], [60.9, 189.0], [61.0, 194.0], [61.1, 194.0], [61.2, 194.0], [61.3, 194.0], [61.4, 194.0], [61.5, 194.0], [61.6, 196.0], [61.7, 196.0], [61.8, 197.0], [61.9, 197.0], [62.0, 197.0], [62.1, 198.0], [62.2, 198.0], [62.3, 198.0], [62.4, 199.0], [62.5, 199.0], [62.6, 203.0], [62.7, 203.0], [62.8, 203.0], [62.9, 203.0], [63.0, 203.0], [63.1, 205.0], [63.2, 205.0], [63.3, 205.0], [63.4, 205.0], [63.5, 205.0], [63.6, 205.0], [63.7, 206.0], [63.8, 206.0], [63.9, 207.0], [64.0, 207.0], [64.1, 207.0], [64.2, 209.0], [64.3, 209.0], [64.4, 210.0], [64.5, 213.0], [64.6, 213.0], [64.7, 213.0], [64.8, 213.0], [64.9, 214.0], [65.0, 216.0], [65.1, 216.0], [65.2, 217.0], [65.3, 217.0], [65.4, 218.0], [65.5, 221.0], [65.6, 221.0], [65.7, 222.0], [65.8, 225.0], [65.9, 225.0], [66.0, 227.0], [66.1, 227.0], [66.2, 227.0], [66.3, 234.0], [66.4, 234.0], [66.5, 243.0], [66.6, 243.0], [66.7, 243.0], [66.8, 245.0], [66.9, 245.0], [67.0, 246.0], [67.1, 246.0], [67.2, 248.0], [67.3, 252.0], [67.4, 252.0], [67.5, 254.0], [67.6, 256.0], [67.7, 256.0], [67.8, 257.0], [67.9, 257.0], [68.0, 257.0], [68.1, 257.0], [68.2, 257.0], [68.3, 258.0], [68.4, 258.0], [68.5, 259.0], [68.6, 259.0], [68.7, 259.0], [68.8, 260.0], [68.9, 265.0], [69.0, 265.0], [69.1, 266.0], [69.2, 266.0], [69.3, 267.0], [69.4, 267.0], [69.5, 267.0], [69.6, 268.0], [69.7, 268.0], [69.8, 268.0], [69.9, 268.0], [70.0, 268.0], [70.1, 269.0], [70.2, 269.0], [70.3, 269.0], [70.4, 270.0], [70.5, 270.0], [70.6, 270.0], [70.7, 271.0], [70.8, 271.0], [70.9, 271.0], [71.0, 271.0], [71.1, 271.0], [71.2, 272.0], [71.3, 272.0], [71.4, 272.0], [71.5, 273.0], [71.6, 273.0], [71.7, 273.0], [71.8, 273.0], [71.9, 274.0], [72.0, 275.0], [72.1, 275.0], [72.2, 275.0], [72.3, 275.0], [72.4, 276.0], [72.5, 278.0], [72.6, 278.0], [72.7, 278.0], [72.8, 278.0], [72.9, 279.0], [73.0, 280.0], [73.1, 280.0], [73.2, 281.0], [73.3, 281.0], [73.4, 281.0], [73.5, 283.0], [73.6, 283.0], [73.7, 283.0], [73.8, 286.0], [73.9, 286.0], [74.0, 288.0], [74.1, 288.0], [74.2, 290.0], [74.3, 295.0], [74.4, 295.0], [74.5, 301.0], [74.6, 304.0], [74.7, 304.0], [74.8, 304.0], [74.9, 304.0], [75.0, 306.0], [75.1, 308.0], [75.2, 308.0], [75.3, 308.0], [75.4, 308.0], [75.5, 310.0], [75.6, 313.0], [75.7, 313.0], [75.8, 315.0], [75.9, 316.0], [76.0, 316.0], [76.1, 317.0], [76.2, 317.0], [76.3, 317.0], [76.4, 317.0], [76.5, 317.0], [76.6, 320.0], [76.7, 320.0], [76.8, 321.0], [76.9, 324.0], [77.0, 324.0], [77.1, 324.0], [77.2, 330.0], [77.3, 330.0], [77.4, 331.0], [77.5, 331.0], [77.6, 331.0], [77.7, 331.0], [77.8, 331.0], [77.9, 336.0], [78.0, 336.0], [78.1, 338.0], [78.2, 338.0], [78.3, 338.0], [78.4, 341.0], [78.5, 341.0], [78.6, 341.0], [78.7, 342.0], [78.8, 342.0], [78.9, 351.0], [79.0, 352.0], [79.1, 352.0], [79.2, 355.0], [79.3, 355.0], [79.4, 358.0], [79.5, 360.0], [79.6, 360.0], [79.7, 367.0], [79.8, 367.0], [79.9, 374.0], [80.0, 374.0], [80.1, 374.0], [80.2, 374.0], [80.3, 378.0], [80.4, 378.0], [80.5, 381.0], [80.6, 381.0], [80.7, 386.0], [80.8, 390.0], [80.9, 390.0], [81.0, 396.0], [81.1, 396.0], [81.2, 411.0], [81.3, 421.0], [81.4, 421.0], [81.5, 422.0], [81.6, 426.0], [81.7, 426.0], [81.8, 436.0], [81.9, 436.0], [82.0, 436.0], [82.1, 441.0], [82.2, 441.0], [82.3, 448.0], [82.4, 448.0], [82.5, 450.0], [82.6, 452.0], [82.7, 452.0], [82.8, 452.0], [82.9, 453.0], [83.0, 453.0], [83.1, 455.0], [83.2, 455.0], [83.3, 472.0], [83.4, 483.0], [83.5, 483.0], [83.6, 484.0], [83.7, 484.0], [83.8, 506.0], [83.9, 506.0], [84.0, 506.0], [84.1, 506.0], [84.2, 506.0], [84.3, 510.0], [84.4, 513.0], [84.5, 513.0], [84.6, 513.0], [84.7, 513.0], [84.8, 513.0], [84.9, 516.0], [85.0, 516.0], [85.1, 520.0], [85.2, 522.0], [85.3, 522.0], [85.4, 524.0], [85.5, 524.0], [85.6, 525.0], [85.7, 535.0], [85.8, 535.0], [85.9, 535.0], [86.0, 539.0], [86.1, 539.0], [86.2, 543.0], [86.3, 543.0], [86.4, 545.0], [86.5, 546.0], [86.6, 546.0], [86.7, 547.0], [86.8, 547.0], [86.9, 548.0], [87.0, 549.0], [87.1, 549.0], [87.2, 551.0], [87.3, 553.0], [87.4, 553.0], [87.5, 557.0], [87.6, 557.0], [87.7, 560.0], [87.8, 562.0], [87.9, 562.0], [88.0, 563.0], [88.1, 563.0], [88.2, 567.0], [88.3, 572.0], [88.4, 572.0], [88.5, 579.0], [88.6, 581.0], [88.7, 581.0], [88.8, 583.0], [88.9, 583.0], [89.0, 587.0], [89.1, 609.0], [89.2, 609.0], [89.3, 617.0], [89.4, 617.0], [89.5, 619.0], [89.6, 622.0], [89.7, 622.0], [89.8, 627.0], [89.9, 627.0], [90.0, 630.0], [90.1, 631.0], [90.2, 631.0], [90.3, 635.0], [90.4, 642.0], [90.5, 642.0], [90.6, 642.0], [90.7, 642.0], [90.8, 644.0], [90.9, 668.0], [91.0, 668.0], [91.1, 670.0], [91.2, 670.0], [91.3, 674.0], [91.4, 679.0], [91.5, 679.0], [91.6, 692.0], [91.7, 698.0], [91.8, 698.0], [91.9, 726.0], [92.0, 726.0], [92.1, 751.0], [92.2, 751.0], [92.3, 751.0], [92.4, 779.0], [92.5, 779.0], [92.6, 794.0], [92.7, 834.0], [92.8, 834.0], [92.9, 860.0], [93.0, 865.0], [93.1, 865.0], [93.2, 887.0], [93.3, 887.0], [93.4, 900.0], [93.5, 935.0], [93.6, 935.0], [93.7, 1056.0], [93.8, 1056.0], [93.9, 1077.0], [94.0, 1082.0], [94.1, 1082.0], [94.2, 1093.0], [94.3, 1099.0], [94.4, 1099.0], [94.5, 1115.0], [94.6, 1115.0], [94.7, 1237.0], [94.8, 1248.0], [94.9, 1248.0], [95.0, 1339.0], [95.1, 1339.0], [95.2, 1363.0], [95.3, 1367.0], [95.4, 1367.0], [95.5, 1434.0], [95.6, 1434.0], [95.7, 1471.0], [95.8, 2144.0], [95.9, 2144.0], [96.0, 2215.0], [96.1, 2635.0], [96.2, 2635.0], [96.3, 3483.0], [96.4, 3483.0], [96.5, 3572.0], [96.6, 4436.0], [96.7, 4436.0], [96.8, 4508.0], [96.9, 4508.0], [97.0, 6303.0], [97.1, 7161.0], [97.2, 7161.0], [97.3, 7279.0], [97.4, 7333.0], [97.5, 7333.0], [97.6, 7596.0], [97.7, 7596.0], [97.8, 7687.0], [97.9, 7909.0], [98.0, 7909.0], [98.1, 8260.0], [98.2, 8260.0], [98.3, 8305.0], [98.4, 9137.0], [98.5, 9137.0], [98.6, 16884.0], [98.7, 18695.0], [98.8, 18695.0], [98.9, 18718.0], [99.0, 18718.0], [99.1, 18749.0], [99.2, 18830.0], [99.3, 18830.0], [99.4, 18910.0], [99.5, 18910.0], [99.6, 18925.0], [99.7, 19171.0], [99.8, 19171.0], [99.9, 19253.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 251.0, "series": [{"data": [[0.0, 251.0], [600.0, 3.0], [800.0, 2.0], [900.0, 2.0], [1000.0, 1.0], [1100.0, 3.0], [1400.0, 1.0], [1500.0, 1.0], [1600.0, 2.0], [1900.0, 3.0], [2000.0, 2.0], [2100.0, 1.0], [2800.0, 2.0], [2900.0, 1.0], [3400.0, 1.0], [4800.0, 1.0], [100.0, 41.0], [29900.0, 2.0], [30100.0, 40.0], [30000.0, 60.0], [30300.0, 14.0], [30600.0, 9.0], [30500.0, 5.0], [30200.0, 22.0], [29700.0, 4.0], [29800.0, 3.0], [30400.0, 7.0], [30900.0, 1.0], [31000.0, 4.0], [30800.0, 6.0], [31400.0, 1.0], [31600.0, 2.0], [31500.0, 3.0], [31200.0, 1.0], [31700.0, 1.0], [31900.0, 1.0], [32600.0, 1.0], [32700.0, 2.0], [33400.0, 1.0], [41400.0, 1.0], [44000.0, 1.0], [46900.0, 1.0], [45100.0, 3.0], [45600.0, 3.0], [47200.0, 1.0], [49700.0, 1.0], [49800.0, 1.0], [200.0, 17.0], [59300.0, 1.0], [57900.0, 2.0], [60100.0, 6.0], [60000.0, 3.0], [60200.0, 14.0], [59900.0, 4.0], [59600.0, 8.0], [60300.0, 5.0], [300.0, 17.0], [400.0, 3.0], [500.0, 14.0]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[600.0, 28.0], [700.0, 38.0], [800.0, 23.0], [900.0, 12.0], [1000.0, 16.0], [1100.0, 23.0], [1200.0, 21.0], [1300.0, 18.0], [1400.0, 16.0], [1500.0, 11.0], [1600.0, 7.0], [1700.0, 12.0], [1800.0, 8.0], [1900.0, 13.0], [2000.0, 8.0], [2100.0, 9.0], [2300.0, 6.0], [2200.0, 4.0], [2400.0, 7.0], [2500.0, 9.0], [2600.0, 8.0], [2800.0, 6.0], [2700.0, 7.0], [2900.0, 15.0], [3000.0, 10.0], [3100.0, 5.0], [3300.0, 2.0], [3200.0, 9.0], [3400.0, 3.0], [3500.0, 5.0], [3700.0, 5.0], [3600.0, 2.0], [3800.0, 3.0], [4000.0, 1.0], [4300.0, 3.0], [4100.0, 1.0], [4200.0, 1.0], [4400.0, 1.0], [4500.0, 1.0], [4600.0, 1.0], [4700.0, 4.0], [4800.0, 1.0], [5000.0, 1.0], [5100.0, 1.0], [4900.0, 1.0], [5200.0, 1.0], [5500.0, 2.0], [5400.0, 1.0], [5600.0, 1.0], [5700.0, 1.0], [7900.0, 1.0], [7700.0, 1.0], [8600.0, 1.0], [8900.0, 1.0], [10400.0, 1.0], [20000.0, 2.0], [19800.0, 1.0], [19900.0, 2.0], [20600.0, 1.0], [21300.0, 2.0], [21400.0, 2.0], [22000.0, 4.0], [22200.0, 2.0], [22100.0, 3.0], [100.0, 1.0], [28600.0, 1.0], [29500.0, 1.0], [29300.0, 1.0], [29200.0, 3.0], [28900.0, 1.0], [30100.0, 39.0], [30000.0, 1.0], [30500.0, 12.0], [30200.0, 23.0], [30300.0, 24.0], [30400.0, 20.0], [30600.0, 6.0], [29800.0, 3.0], [29900.0, 2.0], [31500.0, 1.0], [31200.0, 1.0], [31100.0, 2.0], [33700.0, 1.0], [36100.0, 1.0], [49000.0, 1.0], [48500.0, 1.0], [48900.0, 1.0], [49400.0, 1.0], [49300.0, 1.0], [200.0, 10.0], [62700.0, 1.0], [67200.0, 1.0], [300.0, 18.0], [400.0, 24.0], [500.0, 23.0]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[0.0, 7.0], [600.0, 39.0], [700.0, 15.0], [800.0, 13.0], [900.0, 23.0], [1000.0, 17.0], [1100.0, 26.0], [1200.0, 13.0], [1300.0, 5.0], [1400.0, 18.0], [1500.0, 9.0], [1600.0, 20.0], [1700.0, 9.0], [1800.0, 14.0], [1900.0, 4.0], [2000.0, 9.0], [2100.0, 16.0], [2300.0, 4.0], [2200.0, 10.0], [2400.0, 4.0], [2500.0, 3.0], [2700.0, 4.0], [2800.0, 4.0], [2900.0, 2.0], [3200.0, 1.0], [3300.0, 1.0], [3400.0, 4.0], [3500.0, 1.0], [4300.0, 1.0], [4200.0, 1.0], [4400.0, 1.0], [4700.0, 1.0], [5200.0, 1.0], [7800.0, 2.0], [7700.0, 1.0], [19600.0, 1.0], [19900.0, 1.0], [19800.0, 1.0], [20400.0, 1.0], [21000.0, 1.0], [21400.0, 1.0], [21100.0, 1.0], [21200.0, 1.0], [21600.0, 1.0], [21900.0, 2.0], [23200.0, 1.0], [23500.0, 1.0], [100.0, 57.0], [28400.0, 1.0], [29500.0, 1.0], [29900.0, 3.0], [30200.0, 7.0], [29700.0, 1.0], [30100.0, 29.0], [30300.0, 9.0], [30700.0, 1.0], [30500.0, 8.0], [30600.0, 3.0], [29800.0, 2.0], [30000.0, 27.0], [30400.0, 7.0], [48600.0, 1.0], [48800.0, 1.0], [49100.0, 1.0], [49200.0, 1.0], [200.0, 45.0], [62300.0, 1.0], [300.0, 49.0], [400.0, 25.0], [500.0, 31.0]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[0.0, 154.0], [8200.0, 1.0], [8300.0, 1.0], [9100.0, 1.0], [600.0, 17.0], [700.0, 5.0], [800.0, 4.0], [900.0, 2.0], [1000.0, 5.0], [16800.0, 1.0], [1100.0, 1.0], [1200.0, 2.0], [18800.0, 1.0], [18900.0, 2.0], [18600.0, 1.0], [19100.0, 1.0], [19200.0, 1.0], [18700.0, 2.0], [1300.0, 3.0], [1400.0, 2.0], [100.0, 230.0], [2100.0, 1.0], [2200.0, 1.0], [2600.0, 1.0], [200.0, 73.0], [3400.0, 1.0], [3500.0, 1.0], [4500.0, 1.0], [4400.0, 1.0], [300.0, 41.0], [6300.0, 1.0], [400.0, 16.0], [7100.0, 1.0], [7300.0, 1.0], [7200.0, 1.0], [7600.0, 1.0], [7500.0, 1.0], [7900.0, 1.0], [500.0, 33.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 67200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 519.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1079.0, "series": [{"data": [[0.0, 1079.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 519.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 899.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 12.7, "minX": 1.55897718E12, "maxY": 65.0, "series": [{"data": [[1.5589773E12, 65.0], [1.55897718E12, 65.0], [1.55897748E12, 55.28476821192053], [1.55897754E12, 12.7], [1.55897736E12, 65.0], [1.55897742E12, 64.6144578313253], [1.55897724E12, 65.0]], "isOverall": false, "label": "stand-alone-test", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55897754E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 174.0, "minX": 1.0, "maxY": 62305.0, "series": [{"data": [[33.0, 30081.0], [41.0, 30069.0], [43.0, 30098.0], [45.0, 242.0], [47.0, 30404.0], [46.0, 223.0], [3.0, 30371.0], [51.0, 30409.0], [50.0, 30412.0], [53.0, 30135.0], [52.0, 30145.0], [55.0, 174.0], [59.0, 30228.0], [61.0, 30116.0], [62.0, 30180.0], [65.0, 13370.911611785097], [4.0, 30347.0], [5.0, 60297.0], [7.0, 45311.0], [9.0, 30302.0], [11.0, 30380.0], [12.0, 60200.333333333336], [14.0, 60286.0], [1.0, 31085.0], [17.0, 60268.666666666664], [21.0, 30064.0], [23.0, 30062.0], [25.0, 30064.0], [29.0, 30073.0]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[62.811074918566746, 14632.516286644954]], "isOverall": false, "label": "BuyBook-Aggregated", "isController": false}, {"data": [[33.0, 30143.5], [32.0, 30159.0], [34.0, 30118.0], [39.0, 30147.0], [43.0, 30162.0], [50.0, 30192.0], [57.0, 30337.0], [58.0, 30317.0], [65.0, 8747.620414673038], [18.0, 31162.0], [20.0, 30120.0], [22.0, 31113.0], [26.0, 30133.0], [27.0, 30142.0], [28.0, 30139.0]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[64.29127725856696, 9251.22429906541]], "isOverall": false, "label": "SearchBooks-Aggregated", "isController": false}, {"data": [[65.0, 5948.282926829271], [64.0, 30114.0], [36.0, 30076.5], [38.0, 30101.0], [19.0, 62305.0], [40.0, 30081.0], [24.0, 30081.0], [50.0, 30246.0], [57.0, 30134.0], [60.0, 30377.0], [63.0, 30367.0]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[64.59330143540672, 6462.925039872409]], "isOverall": false, "label": "GetBook-Aggregated", "isController": false}, {"data": [[65.0, 653.509771986971]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[65.0, 653.509771986971]], "isOverall": false, "label": "Login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 65.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 29.833333333333332, "minX": 1.55897718E12, "maxY": 129571.65, "series": [{"data": [[1.5589773E12, 129571.65], [1.55897718E12, 23446.6], [1.55897748E12, 11087.933333333332], [1.55897754E12, 64.66666666666667], [1.55897736E12, 24021.083333333332], [1.55897742E12, 7560.0], [1.55897724E12, 22467.466666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.5589773E12, 3513.0833333333335], [1.55897718E12, 609.1166666666667], [1.55897748E12, 388.06666666666666], [1.55897754E12, 29.833333333333332], [1.55897736E12, 808.0], [1.55897742E12, 433.43333333333334], [1.55897724E12, 653.3333333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55897754E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 116.51562499999996, "minX": 1.55897718E12, "maxY": 60256.3, "series": [{"data": [[1.5589773E12, 2439.6012269938637], [1.55897718E12, 25194.434782608703], [1.55897748E12, 24997.352941176465], [1.55897754E12, 60256.3], [1.55897736E12, 25044.08860759493], [1.55897742E12, 33397.491228070154], [1.55897724E12, 27346.741935483868]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[1.5589773E12, 3839.8974358974397], [1.55897718E12, 3439.861538461538], [1.55897748E12, 15747.454545454548], [1.55897736E12, 16654.6875], [1.55897742E12, 20270.655172413797], [1.55897724E12, 24038.068493150684]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[1.5589773E12, 2118.3866279069734], [1.55897718E12, 5266.796875], [1.55897748E12, 12738.054054054051], [1.55897736E12, 13292.428571428567], [1.55897742E12, 26900.586956521744], [1.55897724E12, 4308.5084745762715]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[1.5589773E12, 275.86918604651146], [1.55897718E12, 116.51562499999996], [1.55897748E12, 202.58333333333337], [1.55897736E12, 3412.571428571428], [1.55897742E12, 200.61764705882354], [1.55897724E12, 373.1694915254238]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55897754E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 112.75000000000003, "minX": 1.55897718E12, "maxY": 60255.299999999996, "series": [{"data": [[1.5589773E12, 2439.588957055216], [1.55897718E12, 25192.0], [1.55897748E12, 24997.058823529413], [1.55897754E12, 60255.299999999996], [1.55897736E12, 25042.77215189874], [1.55897742E12, 33395.1754385965], [1.55897724E12, 27344.67741935484]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[1.5589773E12, 2842.096866096866], [1.55897718E12, 3349.2153846153856], [1.55897748E12, 15614.47727272727], [1.55897736E12, 16333.224999999999], [1.55897742E12, 20205.586206896554], [1.55897724E12, 23806.575342465756]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[1.5589773E12, 1658.7877906976753], [1.55897718E12, 5247.796875], [1.55897748E12, 12648.108108108108], [1.55897736E12, 13076.740259740254], [1.55897742E12, 26888.260869565223], [1.55897724E12, 3959.322033898305]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[1.5589773E12, 236.2529069767443], [1.55897718E12, 112.75000000000003], [1.55897748E12, 192.58333333333334], [1.55897736E12, 3365.6103896103896], [1.55897742E12, 199.73529411764707], [1.55897724E12, 347.0677966101695]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55897754E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.55897718E12, "maxY": 1293.1000000000001, "series": [{"data": [[1.5589773E12, 11.322085889570552], [1.55897718E12, 0.0], [1.55897748E12, 0.0], [1.55897754E12, 0.0], [1.55897736E12, 0.6582278481012657], [1.55897742E12, 25.94736842105263], [1.55897724E12, 4.322580645161289]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[1.5589773E12, 186.11680911680904], [1.55897718E12, 67.56923076923078], [1.55897748E12, 142.77272727272728], [1.55897736E12, 1293.1000000000001], [1.55897742E12, 62.31034482758621], [1.55897724E12, 151.71232876712332]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[1.5589773E12, 29.0581395348837], [1.55897718E12, 61.03125], [1.55897748E12, 926.4324324324324], [1.55897736E12, 35.18181818181818], [1.55897742E12, 74.26086956521738], [1.55897724E12, 322.0169491525423]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[1.5589773E12, 21.761627906976752], [1.55897718E12, 25.906250000000007], [1.55897748E12, 82.75000000000001], [1.55897736E12, 39.45454545454546], [1.55897742E12, 93.23529411764707], [1.55897724E12, 34.84745762711865]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55897754E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 49.0, "minX": 1.55897718E12, "maxY": 67218.0, "series": [{"data": [[1.5589773E12, 60158.0], [1.55897718E12, 31938.0], [1.55897748E12, 62305.0], [1.55897754E12, 60325.0], [1.55897736E12, 67218.0], [1.55897742E12, 60268.0], [1.55897724E12, 60201.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.5589773E12, 49.0], [1.55897718E12, 56.0], [1.55897748E12, 54.0], [1.55897754E12, 60163.0], [1.55897736E12, 52.0], [1.55897742E12, 80.0], [1.55897724E12, 66.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.5589773E12, 2166.400000000001], [1.55897718E12, 30118.0], [1.55897748E12, 30399.2], [1.55897754E12, 60322.2], [1.55897736E12, 30403.8], [1.55897742E12, 46070.500000000015], [1.55897724E12, 30458.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.5589773E12, 30893.15999999996], [1.55897718E12, 31008.8], [1.55897748E12, 46110.63999999968], [1.55897754E12, 60325.0], [1.55897736E12, 60391.46], [1.55897742E12, 58743.08000000003], [1.55897724E12, 60159.52]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.5589773E12, 5697.200000000006], [1.55897718E12, 30170.0], [1.55897748E12, 30434.4], [1.55897754E12, 60325.0], [1.55897736E12, 31527.3], [1.55897742E12, 49204.1], [1.55897724E12, 30737.699999999997]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55897754E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 144.0, "minX": 1.0, "maxY": 30637.0, "series": [{"data": [[2.0, 30090.0], [32.0, 30191.0], [33.0, 30159.0], [34.0, 30637.0], [36.0, 2144.5], [37.0, 16022.5], [38.0, 558.5], [41.0, 3302.5], [43.0, 619.0], [45.0, 279.0], [46.0, 661.5], [3.0, 7333.0], [48.0, 234.5], [50.0, 314.0], [51.0, 269.0], [54.0, 165.0], [55.0, 329.0], [56.0, 247.0], [57.0, 238.0], [59.0, 255.0], [58.0, 249.5], [61.0, 330.0], [64.0, 743.0], [65.0, 30084.0], [4.0, 8107.0], [71.0, 245.0], [75.0, 1177.0], [72.0, 1387.0], [5.0, 483.0], [85.0, 282.0], [86.0, 493.5], [94.0, 435.0], [6.0, 30089.5], [101.0, 574.0], [8.0, 587.0], [9.0, 144.0], [10.0, 30118.5], [12.0, 2346.0], [15.0, 30120.0], [1.0, 13010.5], [17.0, 19944.0], [18.0, 30072.5], [21.0, 1143.0], [22.0, 2506.5], [29.0, 30302.0], [30.0, 30316.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 101.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 105.5, "minX": 1.0, "maxY": 30622.0, "series": [{"data": [[2.0, 30089.5], [32.0, 30174.5], [33.0, 30097.0], [34.0, 30622.0], [36.0, 2124.0], [37.0, 15538.0], [38.0, 549.5], [41.0, 3209.5], [43.0, 568.0], [45.0, 126.0], [46.0, 284.5], [3.0, 7203.0], [48.0, 109.0], [50.0, 116.5], [51.0, 109.0], [54.0, 110.0], [55.0, 139.0], [56.0, 118.0], [57.0, 107.0], [59.0, 105.5], [58.0, 124.0], [61.0, 192.0], [64.0, 275.5], [65.0, 30074.0], [4.0, 7704.5], [71.0, 136.0], [75.0, 1145.0], [72.0, 951.0], [5.0, 165.0], [85.0, 280.0], [86.0, 428.0], [94.0, 334.5], [6.0, 30089.5], [101.0, 446.0], [8.0, 206.5], [9.0, 138.0], [10.0, 30112.5], [12.0, 1880.5], [15.0, 30120.0], [1.0, 12912.5], [17.0, 19887.5], [18.0, 30070.0], [21.0, 1002.0], [22.0, 2421.0], [29.0, 30150.0], [30.0, 30294.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 101.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.8333333333333333, "minX": 1.55897718E12, "maxY": 22.766666666666666, "series": [{"data": [[1.5589773E12, 22.766666666666666], [1.55897718E12, 5.033333333333333], [1.55897748E12, 1.8333333333333333], [1.55897736E12, 5.316666666666666], [1.55897742E12, 2.533333333333333], [1.55897724E12, 4.133333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55897748E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.16666666666666666, "minX": 1.55897718E12, "maxY": 17.333333333333332, "series": [{"data": [[1.5589773E12, 17.333333333333332], [1.55897718E12, 3.816666666666667], [1.55897748E12, 2.2], [1.55897754E12, 0.16666666666666666], [1.55897736E12, 4.616666666666666], [1.55897742E12, 2.533333333333333], [1.55897724E12, 3.683333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.5589773E12, 5.416666666666667], [1.55897718E12, 0.16666666666666666], [1.55897748E12, 0.31666666666666665], [1.55897736E12, 0.6], [1.55897742E12, 0.23333333333333334], [1.55897724E12, 0.5333333333333333]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55897754E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.16666666666666666, "minX": 1.55897718E12, "maxY": 5.85, "series": [{"data": [[1.5589773E12, 5.733333333333333], [1.55897718E12, 1.0666666666666667], [1.55897748E12, 0.6166666666666667], [1.55897736E12, 1.2833333333333334], [1.55897742E12, 0.7666666666666667], [1.55897724E12, 0.9833333333333333]], "isOverall": false, "label": "GetBook-success", "isController": false}, {"data": [[1.5589773E12, 5.433333333333334], [1.55897718E12, 0.7666666666666667], [1.55897748E12, 0.5666666666666667], [1.55897754E12, 0.16666666666666666], [1.55897736E12, 1.3166666666666667], [1.55897742E12, 0.95], [1.55897724E12, 1.0333333333333334]], "isOverall": false, "label": "BuyBook-success", "isController": false}, {"data": [[1.5589773E12, 5.85], [1.55897718E12, 1.0833333333333333], [1.55897748E12, 0.7333333333333333], [1.55897736E12, 1.3333333333333333], [1.55897742E12, 0.48333333333333334], [1.55897724E12, 1.2166666666666666]], "isOverall": false, "label": "SearchBooks-success", "isController": false}, {"data": [[1.5589773E12, 5.733333333333333], [1.55897718E12, 1.0666666666666667], [1.55897748E12, 0.6], [1.55897736E12, 1.2833333333333334], [1.55897742E12, 0.5666666666666667], [1.55897724E12, 0.9833333333333333]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55897754E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.16666666666666666, "minX": 1.55897718E12, "maxY": 22.75, "series": [{"data": [[1.5589773E12, 22.75], [1.55897718E12, 3.9833333333333334], [1.55897748E12, 2.5166666666666666], [1.55897754E12, 0.16666666666666666], [1.55897736E12, 5.216666666666667], [1.55897742E12, 2.7666666666666666], [1.55897724E12, 4.216666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55897754E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

