/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 57.0, "minX": 0.0, "maxY": 65214.0, "series": [{"data": [[0.0, 60.0], [0.1, 66.0], [0.2, 67.0], [0.3, 69.0], [0.4, 71.0], [0.5, 73.0], [0.6, 73.0], [0.7, 73.0], [0.8, 73.0], [0.9, 75.0], [1.0, 76.0], [1.1, 78.0], [1.2, 78.0], [1.3, 78.0], [1.4, 78.0], [1.5, 80.0], [1.6, 80.0], [1.7, 81.0], [1.8, 81.0], [1.9, 81.0], [2.0, 82.0], [2.1, 83.0], [2.2, 84.0], [2.3, 84.0], [2.4, 85.0], [2.5, 86.0], [2.6, 86.0], [2.7, 87.0], [2.8, 88.0], [2.9, 88.0], [3.0, 89.0], [3.1, 89.0], [3.2, 91.0], [3.3, 92.0], [3.4, 93.0], [3.5, 93.0], [3.6, 94.0], [3.7, 94.0], [3.8, 95.0], [3.9, 95.0], [4.0, 96.0], [4.1, 96.0], [4.2, 97.0], [4.3, 97.0], [4.4, 98.0], [4.5, 98.0], [4.6, 98.0], [4.7, 99.0], [4.8, 99.0], [4.9, 100.0], [5.0, 100.0], [5.1, 101.0], [5.2, 101.0], [5.3, 101.0], [5.4, 102.0], [5.5, 102.0], [5.6, 103.0], [5.7, 103.0], [5.8, 104.0], [5.9, 104.0], [6.0, 104.0], [6.1, 104.0], [6.2, 105.0], [6.3, 106.0], [6.4, 106.0], [6.5, 107.0], [6.6, 108.0], [6.7, 109.0], [6.8, 109.0], [6.9, 110.0], [7.0, 110.0], [7.1, 110.0], [7.2, 110.0], [7.3, 110.0], [7.4, 110.0], [7.5, 111.0], [7.6, 111.0], [7.7, 112.0], [7.8, 112.0], [7.9, 112.0], [8.0, 112.0], [8.1, 113.0], [8.2, 114.0], [8.3, 114.0], [8.4, 114.0], [8.5, 114.0], [8.6, 115.0], [8.7, 115.0], [8.8, 115.0], [8.9, 116.0], [9.0, 117.0], [9.1, 117.0], [9.2, 118.0], [9.3, 118.0], [9.4, 118.0], [9.5, 118.0], [9.6, 120.0], [9.7, 120.0], [9.8, 121.0], [9.9, 121.0], [10.0, 122.0], [10.1, 123.0], [10.2, 123.0], [10.3, 123.0], [10.4, 124.0], [10.5, 125.0], [10.6, 125.0], [10.7, 125.0], [10.8, 125.0], [10.9, 126.0], [11.0, 126.0], [11.1, 127.0], [11.2, 127.0], [11.3, 128.0], [11.4, 128.0], [11.5, 128.0], [11.6, 129.0], [11.7, 129.0], [11.8, 129.0], [11.9, 129.0], [12.0, 130.0], [12.1, 130.0], [12.2, 131.0], [12.3, 131.0], [12.4, 131.0], [12.5, 132.0], [12.6, 132.0], [12.7, 132.0], [12.8, 132.0], [12.9, 132.0], [13.0, 133.0], [13.1, 133.0], [13.2, 133.0], [13.3, 134.0], [13.4, 134.0], [13.5, 134.0], [13.6, 135.0], [13.7, 135.0], [13.8, 135.0], [13.9, 136.0], [14.0, 137.0], [14.1, 137.0], [14.2, 137.0], [14.3, 137.0], [14.4, 138.0], [14.5, 138.0], [14.6, 138.0], [14.7, 138.0], [14.8, 138.0], [14.9, 139.0], [15.0, 139.0], [15.1, 139.0], [15.2, 140.0], [15.3, 140.0], [15.4, 140.0], [15.5, 140.0], [15.6, 141.0], [15.7, 141.0], [15.8, 141.0], [15.9, 142.0], [16.0, 142.0], [16.1, 143.0], [16.2, 143.0], [16.3, 143.0], [16.4, 144.0], [16.5, 145.0], [16.6, 145.0], [16.7, 146.0], [16.8, 146.0], [16.9, 146.0], [17.0, 147.0], [17.1, 147.0], [17.2, 148.0], [17.3, 148.0], [17.4, 148.0], [17.5, 149.0], [17.6, 149.0], [17.7, 149.0], [17.8, 150.0], [17.9, 150.0], [18.0, 150.0], [18.1, 151.0], [18.2, 151.0], [18.3, 151.0], [18.4, 152.0], [18.5, 152.0], [18.6, 152.0], [18.7, 152.0], [18.8, 152.0], [18.9, 152.0], [19.0, 153.0], [19.1, 153.0], [19.2, 154.0], [19.3, 154.0], [19.4, 154.0], [19.5, 154.0], [19.6, 155.0], [19.7, 155.0], [19.8, 156.0], [19.9, 157.0], [20.0, 157.0], [20.1, 157.0], [20.2, 158.0], [20.3, 158.0], [20.4, 158.0], [20.5, 159.0], [20.6, 159.0], [20.7, 159.0], [20.8, 160.0], [20.9, 160.0], [21.0, 160.0], [21.1, 161.0], [21.2, 161.0], [21.3, 162.0], [21.4, 162.0], [21.5, 162.0], [21.6, 162.0], [21.7, 163.0], [21.8, 163.0], [21.9, 163.0], [22.0, 163.0], [22.1, 164.0], [22.2, 165.0], [22.3, 165.0], [22.4, 165.0], [22.5, 166.0], [22.6, 167.0], [22.7, 167.0], [22.8, 167.0], [22.9, 168.0], [23.0, 168.0], [23.1, 168.0], [23.2, 169.0], [23.3, 169.0], [23.4, 169.0], [23.5, 170.0], [23.6, 170.0], [23.7, 171.0], [23.8, 171.0], [23.9, 171.0], [24.0, 171.0], [24.1, 172.0], [24.2, 173.0], [24.3, 173.0], [24.4, 174.0], [24.5, 174.0], [24.6, 174.0], [24.7, 174.0], [24.8, 175.0], [24.9, 176.0], [25.0, 176.0], [25.1, 177.0], [25.2, 177.0], [25.3, 177.0], [25.4, 177.0], [25.5, 177.0], [25.6, 179.0], [25.7, 180.0], [25.8, 180.0], [25.9, 181.0], [26.0, 181.0], [26.1, 181.0], [26.2, 181.0], [26.3, 182.0], [26.4, 182.0], [26.5, 182.0], [26.6, 182.0], [26.7, 182.0], [26.8, 183.0], [26.9, 183.0], [27.0, 183.0], [27.1, 183.0], [27.2, 184.0], [27.3, 184.0], [27.4, 185.0], [27.5, 185.0], [27.6, 185.0], [27.7, 186.0], [27.8, 186.0], [27.9, 187.0], [28.0, 187.0], [28.1, 187.0], [28.2, 188.0], [28.3, 188.0], [28.4, 188.0], [28.5, 189.0], [28.6, 190.0], [28.7, 191.0], [28.8, 191.0], [28.9, 191.0], [29.0, 192.0], [29.1, 193.0], [29.2, 193.0], [29.3, 193.0], [29.4, 193.0], [29.5, 194.0], [29.6, 195.0], [29.7, 195.0], [29.8, 196.0], [29.9, 197.0], [30.0, 197.0], [30.1, 197.0], [30.2, 198.0], [30.3, 198.0], [30.4, 199.0], [30.5, 199.0], [30.6, 200.0], [30.7, 200.0], [30.8, 201.0], [30.9, 201.0], [31.0, 201.0], [31.1, 202.0], [31.2, 203.0], [31.3, 203.0], [31.4, 203.0], [31.5, 204.0], [31.6, 204.0], [31.7, 204.0], [31.8, 204.0], [31.9, 205.0], [32.0, 205.0], [32.1, 206.0], [32.2, 206.0], [32.3, 206.0], [32.4, 207.0], [32.5, 207.0], [32.6, 207.0], [32.7, 209.0], [32.8, 209.0], [32.9, 209.0], [33.0, 210.0], [33.1, 210.0], [33.2, 211.0], [33.3, 212.0], [33.4, 213.0], [33.5, 214.0], [33.6, 215.0], [33.7, 215.0], [33.8, 215.0], [33.9, 216.0], [34.0, 216.0], [34.1, 217.0], [34.2, 217.0], [34.3, 218.0], [34.4, 218.0], [34.5, 219.0], [34.6, 219.0], [34.7, 221.0], [34.8, 221.0], [34.9, 222.0], [35.0, 222.0], [35.1, 223.0], [35.2, 224.0], [35.3, 225.0], [35.4, 225.0], [35.5, 226.0], [35.6, 226.0], [35.7, 227.0], [35.8, 228.0], [35.9, 229.0], [36.0, 229.0], [36.1, 229.0], [36.2, 230.0], [36.3, 230.0], [36.4, 230.0], [36.5, 231.0], [36.6, 231.0], [36.7, 231.0], [36.8, 232.0], [36.9, 233.0], [37.0, 234.0], [37.1, 235.0], [37.2, 235.0], [37.3, 236.0], [37.4, 236.0], [37.5, 236.0], [37.6, 237.0], [37.7, 239.0], [37.8, 239.0], [37.9, 240.0], [38.0, 240.0], [38.1, 242.0], [38.2, 243.0], [38.3, 244.0], [38.4, 244.0], [38.5, 244.0], [38.6, 245.0], [38.7, 246.0], [38.8, 248.0], [38.9, 249.0], [39.0, 250.0], [39.1, 250.0], [39.2, 250.0], [39.3, 251.0], [39.4, 251.0], [39.5, 253.0], [39.6, 254.0], [39.7, 254.0], [39.8, 255.0], [39.9, 256.0], [40.0, 257.0], [40.1, 258.0], [40.2, 259.0], [40.3, 260.0], [40.4, 261.0], [40.5, 262.0], [40.6, 263.0], [40.7, 263.0], [40.8, 263.0], [40.9, 264.0], [41.0, 265.0], [41.1, 265.0], [41.2, 267.0], [41.3, 269.0], [41.4, 269.0], [41.5, 270.0], [41.6, 271.0], [41.7, 271.0], [41.8, 271.0], [41.9, 271.0], [42.0, 272.0], [42.1, 273.0], [42.2, 274.0], [42.3, 275.0], [42.4, 276.0], [42.5, 277.0], [42.6, 278.0], [42.7, 278.0], [42.8, 278.0], [42.9, 279.0], [43.0, 280.0], [43.1, 280.0], [43.2, 281.0], [43.3, 282.0], [43.4, 282.0], [43.5, 283.0], [43.6, 284.0], [43.7, 284.0], [43.8, 285.0], [43.9, 285.0], [44.0, 285.0], [44.1, 286.0], [44.2, 287.0], [44.3, 288.0], [44.4, 288.0], [44.5, 289.0], [44.6, 289.0], [44.7, 289.0], [44.8, 291.0], [44.9, 292.0], [45.0, 293.0], [45.1, 294.0], [45.2, 296.0], [45.3, 296.0], [45.4, 297.0], [45.5, 299.0], [45.6, 299.0], [45.7, 301.0], [45.8, 302.0], [45.9, 303.0], [46.0, 304.0], [46.1, 305.0], [46.2, 305.0], [46.3, 306.0], [46.4, 308.0], [46.5, 309.0], [46.6, 310.0], [46.7, 311.0], [46.8, 314.0], [46.9, 315.0], [47.0, 316.0], [47.1, 317.0], [47.2, 319.0], [47.3, 320.0], [47.4, 322.0], [47.5, 322.0], [47.6, 324.0], [47.7, 327.0], [47.8, 328.0], [47.9, 329.0], [48.0, 330.0], [48.1, 331.0], [48.2, 332.0], [48.3, 332.0], [48.4, 333.0], [48.5, 334.0], [48.6, 335.0], [48.7, 336.0], [48.8, 336.0], [48.9, 337.0], [49.0, 338.0], [49.1, 339.0], [49.2, 339.0], [49.3, 339.0], [49.4, 342.0], [49.5, 343.0], [49.6, 345.0], [49.7, 346.0], [49.8, 347.0], [49.9, 348.0], [50.0, 350.0], [50.1, 351.0], [50.2, 352.0], [50.3, 354.0], [50.4, 354.0], [50.5, 355.0], [50.6, 357.0], [50.7, 358.0], [50.8, 359.0], [50.9, 363.0], [51.0, 363.0], [51.1, 364.0], [51.2, 365.0], [51.3, 366.0], [51.4, 367.0], [51.5, 367.0], [51.6, 369.0], [51.7, 370.0], [51.8, 371.0], [51.9, 371.0], [52.0, 372.0], [52.1, 373.0], [52.2, 377.0], [52.3, 379.0], [52.4, 380.0], [52.5, 380.0], [52.6, 382.0], [52.7, 385.0], [52.8, 385.0], [52.9, 386.0], [53.0, 386.0], [53.1, 386.0], [53.2, 387.0], [53.3, 388.0], [53.4, 388.0], [53.5, 389.0], [53.6, 391.0], [53.7, 391.0], [53.8, 393.0], [53.9, 394.0], [54.0, 396.0], [54.1, 396.0], [54.2, 398.0], [54.3, 402.0], [54.4, 403.0], [54.5, 404.0], [54.6, 405.0], [54.7, 405.0], [54.8, 406.0], [54.9, 407.0], [55.0, 408.0], [55.1, 408.0], [55.2, 410.0], [55.3, 411.0], [55.4, 411.0], [55.5, 411.0], [55.6, 415.0], [55.7, 415.0], [55.8, 417.0], [55.9, 417.0], [56.0, 418.0], [56.1, 418.0], [56.2, 419.0], [56.3, 420.0], [56.4, 421.0], [56.5, 422.0], [56.6, 423.0], [56.7, 425.0], [56.8, 426.0], [56.9, 427.0], [57.0, 428.0], [57.1, 429.0], [57.2, 431.0], [57.3, 432.0], [57.4, 434.0], [57.5, 437.0], [57.6, 437.0], [57.7, 439.0], [57.8, 440.0], [57.9, 443.0], [58.0, 443.0], [58.1, 444.0], [58.2, 447.0], [58.3, 452.0], [58.4, 452.0], [58.5, 455.0], [58.6, 456.0], [58.7, 456.0], [58.8, 457.0], [58.9, 458.0], [59.0, 459.0], [59.1, 460.0], [59.2, 464.0], [59.3, 465.0], [59.4, 465.0], [59.5, 466.0], [59.6, 467.0], [59.7, 469.0], [59.8, 470.0], [59.9, 471.0], [60.0, 473.0], [60.1, 473.0], [60.2, 474.0], [60.3, 474.0], [60.4, 475.0], [60.5, 476.0], [60.6, 477.0], [60.7, 480.0], [60.8, 482.0], [60.9, 484.0], [61.0, 485.0], [61.1, 486.0], [61.2, 486.0], [61.3, 488.0], [61.4, 489.0], [61.5, 490.0], [61.6, 490.0], [61.7, 494.0], [61.8, 495.0], [61.9, 499.0], [62.0, 500.0], [62.1, 501.0], [62.2, 502.0], [62.3, 503.0], [62.4, 505.0], [62.5, 507.0], [62.6, 507.0], [62.7, 508.0], [62.8, 510.0], [62.9, 510.0], [63.0, 510.0], [63.1, 513.0], [63.2, 513.0], [63.3, 516.0], [63.4, 517.0], [63.5, 517.0], [63.6, 519.0], [63.7, 519.0], [63.8, 522.0], [63.9, 523.0], [64.0, 525.0], [64.1, 526.0], [64.2, 527.0], [64.3, 528.0], [64.4, 528.0], [64.5, 529.0], [64.6, 531.0], [64.7, 533.0], [64.8, 533.0], [64.9, 534.0], [65.0, 534.0], [65.1, 535.0], [65.2, 536.0], [65.3, 536.0], [65.4, 537.0], [65.5, 538.0], [65.6, 538.0], [65.7, 539.0], [65.8, 539.0], [65.9, 540.0], [66.0, 541.0], [66.1, 541.0], [66.2, 542.0], [66.3, 543.0], [66.4, 543.0], [66.5, 543.0], [66.6, 543.0], [66.7, 543.0], [66.8, 544.0], [66.9, 545.0], [67.0, 545.0], [67.1, 547.0], [67.2, 547.0], [67.3, 547.0], [67.4, 548.0], [67.5, 549.0], [67.6, 549.0], [67.7, 549.0], [67.8, 550.0], [67.9, 550.0], [68.0, 551.0], [68.1, 551.0], [68.2, 551.0], [68.3, 551.0], [68.4, 551.0], [68.5, 551.0], [68.6, 553.0], [68.7, 554.0], [68.8, 554.0], [68.9, 555.0], [69.0, 555.0], [69.1, 556.0], [69.2, 556.0], [69.3, 556.0], [69.4, 557.0], [69.5, 557.0], [69.6, 558.0], [69.7, 558.0], [69.8, 558.0], [69.9, 558.0], [70.0, 559.0], [70.1, 559.0], [70.2, 560.0], [70.3, 560.0], [70.4, 560.0], [70.5, 560.0], [70.6, 562.0], [70.7, 562.0], [70.8, 563.0], [70.9, 564.0], [71.0, 565.0], [71.1, 565.0], [71.2, 566.0], [71.3, 566.0], [71.4, 566.0], [71.5, 566.0], [71.6, 567.0], [71.7, 567.0], [71.8, 567.0], [71.9, 567.0], [72.0, 568.0], [72.1, 568.0], [72.2, 569.0], [72.3, 570.0], [72.4, 570.0], [72.5, 571.0], [72.6, 572.0], [72.7, 572.0], [72.8, 572.0], [72.9, 574.0], [73.0, 574.0], [73.1, 575.0], [73.2, 576.0], [73.3, 577.0], [73.4, 577.0], [73.5, 579.0], [73.6, 579.0], [73.7, 581.0], [73.8, 581.0], [73.9, 582.0], [74.0, 583.0], [74.1, 584.0], [74.2, 584.0], [74.3, 585.0], [74.4, 585.0], [74.5, 585.0], [74.6, 586.0], [74.7, 587.0], [74.8, 587.0], [74.9, 588.0], [75.0, 588.0], [75.1, 589.0], [75.2, 590.0], [75.3, 590.0], [75.4, 591.0], [75.5, 591.0], [75.6, 593.0], [75.7, 593.0], [75.8, 594.0], [75.9, 594.0], [76.0, 596.0], [76.1, 599.0], [76.2, 600.0], [76.3, 600.0], [76.4, 601.0], [76.5, 602.0], [76.6, 603.0], [76.7, 604.0], [76.8, 604.0], [76.9, 605.0], [77.0, 605.0], [77.1, 606.0], [77.2, 606.0], [77.3, 607.0], [77.4, 608.0], [77.5, 609.0], [77.6, 610.0], [77.7, 611.0], [77.8, 612.0], [77.9, 612.0], [78.0, 612.0], [78.1, 613.0], [78.2, 613.0], [78.3, 614.0], [78.4, 614.0], [78.5, 615.0], [78.6, 615.0], [78.7, 616.0], [78.8, 617.0], [78.9, 617.0], [79.0, 620.0], [79.1, 620.0], [79.2, 621.0], [79.3, 622.0], [79.4, 622.0], [79.5, 623.0], [79.6, 624.0], [79.7, 624.0], [79.8, 626.0], [79.9, 626.0], [80.0, 627.0], [80.1, 627.0], [80.2, 628.0], [80.3, 629.0], [80.4, 630.0], [80.5, 631.0], [80.6, 632.0], [80.7, 634.0], [80.8, 635.0], [80.9, 636.0], [81.0, 638.0], [81.1, 639.0], [81.2, 641.0], [81.3, 641.0], [81.4, 643.0], [81.5, 644.0], [81.6, 644.0], [81.7, 645.0], [81.8, 647.0], [81.9, 648.0], [82.0, 649.0], [82.1, 652.0], [82.2, 652.0], [82.3, 652.0], [82.4, 655.0], [82.5, 655.0], [82.6, 656.0], [82.7, 656.0], [82.8, 657.0], [82.9, 660.0], [83.0, 660.0], [83.1, 661.0], [83.2, 662.0], [83.3, 662.0], [83.4, 663.0], [83.5, 664.0], [83.6, 667.0], [83.7, 671.0], [83.8, 672.0], [83.9, 674.0], [84.0, 678.0], [84.1, 678.0], [84.2, 679.0], [84.3, 680.0], [84.4, 683.0], [84.5, 685.0], [84.6, 685.0], [84.7, 685.0], [84.8, 687.0], [84.9, 688.0], [85.0, 688.0], [85.1, 690.0], [85.2, 690.0], [85.3, 691.0], [85.4, 692.0], [85.5, 694.0], [85.6, 696.0], [85.7, 696.0], [85.8, 697.0], [85.9, 697.0], [86.0, 699.0], [86.1, 699.0], [86.2, 700.0], [86.3, 701.0], [86.4, 703.0], [86.5, 703.0], [86.6, 704.0], [86.7, 704.0], [86.8, 706.0], [86.9, 708.0], [87.0, 711.0], [87.1, 711.0], [87.2, 713.0], [87.3, 714.0], [87.4, 715.0], [87.5, 716.0], [87.6, 717.0], [87.7, 718.0], [87.8, 719.0], [87.9, 720.0], [88.0, 720.0], [88.1, 722.0], [88.2, 723.0], [88.3, 724.0], [88.4, 726.0], [88.5, 727.0], [88.6, 729.0], [88.7, 731.0], [88.8, 732.0], [88.9, 733.0], [89.0, 736.0], [89.1, 737.0], [89.2, 737.0], [89.3, 739.0], [89.4, 741.0], [89.5, 742.0], [89.6, 743.0], [89.7, 746.0], [89.8, 747.0], [89.9, 748.0], [90.0, 749.0], [90.1, 752.0], [90.2, 754.0], [90.3, 754.0], [90.4, 757.0], [90.5, 759.0], [90.6, 762.0], [90.7, 763.0], [90.8, 765.0], [90.9, 766.0], [91.0, 774.0], [91.1, 776.0], [91.2, 779.0], [91.3, 782.0], [91.4, 783.0], [91.5, 784.0], [91.6, 785.0], [91.7, 786.0], [91.8, 788.0], [91.9, 792.0], [92.0, 794.0], [92.1, 794.0], [92.2, 795.0], [92.3, 799.0], [92.4, 799.0], [92.5, 801.0], [92.6, 803.0], [92.7, 807.0], [92.8, 810.0], [92.9, 819.0], [93.0, 823.0], [93.1, 825.0], [93.2, 827.0], [93.3, 829.0], [93.4, 833.0], [93.5, 836.0], [93.6, 839.0], [93.7, 842.0], [93.8, 849.0], [93.9, 849.0], [94.0, 853.0], [94.1, 854.0], [94.2, 855.0], [94.3, 859.0], [94.4, 861.0], [94.5, 865.0], [94.6, 869.0], [94.7, 873.0], [94.8, 877.0], [94.9, 877.0], [95.0, 883.0], [95.1, 883.0], [95.2, 887.0], [95.3, 893.0], [95.4, 903.0], [95.5, 905.0], [95.6, 911.0], [95.7, 917.0], [95.8, 921.0], [95.9, 930.0], [96.0, 934.0], [96.1, 939.0], [96.2, 949.0], [96.3, 959.0], [96.4, 970.0], [96.5, 973.0], [96.6, 980.0], [96.7, 993.0], [96.8, 1019.0], [96.9, 1033.0], [97.0, 1035.0], [97.1, 1041.0], [97.2, 1051.0], [97.3, 1051.0], [97.4, 1057.0], [97.5, 1062.0], [97.6, 1065.0], [97.7, 1076.0], [97.8, 1083.0], [97.9, 1093.0], [98.0, 1116.0], [98.1, 1132.0], [98.2, 1159.0], [98.3, 1163.0], [98.4, 1167.0], [98.5, 1183.0], [98.6, 1203.0], [98.7, 1207.0], [98.8, 1276.0], [98.9, 1296.0], [99.0, 1317.0], [99.1, 1386.0], [99.2, 1457.0], [99.3, 1458.0], [99.4, 1516.0], [99.5, 1555.0], [99.6, 1701.0], [99.7, 1801.0], [99.8, 1818.0], [99.9, 1877.0]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[0.0, 151.0], [0.1, 233.0], [0.2, 263.0], [0.3, 273.0], [0.4, 275.0], [0.5, 277.0], [0.6, 278.0], [0.7, 281.0], [0.8, 284.0], [0.9, 286.0], [1.0, 289.0], [1.1, 292.0], [1.2, 296.0], [1.3, 296.0], [1.4, 297.0], [1.5, 297.0], [1.6, 299.0], [1.7, 299.0], [1.8, 302.0], [1.9, 303.0], [2.0, 304.0], [2.1, 306.0], [2.2, 308.0], [2.3, 309.0], [2.4, 310.0], [2.5, 311.0], [2.6, 312.0], [2.7, 314.0], [2.8, 314.0], [2.9, 315.0], [3.0, 316.0], [3.1, 317.0], [3.2, 317.0], [3.3, 319.0], [3.4, 319.0], [3.5, 320.0], [3.6, 322.0], [3.7, 322.0], [3.8, 323.0], [3.9, 324.0], [4.0, 326.0], [4.1, 327.0], [4.2, 327.0], [4.3, 328.0], [4.4, 329.0], [4.5, 331.0], [4.6, 334.0], [4.7, 334.0], [4.8, 337.0], [4.9, 339.0], [5.0, 340.0], [5.1, 342.0], [5.2, 346.0], [5.3, 347.0], [5.4, 349.0], [5.5, 350.0], [5.6, 352.0], [5.7, 353.0], [5.8, 354.0], [5.9, 356.0], [6.0, 358.0], [6.1, 358.0], [6.2, 359.0], [6.3, 359.0], [6.4, 360.0], [6.5, 361.0], [6.6, 362.0], [6.7, 363.0], [6.8, 364.0], [6.9, 364.0], [7.0, 365.0], [7.1, 365.0], [7.2, 365.0], [7.3, 365.0], [7.4, 366.0], [7.5, 367.0], [7.6, 369.0], [7.7, 370.0], [7.8, 371.0], [7.9, 373.0], [8.0, 373.0], [8.1, 375.0], [8.2, 376.0], [8.3, 376.0], [8.4, 379.0], [8.5, 381.0], [8.6, 382.0], [8.7, 383.0], [8.8, 385.0], [8.9, 386.0], [9.0, 387.0], [9.1, 387.0], [9.2, 389.0], [9.3, 390.0], [9.4, 392.0], [9.5, 393.0], [9.6, 394.0], [9.7, 396.0], [9.8, 397.0], [9.9, 398.0], [10.0, 399.0], [10.1, 401.0], [10.2, 401.0], [10.3, 402.0], [10.4, 402.0], [10.5, 403.0], [10.6, 404.0], [10.7, 405.0], [10.8, 406.0], [10.9, 406.0], [11.0, 406.0], [11.1, 407.0], [11.2, 408.0], [11.3, 409.0], [11.4, 411.0], [11.5, 412.0], [11.6, 415.0], [11.7, 417.0], [11.8, 418.0], [11.9, 419.0], [12.0, 420.0], [12.1, 420.0], [12.2, 421.0], [12.3, 422.0], [12.4, 423.0], [12.5, 424.0], [12.6, 425.0], [12.7, 426.0], [12.8, 427.0], [12.9, 427.0], [13.0, 429.0], [13.1, 429.0], [13.2, 430.0], [13.3, 431.0], [13.4, 431.0], [13.5, 432.0], [13.6, 432.0], [13.7, 433.0], [13.8, 433.0], [13.9, 434.0], [14.0, 435.0], [14.1, 436.0], [14.2, 437.0], [14.3, 438.0], [14.4, 439.0], [14.5, 439.0], [14.6, 440.0], [14.7, 440.0], [14.8, 441.0], [14.9, 445.0], [15.0, 446.0], [15.1, 447.0], [15.2, 449.0], [15.3, 449.0], [15.4, 449.0], [15.5, 450.0], [15.6, 451.0], [15.7, 452.0], [15.8, 453.0], [15.9, 454.0], [16.0, 456.0], [16.1, 459.0], [16.2, 461.0], [16.3, 461.0], [16.4, 462.0], [16.5, 462.0], [16.6, 463.0], [16.7, 463.0], [16.8, 464.0], [16.9, 465.0], [17.0, 467.0], [17.1, 468.0], [17.2, 471.0], [17.3, 472.0], [17.4, 472.0], [17.5, 473.0], [17.6, 475.0], [17.7, 476.0], [17.8, 476.0], [17.9, 477.0], [18.0, 477.0], [18.1, 478.0], [18.2, 480.0], [18.3, 483.0], [18.4, 485.0], [18.5, 485.0], [18.6, 487.0], [18.7, 489.0], [18.8, 491.0], [18.9, 491.0], [19.0, 493.0], [19.1, 495.0], [19.2, 495.0], [19.3, 498.0], [19.4, 498.0], [19.5, 498.0], [19.6, 501.0], [19.7, 501.0], [19.8, 503.0], [19.9, 503.0], [20.0, 503.0], [20.1, 503.0], [20.2, 504.0], [20.3, 504.0], [20.4, 505.0], [20.5, 507.0], [20.6, 507.0], [20.7, 509.0], [20.8, 509.0], [20.9, 511.0], [21.0, 512.0], [21.1, 513.0], [21.2, 514.0], [21.3, 515.0], [21.4, 515.0], [21.5, 515.0], [21.6, 516.0], [21.7, 517.0], [21.8, 520.0], [21.9, 521.0], [22.0, 522.0], [22.1, 523.0], [22.2, 525.0], [22.3, 526.0], [22.4, 527.0], [22.5, 528.0], [22.6, 528.0], [22.7, 529.0], [22.8, 530.0], [22.9, 532.0], [23.0, 533.0], [23.1, 533.0], [23.2, 534.0], [23.3, 535.0], [23.4, 536.0], [23.5, 536.0], [23.6, 538.0], [23.7, 538.0], [23.8, 540.0], [23.9, 541.0], [24.0, 543.0], [24.1, 545.0], [24.2, 546.0], [24.3, 546.0], [24.4, 548.0], [24.5, 549.0], [24.6, 550.0], [24.7, 550.0], [24.8, 550.0], [24.9, 550.0], [25.0, 551.0], [25.1, 552.0], [25.2, 553.0], [25.3, 554.0], [25.4, 556.0], [25.5, 557.0], [25.6, 559.0], [25.7, 560.0], [25.8, 561.0], [25.9, 562.0], [26.0, 562.0], [26.1, 564.0], [26.2, 564.0], [26.3, 566.0], [26.4, 567.0], [26.5, 568.0], [26.6, 569.0], [26.7, 573.0], [26.8, 573.0], [26.9, 574.0], [27.0, 575.0], [27.1, 578.0], [27.2, 578.0], [27.3, 580.0], [27.4, 581.0], [27.5, 582.0], [27.6, 584.0], [27.7, 585.0], [27.8, 586.0], [27.9, 588.0], [28.0, 590.0], [28.1, 594.0], [28.2, 595.0], [28.3, 596.0], [28.4, 597.0], [28.5, 599.0], [28.6, 602.0], [28.7, 602.0], [28.8, 604.0], [28.9, 605.0], [29.0, 608.0], [29.1, 608.0], [29.2, 611.0], [29.3, 612.0], [29.4, 612.0], [29.5, 613.0], [29.6, 613.0], [29.7, 614.0], [29.8, 615.0], [29.9, 615.0], [30.0, 616.0], [30.1, 616.0], [30.2, 617.0], [30.3, 620.0], [30.4, 622.0], [30.5, 623.0], [30.6, 624.0], [30.7, 624.0], [30.8, 625.0], [30.9, 626.0], [31.0, 627.0], [31.1, 627.0], [31.2, 627.0], [31.3, 628.0], [31.4, 629.0], [31.5, 629.0], [31.6, 630.0], [31.7, 630.0], [31.8, 634.0], [31.9, 634.0], [32.0, 636.0], [32.1, 637.0], [32.2, 637.0], [32.3, 638.0], [32.4, 642.0], [32.5, 643.0], [32.6, 644.0], [32.7, 645.0], [32.8, 645.0], [32.9, 646.0], [33.0, 646.0], [33.1, 647.0], [33.2, 649.0], [33.3, 650.0], [33.4, 651.0], [33.5, 652.0], [33.6, 653.0], [33.7, 654.0], [33.8, 655.0], [33.9, 656.0], [34.0, 658.0], [34.1, 660.0], [34.2, 660.0], [34.3, 662.0], [34.4, 662.0], [34.5, 663.0], [34.6, 664.0], [34.7, 666.0], [34.8, 668.0], [34.9, 669.0], [35.0, 669.0], [35.1, 670.0], [35.2, 671.0], [35.3, 672.0], [35.4, 673.0], [35.5, 673.0], [35.6, 674.0], [35.7, 675.0], [35.8, 676.0], [35.9, 676.0], [36.0, 679.0], [36.1, 680.0], [36.2, 680.0], [36.3, 682.0], [36.4, 683.0], [36.5, 684.0], [36.6, 685.0], [36.7, 691.0], [36.8, 691.0], [36.9, 691.0], [37.0, 692.0], [37.1, 693.0], [37.2, 693.0], [37.3, 694.0], [37.4, 694.0], [37.5, 695.0], [37.6, 696.0], [37.7, 696.0], [37.8, 697.0], [37.9, 698.0], [38.0, 698.0], [38.1, 699.0], [38.2, 699.0], [38.3, 700.0], [38.4, 700.0], [38.5, 700.0], [38.6, 701.0], [38.7, 701.0], [38.8, 702.0], [38.9, 702.0], [39.0, 702.0], [39.1, 703.0], [39.2, 704.0], [39.3, 705.0], [39.4, 706.0], [39.5, 706.0], [39.6, 707.0], [39.7, 707.0], [39.8, 710.0], [39.9, 711.0], [40.0, 711.0], [40.1, 712.0], [40.2, 712.0], [40.3, 712.0], [40.4, 712.0], [40.5, 713.0], [40.6, 713.0], [40.7, 715.0], [40.8, 715.0], [40.9, 715.0], [41.0, 715.0], [41.1, 716.0], [41.2, 716.0], [41.3, 716.0], [41.4, 717.0], [41.5, 718.0], [41.6, 718.0], [41.7, 719.0], [41.8, 720.0], [41.9, 720.0], [42.0, 721.0], [42.1, 721.0], [42.2, 722.0], [42.3, 722.0], [42.4, 722.0], [42.5, 723.0], [42.6, 725.0], [42.7, 725.0], [42.8, 727.0], [42.9, 727.0], [43.0, 729.0], [43.1, 730.0], [43.2, 730.0], [43.3, 732.0], [43.4, 733.0], [43.5, 734.0], [43.6, 735.0], [43.7, 735.0], [43.8, 736.0], [43.9, 736.0], [44.0, 738.0], [44.1, 739.0], [44.2, 742.0], [44.3, 743.0], [44.4, 743.0], [44.5, 743.0], [44.6, 745.0], [44.7, 746.0], [44.8, 747.0], [44.9, 747.0], [45.0, 747.0], [45.1, 747.0], [45.2, 748.0], [45.3, 749.0], [45.4, 749.0], [45.5, 751.0], [45.6, 751.0], [45.7, 752.0], [45.8, 752.0], [45.9, 753.0], [46.0, 754.0], [46.1, 754.0], [46.2, 756.0], [46.3, 756.0], [46.4, 757.0], [46.5, 757.0], [46.6, 759.0], [46.7, 759.0], [46.8, 763.0], [46.9, 765.0], [47.0, 766.0], [47.1, 766.0], [47.2, 767.0], [47.3, 768.0], [47.4, 768.0], [47.5, 770.0], [47.6, 770.0], [47.7, 770.0], [47.8, 771.0], [47.9, 772.0], [48.0, 772.0], [48.1, 772.0], [48.2, 773.0], [48.3, 773.0], [48.4, 774.0], [48.5, 774.0], [48.6, 775.0], [48.7, 775.0], [48.8, 776.0], [48.9, 776.0], [49.0, 777.0], [49.1, 777.0], [49.2, 779.0], [49.3, 780.0], [49.4, 780.0], [49.5, 781.0], [49.6, 782.0], [49.7, 783.0], [49.8, 783.0], [49.9, 784.0], [50.0, 785.0], [50.1, 785.0], [50.2, 787.0], [50.3, 788.0], [50.4, 790.0], [50.5, 790.0], [50.6, 790.0], [50.7, 790.0], [50.8, 792.0], [50.9, 794.0], [51.0, 796.0], [51.1, 796.0], [51.2, 798.0], [51.3, 801.0], [51.4, 802.0], [51.5, 803.0], [51.6, 804.0], [51.7, 805.0], [51.8, 806.0], [51.9, 807.0], [52.0, 808.0], [52.1, 809.0], [52.2, 810.0], [52.3, 810.0], [52.4, 811.0], [52.5, 811.0], [52.6, 812.0], [52.7, 813.0], [52.8, 814.0], [52.9, 815.0], [53.0, 815.0], [53.1, 817.0], [53.2, 817.0], [53.3, 817.0], [53.4, 817.0], [53.5, 818.0], [53.6, 818.0], [53.7, 819.0], [53.8, 819.0], [53.9, 820.0], [54.0, 820.0], [54.1, 821.0], [54.2, 822.0], [54.3, 822.0], [54.4, 824.0], [54.5, 826.0], [54.6, 826.0], [54.7, 826.0], [54.8, 827.0], [54.9, 828.0], [55.0, 829.0], [55.1, 829.0], [55.2, 830.0], [55.3, 830.0], [55.4, 830.0], [55.5, 831.0], [55.6, 832.0], [55.7, 832.0], [55.8, 832.0], [55.9, 833.0], [56.0, 833.0], [56.1, 834.0], [56.2, 835.0], [56.3, 836.0], [56.4, 837.0], [56.5, 837.0], [56.6, 838.0], [56.7, 838.0], [56.8, 840.0], [56.9, 840.0], [57.0, 841.0], [57.1, 841.0], [57.2, 842.0], [57.3, 843.0], [57.4, 843.0], [57.5, 844.0], [57.6, 847.0], [57.7, 847.0], [57.8, 848.0], [57.9, 848.0], [58.0, 849.0], [58.1, 850.0], [58.2, 853.0], [58.3, 854.0], [58.4, 854.0], [58.5, 856.0], [58.6, 857.0], [58.7, 858.0], [58.8, 858.0], [58.9, 860.0], [59.0, 860.0], [59.1, 861.0], [59.2, 862.0], [59.3, 862.0], [59.4, 863.0], [59.5, 863.0], [59.6, 863.0], [59.7, 864.0], [59.8, 864.0], [59.9, 865.0], [60.0, 865.0], [60.1, 866.0], [60.2, 866.0], [60.3, 866.0], [60.4, 867.0], [60.5, 867.0], [60.6, 868.0], [60.7, 869.0], [60.8, 869.0], [60.9, 869.0], [61.0, 870.0], [61.1, 870.0], [61.2, 871.0], [61.3, 871.0], [61.4, 872.0], [61.5, 873.0], [61.6, 874.0], [61.7, 876.0], [61.8, 876.0], [61.9, 877.0], [62.0, 878.0], [62.1, 879.0], [62.2, 879.0], [62.3, 880.0], [62.4, 881.0], [62.5, 881.0], [62.6, 882.0], [62.7, 883.0], [62.8, 884.0], [62.9, 884.0], [63.0, 887.0], [63.1, 888.0], [63.2, 888.0], [63.3, 888.0], [63.4, 889.0], [63.5, 891.0], [63.6, 892.0], [63.7, 892.0], [63.8, 893.0], [63.9, 894.0], [64.0, 894.0], [64.1, 896.0], [64.2, 897.0], [64.3, 897.0], [64.4, 898.0], [64.5, 898.0], [64.6, 899.0], [64.7, 900.0], [64.8, 900.0], [64.9, 901.0], [65.0, 902.0], [65.1, 902.0], [65.2, 903.0], [65.3, 903.0], [65.4, 904.0], [65.5, 905.0], [65.6, 906.0], [65.7, 906.0], [65.8, 907.0], [65.9, 907.0], [66.0, 909.0], [66.1, 910.0], [66.2, 913.0], [66.3, 913.0], [66.4, 914.0], [66.5, 915.0], [66.6, 916.0], [66.7, 918.0], [66.8, 918.0], [66.9, 919.0], [67.0, 919.0], [67.1, 921.0], [67.2, 921.0], [67.3, 921.0], [67.4, 922.0], [67.5, 924.0], [67.6, 925.0], [67.7, 926.0], [67.8, 927.0], [67.9, 927.0], [68.0, 928.0], [68.1, 928.0], [68.2, 930.0], [68.3, 931.0], [68.4, 932.0], [68.5, 933.0], [68.6, 934.0], [68.7, 935.0], [68.8, 937.0], [68.9, 937.0], [69.0, 938.0], [69.1, 938.0], [69.2, 939.0], [69.3, 939.0], [69.4, 940.0], [69.5, 940.0], [69.6, 940.0], [69.7, 940.0], [69.8, 945.0], [69.9, 946.0], [70.0, 947.0], [70.1, 948.0], [70.2, 949.0], [70.3, 950.0], [70.4, 952.0], [70.5, 953.0], [70.6, 954.0], [70.7, 955.0], [70.8, 956.0], [70.9, 956.0], [71.0, 959.0], [71.1, 960.0], [71.2, 961.0], [71.3, 962.0], [71.4, 963.0], [71.5, 964.0], [71.6, 965.0], [71.7, 965.0], [71.8, 965.0], [71.9, 966.0], [72.0, 966.0], [72.1, 966.0], [72.2, 967.0], [72.3, 967.0], [72.4, 968.0], [72.5, 968.0], [72.6, 970.0], [72.7, 970.0], [72.8, 972.0], [72.9, 972.0], [73.0, 973.0], [73.1, 974.0], [73.2, 974.0], [73.3, 975.0], [73.4, 976.0], [73.5, 977.0], [73.6, 978.0], [73.7, 979.0], [73.8, 980.0], [73.9, 980.0], [74.0, 981.0], [74.1, 981.0], [74.2, 981.0], [74.3, 981.0], [74.4, 983.0], [74.5, 985.0], [74.6, 986.0], [74.7, 987.0], [74.8, 989.0], [74.9, 990.0], [75.0, 991.0], [75.1, 992.0], [75.2, 993.0], [75.3, 999.0], [75.4, 1000.0], [75.5, 1000.0], [75.6, 1001.0], [75.7, 1004.0], [75.8, 1005.0], [75.9, 1005.0], [76.0, 1006.0], [76.1, 1006.0], [76.2, 1007.0], [76.3, 1008.0], [76.4, 1012.0], [76.5, 1013.0], [76.6, 1018.0], [76.7, 1018.0], [76.8, 1021.0], [76.9, 1021.0], [77.0, 1021.0], [77.1, 1024.0], [77.2, 1027.0], [77.3, 1030.0], [77.4, 1030.0], [77.5, 1035.0], [77.6, 1035.0], [77.7, 1037.0], [77.8, 1040.0], [77.9, 1043.0], [78.0, 1045.0], [78.1, 1049.0], [78.2, 1050.0], [78.3, 1052.0], [78.4, 1055.0], [78.5, 1055.0], [78.6, 1059.0], [78.7, 1061.0], [78.8, 1061.0], [78.9, 1062.0], [79.0, 1063.0], [79.1, 1066.0], [79.2, 1068.0], [79.3, 1071.0], [79.4, 1072.0], [79.5, 1073.0], [79.6, 1074.0], [79.7, 1075.0], [79.8, 1076.0], [79.9, 1077.0], [80.0, 1078.0], [80.1, 1081.0], [80.2, 1082.0], [80.3, 1085.0], [80.4, 1087.0], [80.5, 1092.0], [80.6, 1094.0], [80.7, 1095.0], [80.8, 1095.0], [80.9, 1096.0], [81.0, 1097.0], [81.1, 1102.0], [81.2, 1106.0], [81.3, 1109.0], [81.4, 1113.0], [81.5, 1115.0], [81.6, 1118.0], [81.7, 1120.0], [81.8, 1124.0], [81.9, 1128.0], [82.0, 1135.0], [82.1, 1137.0], [82.2, 1139.0], [82.3, 1143.0], [82.4, 1146.0], [82.5, 1147.0], [82.6, 1148.0], [82.7, 1152.0], [82.8, 1153.0], [82.9, 1159.0], [83.0, 1163.0], [83.1, 1165.0], [83.2, 1167.0], [83.3, 1170.0], [83.4, 1174.0], [83.5, 1176.0], [83.6, 1178.0], [83.7, 1179.0], [83.8, 1180.0], [83.9, 1185.0], [84.0, 1186.0], [84.1, 1187.0], [84.2, 1187.0], [84.3, 1189.0], [84.4, 1189.0], [84.5, 1190.0], [84.6, 1193.0], [84.7, 1196.0], [84.8, 1197.0], [84.9, 1199.0], [85.0, 1200.0], [85.1, 1201.0], [85.2, 1206.0], [85.3, 1208.0], [85.4, 1211.0], [85.5, 1215.0], [85.6, 1215.0], [85.7, 1218.0], [85.8, 1224.0], [85.9, 1226.0], [86.0, 1233.0], [86.1, 1235.0], [86.2, 1235.0], [86.3, 1237.0], [86.4, 1241.0], [86.5, 1242.0], [86.6, 1243.0], [86.7, 1244.0], [86.8, 1247.0], [86.9, 1248.0], [87.0, 1249.0], [87.1, 1249.0], [87.2, 1252.0], [87.3, 1257.0], [87.4, 1259.0], [87.5, 1260.0], [87.6, 1260.0], [87.7, 1264.0], [87.8, 1268.0], [87.9, 1270.0], [88.0, 1273.0], [88.1, 1276.0], [88.2, 1278.0], [88.3, 1281.0], [88.4, 1282.0], [88.5, 1285.0], [88.6, 1290.0], [88.7, 1292.0], [88.8, 1293.0], [88.9, 1299.0], [89.0, 1305.0], [89.1, 1310.0], [89.2, 1313.0], [89.3, 1315.0], [89.4, 1317.0], [89.5, 1319.0], [89.6, 1319.0], [89.7, 1319.0], [89.8, 1324.0], [89.9, 1329.0], [90.0, 1329.0], [90.1, 1330.0], [90.2, 1331.0], [90.3, 1332.0], [90.4, 1335.0], [90.5, 1342.0], [90.6, 1345.0], [90.7, 1346.0], [90.8, 1348.0], [90.9, 1353.0], [91.0, 1357.0], [91.1, 1359.0], [91.2, 1362.0], [91.3, 1367.0], [91.4, 1372.0], [91.5, 1375.0], [91.6, 1376.0], [91.7, 1377.0], [91.8, 1380.0], [91.9, 1380.0], [92.0, 1386.0], [92.1, 1390.0], [92.2, 1390.0], [92.3, 1394.0], [92.4, 1395.0], [92.5, 1398.0], [92.6, 1399.0], [92.7, 1403.0], [92.8, 1406.0], [92.9, 1407.0], [93.0, 1408.0], [93.1, 1411.0], [93.2, 1419.0], [93.3, 1421.0], [93.4, 1424.0], [93.5, 1434.0], [93.6, 1449.0], [93.7, 1478.0], [93.8, 1497.0], [93.9, 1508.0], [94.0, 1532.0], [94.1, 1536.0], [94.2, 1549.0], [94.3, 1551.0], [94.4, 1574.0], [94.5, 1577.0], [94.6, 1584.0], [94.7, 1596.0], [94.8, 1600.0], [94.9, 1622.0], [95.0, 1630.0], [95.1, 1650.0], [95.2, 1670.0], [95.3, 1682.0], [95.4, 1688.0], [95.5, 1698.0], [95.6, 1723.0], [95.7, 1740.0], [95.8, 1749.0], [95.9, 1762.0], [96.0, 1781.0], [96.1, 1813.0], [96.2, 1824.0], [96.3, 1830.0], [96.4, 1853.0], [96.5, 1877.0], [96.6, 1926.0], [96.7, 1932.0], [96.8, 1949.0], [96.9, 1971.0], [97.0, 1985.0], [97.1, 2031.0], [97.2, 2063.0], [97.3, 2098.0], [97.4, 2109.0], [97.5, 2125.0], [97.6, 2183.0], [97.7, 2206.0], [97.8, 2245.0], [97.9, 2309.0], [98.0, 2314.0], [98.1, 2346.0], [98.2, 2370.0], [98.3, 2404.0], [98.4, 2445.0], [98.5, 2497.0], [98.6, 2538.0], [98.7, 2542.0], [98.8, 2573.0], [98.9, 2712.0], [99.0, 2743.0], [99.1, 2938.0], [99.2, 2944.0], [99.3, 3165.0], [99.4, 3553.0], [99.5, 3748.0], [99.6, 4313.0], [99.7, 5490.0], [99.8, 5602.0], [99.9, 24284.0], [100.0, 65214.0]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[0.0, 59.0], [0.1, 64.0], [0.2, 66.0], [0.3, 77.0], [0.4, 78.0], [0.5, 80.0], [0.6, 82.0], [0.7, 84.0], [0.8, 84.0], [0.9, 85.0], [1.0, 87.0], [1.1, 88.0], [1.2, 89.0], [1.3, 91.0], [1.4, 93.0], [1.5, 93.0], [1.6, 95.0], [1.7, 96.0], [1.8, 98.0], [1.9, 99.0], [2.0, 100.0], [2.1, 101.0], [2.2, 103.0], [2.3, 103.0], [2.4, 105.0], [2.5, 105.0], [2.6, 106.0], [2.7, 106.0], [2.8, 107.0], [2.9, 107.0], [3.0, 113.0], [3.1, 113.0], [3.2, 113.0], [3.3, 115.0], [3.4, 115.0], [3.5, 116.0], [3.6, 118.0], [3.7, 118.0], [3.8, 119.0], [3.9, 121.0], [4.0, 121.0], [4.1, 122.0], [4.2, 123.0], [4.3, 123.0], [4.4, 123.0], [4.5, 124.0], [4.6, 125.0], [4.7, 126.0], [4.8, 127.0], [4.9, 127.0], [5.0, 128.0], [5.1, 128.0], [5.2, 128.0], [5.3, 129.0], [5.4, 130.0], [5.5, 131.0], [5.6, 131.0], [5.7, 132.0], [5.8, 132.0], [5.9, 132.0], [6.0, 133.0], [6.1, 135.0], [6.2, 135.0], [6.3, 135.0], [6.4, 136.0], [6.5, 136.0], [6.6, 137.0], [6.7, 137.0], [6.8, 137.0], [6.9, 138.0], [7.0, 138.0], [7.1, 139.0], [7.2, 139.0], [7.3, 140.0], [7.4, 140.0], [7.5, 141.0], [7.6, 142.0], [7.7, 142.0], [7.8, 143.0], [7.9, 143.0], [8.0, 143.0], [8.1, 143.0], [8.2, 144.0], [8.3, 144.0], [8.4, 144.0], [8.5, 144.0], [8.6, 144.0], [8.7, 145.0], [8.8, 145.0], [8.9, 146.0], [9.0, 146.0], [9.1, 147.0], [9.2, 147.0], [9.3, 147.0], [9.4, 148.0], [9.5, 148.0], [9.6, 148.0], [9.7, 149.0], [9.8, 150.0], [9.9, 150.0], [10.0, 151.0], [10.1, 151.0], [10.2, 152.0], [10.3, 153.0], [10.4, 154.0], [10.5, 154.0], [10.6, 155.0], [10.7, 156.0], [10.8, 156.0], [10.9, 157.0], [11.0, 157.0], [11.1, 158.0], [11.2, 158.0], [11.3, 158.0], [11.4, 159.0], [11.5, 160.0], [11.6, 160.0], [11.7, 161.0], [11.8, 161.0], [11.9, 161.0], [12.0, 161.0], [12.1, 162.0], [12.2, 162.0], [12.3, 163.0], [12.4, 163.0], [12.5, 164.0], [12.6, 164.0], [12.7, 164.0], [12.8, 165.0], [12.9, 165.0], [13.0, 166.0], [13.1, 166.0], [13.2, 166.0], [13.3, 166.0], [13.4, 167.0], [13.5, 168.0], [13.6, 168.0], [13.7, 169.0], [13.8, 169.0], [13.9, 170.0], [14.0, 170.0], [14.1, 170.0], [14.2, 170.0], [14.3, 171.0], [14.4, 173.0], [14.5, 173.0], [14.6, 173.0], [14.7, 174.0], [14.8, 175.0], [14.9, 175.0], [15.0, 176.0], [15.1, 177.0], [15.2, 177.0], [15.3, 178.0], [15.4, 179.0], [15.5, 179.0], [15.6, 179.0], [15.7, 180.0], [15.8, 180.0], [15.9, 180.0], [16.0, 181.0], [16.1, 181.0], [16.2, 182.0], [16.3, 182.0], [16.4, 183.0], [16.5, 184.0], [16.6, 185.0], [16.7, 185.0], [16.8, 185.0], [16.9, 185.0], [17.0, 187.0], [17.1, 187.0], [17.2, 187.0], [17.3, 188.0], [17.4, 189.0], [17.5, 190.0], [17.6, 190.0], [17.7, 191.0], [17.8, 192.0], [17.9, 192.0], [18.0, 193.0], [18.1, 195.0], [18.2, 195.0], [18.3, 195.0], [18.4, 196.0], [18.5, 197.0], [18.6, 198.0], [18.7, 199.0], [18.8, 200.0], [18.9, 201.0], [19.0, 201.0], [19.1, 201.0], [19.2, 202.0], [19.3, 202.0], [19.4, 203.0], [19.5, 205.0], [19.6, 206.0], [19.7, 206.0], [19.8, 206.0], [19.9, 207.0], [20.0, 207.0], [20.1, 208.0], [20.2, 209.0], [20.3, 209.0], [20.4, 209.0], [20.5, 210.0], [20.6, 210.0], [20.7, 211.0], [20.8, 212.0], [20.9, 212.0], [21.0, 213.0], [21.1, 214.0], [21.2, 214.0], [21.3, 215.0], [21.4, 216.0], [21.5, 217.0], [21.6, 217.0], [21.7, 217.0], [21.8, 218.0], [21.9, 219.0], [22.0, 219.0], [22.1, 221.0], [22.2, 221.0], [22.3, 222.0], [22.4, 223.0], [22.5, 223.0], [22.6, 223.0], [22.7, 224.0], [22.8, 225.0], [22.9, 226.0], [23.0, 226.0], [23.1, 227.0], [23.2, 228.0], [23.3, 228.0], [23.4, 228.0], [23.5, 229.0], [23.6, 230.0], [23.7, 230.0], [23.8, 231.0], [23.9, 231.0], [24.0, 231.0], [24.1, 232.0], [24.2, 232.0], [24.3, 233.0], [24.4, 233.0], [24.5, 234.0], [24.6, 235.0], [24.7, 236.0], [24.8, 237.0], [24.9, 237.0], [25.0, 237.0], [25.1, 238.0], [25.2, 238.0], [25.3, 239.0], [25.4, 239.0], [25.5, 240.0], [25.6, 241.0], [25.7, 242.0], [25.8, 245.0], [25.9, 246.0], [26.0, 247.0], [26.1, 248.0], [26.2, 248.0], [26.3, 248.0], [26.4, 250.0], [26.5, 250.0], [26.6, 251.0], [26.7, 253.0], [26.8, 253.0], [26.9, 254.0], [27.0, 254.0], [27.1, 257.0], [27.2, 257.0], [27.3, 257.0], [27.4, 258.0], [27.5, 258.0], [27.6, 260.0], [27.7, 260.0], [27.8, 262.0], [27.9, 264.0], [28.0, 264.0], [28.1, 265.0], [28.2, 266.0], [28.3, 268.0], [28.4, 268.0], [28.5, 269.0], [28.6, 270.0], [28.7, 270.0], [28.8, 271.0], [28.9, 272.0], [29.0, 273.0], [29.1, 274.0], [29.2, 274.0], [29.3, 275.0], [29.4, 276.0], [29.5, 277.0], [29.6, 278.0], [29.7, 278.0], [29.8, 279.0], [29.9, 280.0], [30.0, 281.0], [30.1, 281.0], [30.2, 283.0], [30.3, 284.0], [30.4, 284.0], [30.5, 286.0], [30.6, 287.0], [30.7, 289.0], [30.8, 291.0], [30.9, 292.0], [31.0, 293.0], [31.1, 294.0], [31.2, 294.0], [31.3, 294.0], [31.4, 295.0], [31.5, 295.0], [31.6, 295.0], [31.7, 296.0], [31.8, 299.0], [31.9, 300.0], [32.0, 304.0], [32.1, 304.0], [32.2, 305.0], [32.3, 305.0], [32.4, 305.0], [32.5, 307.0], [32.6, 308.0], [32.7, 309.0], [32.8, 309.0], [32.9, 310.0], [33.0, 310.0], [33.1, 311.0], [33.2, 312.0], [33.3, 314.0], [33.4, 314.0], [33.5, 316.0], [33.6, 316.0], [33.7, 317.0], [33.8, 318.0], [33.9, 318.0], [34.0, 319.0], [34.1, 319.0], [34.2, 320.0], [34.3, 320.0], [34.4, 321.0], [34.5, 322.0], [34.6, 323.0], [34.7, 324.0], [34.8, 325.0], [34.9, 326.0], [35.0, 328.0], [35.1, 330.0], [35.2, 331.0], [35.3, 332.0], [35.4, 332.0], [35.5, 333.0], [35.6, 334.0], [35.7, 334.0], [35.8, 335.0], [35.9, 336.0], [36.0, 338.0], [36.1, 340.0], [36.2, 341.0], [36.3, 343.0], [36.4, 344.0], [36.5, 344.0], [36.6, 346.0], [36.7, 346.0], [36.8, 347.0], [36.9, 348.0], [37.0, 349.0], [37.1, 350.0], [37.2, 350.0], [37.3, 350.0], [37.4, 352.0], [37.5, 353.0], [37.6, 354.0], [37.7, 354.0], [37.8, 355.0], [37.9, 355.0], [38.0, 356.0], [38.1, 357.0], [38.2, 358.0], [38.3, 358.0], [38.4, 359.0], [38.5, 359.0], [38.6, 359.0], [38.7, 359.0], [38.8, 360.0], [38.9, 360.0], [39.0, 361.0], [39.1, 363.0], [39.2, 364.0], [39.3, 366.0], [39.4, 366.0], [39.5, 367.0], [39.6, 368.0], [39.7, 369.0], [39.8, 369.0], [39.9, 369.0], [40.0, 371.0], [40.1, 371.0], [40.2, 372.0], [40.3, 374.0], [40.4, 374.0], [40.5, 376.0], [40.6, 377.0], [40.7, 378.0], [40.8, 378.0], [40.9, 380.0], [41.0, 381.0], [41.1, 381.0], [41.2, 382.0], [41.3, 382.0], [41.4, 382.0], [41.5, 383.0], [41.6, 384.0], [41.7, 386.0], [41.8, 387.0], [41.9, 390.0], [42.0, 390.0], [42.1, 391.0], [42.2, 392.0], [42.3, 394.0], [42.4, 395.0], [42.5, 396.0], [42.6, 398.0], [42.7, 398.0], [42.8, 399.0], [42.9, 400.0], [43.0, 401.0], [43.1, 402.0], [43.2, 404.0], [43.3, 404.0], [43.4, 405.0], [43.5, 406.0], [43.6, 406.0], [43.7, 407.0], [43.8, 410.0], [43.9, 411.0], [44.0, 414.0], [44.1, 416.0], [44.2, 419.0], [44.3, 420.0], [44.4, 421.0], [44.5, 422.0], [44.6, 423.0], [44.7, 424.0], [44.8, 425.0], [44.9, 427.0], [45.0, 429.0], [45.1, 429.0], [45.2, 431.0], [45.3, 432.0], [45.4, 433.0], [45.5, 435.0], [45.6, 436.0], [45.7, 437.0], [45.8, 438.0], [45.9, 439.0], [46.0, 439.0], [46.1, 439.0], [46.2, 439.0], [46.3, 440.0], [46.4, 441.0], [46.5, 442.0], [46.6, 443.0], [46.7, 443.0], [46.8, 445.0], [46.9, 446.0], [47.0, 447.0], [47.1, 447.0], [47.2, 448.0], [47.3, 448.0], [47.4, 448.0], [47.5, 449.0], [47.6, 450.0], [47.7, 450.0], [47.8, 451.0], [47.9, 451.0], [48.0, 451.0], [48.1, 452.0], [48.2, 452.0], [48.3, 453.0], [48.4, 453.0], [48.5, 454.0], [48.6, 454.0], [48.7, 455.0], [48.8, 456.0], [48.9, 457.0], [49.0, 457.0], [49.1, 457.0], [49.2, 458.0], [49.3, 459.0], [49.4, 460.0], [49.5, 461.0], [49.6, 462.0], [49.7, 463.0], [49.8, 463.0], [49.9, 463.0], [50.0, 464.0], [50.1, 465.0], [50.2, 465.0], [50.3, 466.0], [50.4, 467.0], [50.5, 467.0], [50.6, 467.0], [50.7, 468.0], [50.8, 468.0], [50.9, 468.0], [51.0, 469.0], [51.1, 469.0], [51.2, 469.0], [51.3, 470.0], [51.4, 470.0], [51.5, 471.0], [51.6, 472.0], [51.7, 472.0], [51.8, 473.0], [51.9, 473.0], [52.0, 474.0], [52.1, 475.0], [52.2, 475.0], [52.3, 475.0], [52.4, 476.0], [52.5, 478.0], [52.6, 478.0], [52.7, 479.0], [52.8, 480.0], [52.9, 481.0], [53.0, 481.0], [53.1, 481.0], [53.2, 482.0], [53.3, 483.0], [53.4, 483.0], [53.5, 484.0], [53.6, 485.0], [53.7, 486.0], [53.8, 486.0], [53.9, 486.0], [54.0, 488.0], [54.1, 489.0], [54.2, 491.0], [54.3, 491.0], [54.4, 492.0], [54.5, 492.0], [54.6, 493.0], [54.7, 494.0], [54.8, 494.0], [54.9, 494.0], [55.0, 494.0], [55.1, 495.0], [55.2, 495.0], [55.3, 495.0], [55.4, 496.0], [55.5, 496.0], [55.6, 496.0], [55.7, 497.0], [55.8, 497.0], [55.9, 498.0], [56.0, 499.0], [56.1, 499.0], [56.2, 499.0], [56.3, 500.0], [56.4, 501.0], [56.5, 501.0], [56.6, 502.0], [56.7, 503.0], [56.8, 503.0], [56.9, 504.0], [57.0, 505.0], [57.1, 505.0], [57.2, 505.0], [57.3, 507.0], [57.4, 507.0], [57.5, 507.0], [57.6, 508.0], [57.7, 509.0], [57.8, 509.0], [57.9, 510.0], [58.0, 510.0], [58.1, 511.0], [58.2, 511.0], [58.3, 511.0], [58.4, 512.0], [58.5, 512.0], [58.6, 512.0], [58.7, 513.0], [58.8, 513.0], [58.9, 513.0], [59.0, 514.0], [59.1, 515.0], [59.2, 515.0], [59.3, 516.0], [59.4, 516.0], [59.5, 518.0], [59.6, 518.0], [59.7, 519.0], [59.8, 519.0], [59.9, 520.0], [60.0, 520.0], [60.1, 520.0], [60.2, 520.0], [60.3, 521.0], [60.4, 522.0], [60.5, 522.0], [60.6, 523.0], [60.7, 523.0], [60.8, 523.0], [60.9, 523.0], [61.0, 524.0], [61.1, 524.0], [61.2, 524.0], [61.3, 525.0], [61.4, 525.0], [61.5, 525.0], [61.6, 526.0], [61.7, 526.0], [61.8, 526.0], [61.9, 527.0], [62.0, 527.0], [62.1, 528.0], [62.2, 529.0], [62.3, 529.0], [62.4, 529.0], [62.5, 530.0], [62.6, 530.0], [62.7, 531.0], [62.8, 532.0], [62.9, 533.0], [63.0, 533.0], [63.1, 533.0], [63.2, 534.0], [63.3, 534.0], [63.4, 534.0], [63.5, 534.0], [63.6, 534.0], [63.7, 534.0], [63.8, 535.0], [63.9, 535.0], [64.0, 536.0], [64.1, 536.0], [64.2, 536.0], [64.3, 536.0], [64.4, 537.0], [64.5, 537.0], [64.6, 538.0], [64.7, 538.0], [64.8, 539.0], [64.9, 539.0], [65.0, 540.0], [65.1, 540.0], [65.2, 541.0], [65.3, 542.0], [65.4, 542.0], [65.5, 542.0], [65.6, 543.0], [65.7, 543.0], [65.8, 544.0], [65.9, 544.0], [66.0, 545.0], [66.1, 546.0], [66.2, 546.0], [66.3, 547.0], [66.4, 548.0], [66.5, 548.0], [66.6, 548.0], [66.7, 548.0], [66.8, 549.0], [66.9, 549.0], [67.0, 551.0], [67.1, 551.0], [67.2, 552.0], [67.3, 552.0], [67.4, 553.0], [67.5, 554.0], [67.6, 556.0], [67.7, 556.0], [67.8, 557.0], [67.9, 557.0], [68.0, 558.0], [68.1, 559.0], [68.2, 559.0], [68.3, 561.0], [68.4, 561.0], [68.5, 561.0], [68.6, 562.0], [68.7, 562.0], [68.8, 562.0], [68.9, 563.0], [69.0, 563.0], [69.1, 563.0], [69.2, 564.0], [69.3, 565.0], [69.4, 568.0], [69.5, 568.0], [69.6, 569.0], [69.7, 569.0], [69.8, 569.0], [69.9, 569.0], [70.0, 570.0], [70.1, 571.0], [70.2, 571.0], [70.3, 571.0], [70.4, 571.0], [70.5, 572.0], [70.6, 572.0], [70.7, 572.0], [70.8, 573.0], [70.9, 574.0], [71.0, 575.0], [71.1, 575.0], [71.2, 575.0], [71.3, 575.0], [71.4, 576.0], [71.5, 576.0], [71.6, 576.0], [71.7, 577.0], [71.8, 577.0], [71.9, 577.0], [72.0, 577.0], [72.1, 578.0], [72.2, 578.0], [72.3, 578.0], [72.4, 579.0], [72.5, 579.0], [72.6, 579.0], [72.7, 580.0], [72.8, 581.0], [72.9, 581.0], [73.0, 582.0], [73.1, 583.0], [73.2, 584.0], [73.3, 584.0], [73.4, 585.0], [73.5, 585.0], [73.6, 585.0], [73.7, 586.0], [73.8, 587.0], [73.9, 587.0], [74.0, 588.0], [74.1, 588.0], [74.2, 589.0], [74.3, 590.0], [74.4, 590.0], [74.5, 591.0], [74.6, 591.0], [74.7, 592.0], [74.8, 592.0], [74.9, 592.0], [75.0, 592.0], [75.1, 592.0], [75.2, 593.0], [75.3, 593.0], [75.4, 595.0], [75.5, 595.0], [75.6, 596.0], [75.7, 597.0], [75.8, 597.0], [75.9, 597.0], [76.0, 598.0], [76.1, 599.0], [76.2, 599.0], [76.3, 600.0], [76.4, 600.0], [76.5, 601.0], [76.6, 602.0], [76.7, 602.0], [76.8, 603.0], [76.9, 603.0], [77.0, 603.0], [77.1, 604.0], [77.2, 604.0], [77.3, 604.0], [77.4, 606.0], [77.5, 606.0], [77.6, 606.0], [77.7, 607.0], [77.8, 608.0], [77.9, 608.0], [78.0, 609.0], [78.1, 611.0], [78.2, 611.0], [78.3, 612.0], [78.4, 612.0], [78.5, 613.0], [78.6, 614.0], [78.7, 615.0], [78.8, 615.0], [78.9, 617.0], [79.0, 617.0], [79.1, 617.0], [79.2, 618.0], [79.3, 618.0], [79.4, 618.0], [79.5, 618.0], [79.6, 619.0], [79.7, 619.0], [79.8, 619.0], [79.9, 619.0], [80.0, 619.0], [80.1, 620.0], [80.2, 620.0], [80.3, 620.0], [80.4, 622.0], [80.5, 622.0], [80.6, 623.0], [80.7, 623.0], [80.8, 624.0], [80.9, 624.0], [81.0, 625.0], [81.1, 625.0], [81.2, 626.0], [81.3, 626.0], [81.4, 626.0], [81.5, 627.0], [81.6, 628.0], [81.7, 628.0], [81.8, 629.0], [81.9, 630.0], [82.0, 630.0], [82.1, 631.0], [82.2, 632.0], [82.3, 633.0], [82.4, 634.0], [82.5, 635.0], [82.6, 635.0], [82.7, 635.0], [82.8, 637.0], [82.9, 637.0], [83.0, 637.0], [83.1, 638.0], [83.2, 639.0], [83.3, 639.0], [83.4, 640.0], [83.5, 641.0], [83.6, 642.0], [83.7, 642.0], [83.8, 644.0], [83.9, 646.0], [84.0, 646.0], [84.1, 646.0], [84.2, 647.0], [84.3, 648.0], [84.4, 649.0], [84.5, 649.0], [84.6, 651.0], [84.7, 652.0], [84.8, 653.0], [84.9, 654.0], [85.0, 654.0], [85.1, 655.0], [85.2, 656.0], [85.3, 656.0], [85.4, 657.0], [85.5, 657.0], [85.6, 658.0], [85.7, 659.0], [85.8, 660.0], [85.9, 661.0], [86.0, 662.0], [86.1, 662.0], [86.2, 662.0], [86.3, 662.0], [86.4, 663.0], [86.5, 663.0], [86.6, 663.0], [86.7, 664.0], [86.8, 664.0], [86.9, 665.0], [87.0, 666.0], [87.1, 667.0], [87.2, 669.0], [87.3, 669.0], [87.4, 670.0], [87.5, 671.0], [87.6, 673.0], [87.7, 673.0], [87.8, 674.0], [87.9, 674.0], [88.0, 676.0], [88.1, 677.0], [88.2, 680.0], [88.3, 681.0], [88.4, 682.0], [88.5, 685.0], [88.6, 686.0], [88.7, 687.0], [88.8, 688.0], [88.9, 689.0], [89.0, 692.0], [89.1, 694.0], [89.2, 695.0], [89.3, 695.0], [89.4, 696.0], [89.5, 697.0], [89.6, 697.0], [89.7, 698.0], [89.8, 700.0], [89.9, 705.0], [90.0, 706.0], [90.1, 708.0], [90.2, 710.0], [90.3, 712.0], [90.4, 714.0], [90.5, 717.0], [90.6, 720.0], [90.7, 721.0], [90.8, 724.0], [90.9, 727.0], [91.0, 728.0], [91.1, 730.0], [91.2, 734.0], [91.3, 735.0], [91.4, 736.0], [91.5, 737.0], [91.6, 739.0], [91.7, 740.0], [91.8, 743.0], [91.9, 746.0], [92.0, 748.0], [92.1, 750.0], [92.2, 753.0], [92.3, 756.0], [92.4, 759.0], [92.5, 761.0], [92.6, 761.0], [92.7, 762.0], [92.8, 762.0], [92.9, 766.0], [93.0, 767.0], [93.1, 771.0], [93.2, 774.0], [93.3, 781.0], [93.4, 785.0], [93.5, 787.0], [93.6, 792.0], [93.7, 792.0], [93.8, 793.0], [93.9, 799.0], [94.0, 801.0], [94.1, 801.0], [94.2, 804.0], [94.3, 808.0], [94.4, 816.0], [94.5, 820.0], [94.6, 822.0], [94.7, 823.0], [94.8, 826.0], [94.9, 831.0], [95.0, 836.0], [95.1, 842.0], [95.2, 847.0], [95.3, 853.0], [95.4, 858.0], [95.5, 864.0], [95.6, 871.0], [95.7, 888.0], [95.8, 891.0], [95.9, 896.0], [96.0, 909.0], [96.1, 913.0], [96.2, 917.0], [96.3, 919.0], [96.4, 924.0], [96.5, 926.0], [96.6, 938.0], [96.7, 944.0], [96.8, 957.0], [96.9, 981.0], [97.0, 983.0], [97.1, 996.0], [97.2, 1005.0], [97.3, 1006.0], [97.4, 1013.0], [97.5, 1040.0], [97.6, 1069.0], [97.7, 1083.0], [97.8, 1096.0], [97.9, 1115.0], [98.0, 1138.0], [98.1, 1162.0], [98.2, 1169.0], [98.3, 1184.0], [98.4, 1197.0], [98.5, 1210.0], [98.6, 1251.0], [98.7, 1281.0], [98.8, 1324.0], [98.9, 1395.0], [99.0, 1443.0], [99.1, 1452.0], [99.2, 1537.0], [99.3, 1704.0], [99.4, 1751.0], [99.5, 1787.0], [99.6, 1936.0], [99.7, 2281.0], [99.8, 2401.0], [99.9, 2757.0]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[0.0, 57.0], [0.1, 59.0], [0.2, 60.0], [0.3, 61.0], [0.4, 64.0], [0.5, 64.0], [0.6, 65.0], [0.7, 66.0], [0.8, 67.0], [0.9, 67.0], [1.0, 68.0], [1.1, 69.0], [1.2, 69.0], [1.3, 70.0], [1.4, 70.0], [1.5, 70.0], [1.6, 70.0], [1.7, 71.0], [1.8, 71.0], [1.9, 72.0], [2.0, 72.0], [2.1, 73.0], [2.2, 76.0], [2.3, 77.0], [2.4, 77.0], [2.5, 77.0], [2.6, 78.0], [2.7, 78.0], [2.8, 78.0], [2.9, 78.0], [3.0, 79.0], [3.1, 80.0], [3.2, 80.0], [3.3, 82.0], [3.4, 83.0], [3.5, 83.0], [3.6, 83.0], [3.7, 84.0], [3.8, 84.0], [3.9, 84.0], [4.0, 84.0], [4.1, 85.0], [4.2, 85.0], [4.3, 85.0], [4.4, 86.0], [4.5, 87.0], [4.6, 87.0], [4.7, 87.0], [4.8, 88.0], [4.9, 89.0], [5.0, 89.0], [5.1, 89.0], [5.2, 90.0], [5.3, 91.0], [5.4, 91.0], [5.5, 91.0], [5.6, 92.0], [5.7, 92.0], [5.8, 93.0], [5.9, 94.0], [6.0, 94.0], [6.1, 94.0], [6.2, 94.0], [6.3, 95.0], [6.4, 95.0], [6.5, 95.0], [6.6, 96.0], [6.7, 96.0], [6.8, 97.0], [6.9, 97.0], [7.0, 98.0], [7.1, 98.0], [7.2, 98.0], [7.3, 98.0], [7.4, 99.0], [7.5, 99.0], [7.6, 100.0], [7.7, 100.0], [7.8, 100.0], [7.9, 102.0], [8.0, 102.0], [8.1, 102.0], [8.2, 103.0], [8.3, 103.0], [8.4, 103.0], [8.5, 103.0], [8.6, 104.0], [8.7, 104.0], [8.8, 104.0], [8.9, 105.0], [9.0, 105.0], [9.1, 105.0], [9.2, 105.0], [9.3, 106.0], [9.4, 106.0], [9.5, 106.0], [9.6, 106.0], [9.7, 107.0], [9.8, 107.0], [9.9, 107.0], [10.0, 107.0], [10.1, 108.0], [10.2, 108.0], [10.3, 108.0], [10.4, 109.0], [10.5, 109.0], [10.6, 110.0], [10.7, 110.0], [10.8, 110.0], [10.9, 111.0], [11.0, 111.0], [11.1, 111.0], [11.2, 112.0], [11.3, 112.0], [11.4, 112.0], [11.5, 112.0], [11.6, 113.0], [11.7, 113.0], [11.8, 113.0], [11.9, 113.0], [12.0, 114.0], [12.1, 114.0], [12.2, 115.0], [12.3, 115.0], [12.4, 115.0], [12.5, 115.0], [12.6, 116.0], [12.7, 116.0], [12.8, 116.0], [12.9, 116.0], [13.0, 117.0], [13.1, 117.0], [13.2, 118.0], [13.3, 118.0], [13.4, 118.0], [13.5, 118.0], [13.6, 119.0], [13.7, 119.0], [13.8, 119.0], [13.9, 120.0], [14.0, 120.0], [14.1, 121.0], [14.2, 121.0], [14.3, 121.0], [14.4, 122.0], [14.5, 122.0], [14.6, 122.0], [14.7, 123.0], [14.8, 123.0], [14.9, 123.0], [15.0, 124.0], [15.1, 124.0], [15.2, 125.0], [15.3, 125.0], [15.4, 125.0], [15.5, 125.0], [15.6, 126.0], [15.7, 126.0], [15.8, 127.0], [15.9, 127.0], [16.0, 127.0], [16.1, 128.0], [16.2, 128.0], [16.3, 128.0], [16.4, 129.0], [16.5, 129.0], [16.6, 129.0], [16.7, 129.0], [16.8, 129.0], [16.9, 130.0], [17.0, 130.0], [17.1, 130.0], [17.2, 130.0], [17.3, 130.0], [17.4, 131.0], [17.5, 131.0], [17.6, 131.0], [17.7, 132.0], [17.8, 132.0], [17.9, 132.0], [18.0, 132.0], [18.1, 133.0], [18.2, 133.0], [18.3, 133.0], [18.4, 133.0], [18.5, 134.0], [18.6, 134.0], [18.7, 135.0], [18.8, 135.0], [18.9, 135.0], [19.0, 135.0], [19.1, 136.0], [19.2, 136.0], [19.3, 136.0], [19.4, 137.0], [19.5, 137.0], [19.6, 138.0], [19.7, 138.0], [19.8, 138.0], [19.9, 139.0], [20.0, 139.0], [20.1, 139.0], [20.2, 139.0], [20.3, 140.0], [20.4, 140.0], [20.5, 140.0], [20.6, 140.0], [20.7, 140.0], [20.8, 141.0], [20.9, 141.0], [21.0, 141.0], [21.1, 141.0], [21.2, 141.0], [21.3, 142.0], [21.4, 142.0], [21.5, 142.0], [21.6, 143.0], [21.7, 143.0], [21.8, 143.0], [21.9, 143.0], [22.0, 143.0], [22.1, 144.0], [22.2, 144.0], [22.3, 144.0], [22.4, 145.0], [22.5, 145.0], [22.6, 146.0], [22.7, 146.0], [22.8, 146.0], [22.9, 146.0], [23.0, 146.0], [23.1, 146.0], [23.2, 147.0], [23.3, 147.0], [23.4, 148.0], [23.5, 148.0], [23.6, 149.0], [23.7, 149.0], [23.8, 149.0], [23.9, 150.0], [24.0, 150.0], [24.1, 151.0], [24.2, 151.0], [24.3, 151.0], [24.4, 151.0], [24.5, 152.0], [24.6, 152.0], [24.7, 153.0], [24.8, 153.0], [24.9, 154.0], [25.0, 154.0], [25.1, 154.0], [25.2, 154.0], [25.3, 155.0], [25.4, 155.0], [25.5, 155.0], [25.6, 156.0], [25.7, 156.0], [25.8, 157.0], [25.9, 157.0], [26.0, 157.0], [26.1, 157.0], [26.2, 157.0], [26.3, 158.0], [26.4, 158.0], [26.5, 158.0], [26.6, 158.0], [26.7, 159.0], [26.8, 159.0], [26.9, 160.0], [27.0, 160.0], [27.1, 160.0], [27.2, 160.0], [27.3, 161.0], [27.4, 161.0], [27.5, 161.0], [27.6, 162.0], [27.7, 162.0], [27.8, 163.0], [27.9, 163.0], [28.0, 164.0], [28.1, 164.0], [28.2, 164.0], [28.3, 165.0], [28.4, 165.0], [28.5, 165.0], [28.6, 166.0], [28.7, 166.0], [28.8, 166.0], [28.9, 167.0], [29.0, 167.0], [29.1, 168.0], [29.2, 168.0], [29.3, 169.0], [29.4, 169.0], [29.5, 169.0], [29.6, 170.0], [29.7, 170.0], [29.8, 170.0], [29.9, 171.0], [30.0, 171.0], [30.1, 171.0], [30.2, 172.0], [30.3, 172.0], [30.4, 172.0], [30.5, 172.0], [30.6, 173.0], [30.7, 173.0], [30.8, 173.0], [30.9, 173.0], [31.0, 174.0], [31.1, 174.0], [31.2, 174.0], [31.3, 175.0], [31.4, 175.0], [31.5, 176.0], [31.6, 176.0], [31.7, 176.0], [31.8, 176.0], [31.9, 176.0], [32.0, 177.0], [32.1, 178.0], [32.2, 178.0], [32.3, 179.0], [32.4, 179.0], [32.5, 179.0], [32.6, 180.0], [32.7, 180.0], [32.8, 181.0], [32.9, 181.0], [33.0, 181.0], [33.1, 182.0], [33.2, 183.0], [33.3, 183.0], [33.4, 183.0], [33.5, 183.0], [33.6, 184.0], [33.7, 184.0], [33.8, 184.0], [33.9, 185.0], [34.0, 185.0], [34.1, 186.0], [34.2, 186.0], [34.3, 187.0], [34.4, 187.0], [34.5, 187.0], [34.6, 187.0], [34.7, 188.0], [34.8, 189.0], [34.9, 189.0], [35.0, 189.0], [35.1, 190.0], [35.2, 191.0], [35.3, 191.0], [35.4, 191.0], [35.5, 192.0], [35.6, 193.0], [35.7, 193.0], [35.8, 193.0], [35.9, 193.0], [36.0, 194.0], [36.1, 194.0], [36.2, 195.0], [36.3, 195.0], [36.4, 196.0], [36.5, 196.0], [36.6, 197.0], [36.7, 197.0], [36.8, 198.0], [36.9, 199.0], [37.0, 199.0], [37.1, 200.0], [37.2, 200.0], [37.3, 201.0], [37.4, 201.0], [37.5, 202.0], [37.6, 202.0], [37.7, 203.0], [37.8, 203.0], [37.9, 205.0], [38.0, 205.0], [38.1, 205.0], [38.2, 205.0], [38.3, 206.0], [38.4, 206.0], [38.5, 207.0], [38.6, 207.0], [38.7, 208.0], [38.8, 209.0], [38.9, 209.0], [39.0, 209.0], [39.1, 209.0], [39.2, 210.0], [39.3, 210.0], [39.4, 211.0], [39.5, 211.0], [39.6, 211.0], [39.7, 212.0], [39.8, 212.0], [39.9, 213.0], [40.0, 213.0], [40.1, 214.0], [40.2, 216.0], [40.3, 218.0], [40.4, 218.0], [40.5, 218.0], [40.6, 219.0], [40.7, 219.0], [40.8, 220.0], [40.9, 220.0], [41.0, 221.0], [41.1, 222.0], [41.2, 223.0], [41.3, 224.0], [41.4, 225.0], [41.5, 226.0], [41.6, 227.0], [41.7, 229.0], [41.8, 230.0], [41.9, 231.0], [42.0, 232.0], [42.1, 233.0], [42.2, 234.0], [42.3, 235.0], [42.4, 235.0], [42.5, 235.0], [42.6, 237.0], [42.7, 238.0], [42.8, 239.0], [42.9, 240.0], [43.0, 240.0], [43.1, 242.0], [43.2, 244.0], [43.3, 245.0], [43.4, 245.0], [43.5, 247.0], [43.6, 247.0], [43.7, 247.0], [43.8, 250.0], [43.9, 251.0], [44.0, 251.0], [44.1, 252.0], [44.2, 255.0], [44.3, 256.0], [44.4, 256.0], [44.5, 257.0], [44.6, 257.0], [44.7, 258.0], [44.8, 259.0], [44.9, 261.0], [45.0, 263.0], [45.1, 263.0], [45.2, 264.0], [45.3, 266.0], [45.4, 268.0], [45.5, 269.0], [45.6, 270.0], [45.7, 272.0], [45.8, 273.0], [45.9, 274.0], [46.0, 275.0], [46.1, 276.0], [46.2, 278.0], [46.3, 278.0], [46.4, 279.0], [46.5, 282.0], [46.6, 283.0], [46.7, 284.0], [46.8, 285.0], [46.9, 287.0], [47.0, 288.0], [47.1, 289.0], [47.2, 289.0], [47.3, 292.0], [47.4, 294.0], [47.5, 294.0], [47.6, 295.0], [47.7, 296.0], [47.8, 298.0], [47.9, 299.0], [48.0, 300.0], [48.1, 303.0], [48.2, 305.0], [48.3, 306.0], [48.4, 307.0], [48.5, 307.0], [48.6, 308.0], [48.7, 309.0], [48.8, 310.0], [48.9, 311.0], [49.0, 312.0], [49.1, 313.0], [49.2, 314.0], [49.3, 315.0], [49.4, 317.0], [49.5, 318.0], [49.6, 320.0], [49.7, 320.0], [49.8, 321.0], [49.9, 322.0], [50.0, 323.0], [50.1, 324.0], [50.2, 324.0], [50.3, 326.0], [50.4, 329.0], [50.5, 330.0], [50.6, 331.0], [50.7, 334.0], [50.8, 334.0], [50.9, 335.0], [51.0, 336.0], [51.1, 337.0], [51.2, 339.0], [51.3, 340.0], [51.4, 341.0], [51.5, 341.0], [51.6, 343.0], [51.7, 345.0], [51.8, 348.0], [51.9, 349.0], [52.0, 352.0], [52.1, 355.0], [52.2, 356.0], [52.3, 357.0], [52.4, 359.0], [52.5, 361.0], [52.6, 363.0], [52.7, 364.0], [52.8, 367.0], [52.9, 368.0], [53.0, 368.0], [53.1, 369.0], [53.2, 369.0], [53.3, 371.0], [53.4, 373.0], [53.5, 375.0], [53.6, 377.0], [53.7, 377.0], [53.8, 378.0], [53.9, 379.0], [54.0, 380.0], [54.1, 381.0], [54.2, 382.0], [54.3, 387.0], [54.4, 389.0], [54.5, 389.0], [54.6, 390.0], [54.7, 391.0], [54.8, 392.0], [54.9, 395.0], [55.0, 398.0], [55.1, 398.0], [55.2, 399.0], [55.3, 402.0], [55.4, 403.0], [55.5, 405.0], [55.6, 412.0], [55.7, 412.0], [55.8, 414.0], [55.9, 417.0], [56.0, 418.0], [56.1, 420.0], [56.2, 421.0], [56.3, 422.0], [56.4, 422.0], [56.5, 423.0], [56.6, 423.0], [56.7, 424.0], [56.8, 426.0], [56.9, 426.0], [57.0, 426.0], [57.1, 427.0], [57.2, 429.0], [57.3, 432.0], [57.4, 433.0], [57.5, 434.0], [57.6, 435.0], [57.7, 436.0], [57.8, 438.0], [57.9, 439.0], [58.0, 441.0], [58.1, 444.0], [58.2, 444.0], [58.3, 445.0], [58.4, 446.0], [58.5, 448.0], [58.6, 448.0], [58.7, 449.0], [58.8, 450.0], [58.9, 450.0], [59.0, 452.0], [59.1, 454.0], [59.2, 454.0], [59.3, 454.0], [59.4, 455.0], [59.5, 456.0], [59.6, 457.0], [59.7, 458.0], [59.8, 458.0], [59.9, 459.0], [60.0, 459.0], [60.1, 460.0], [60.2, 460.0], [60.3, 460.0], [60.4, 461.0], [60.5, 463.0], [60.6, 463.0], [60.7, 464.0], [60.8, 465.0], [60.9, 466.0], [61.0, 467.0], [61.1, 469.0], [61.2, 470.0], [61.3, 471.0], [61.4, 472.0], [61.5, 472.0], [61.6, 472.0], [61.7, 473.0], [61.8, 475.0], [61.9, 476.0], [62.0, 476.0], [62.1, 476.0], [62.2, 477.0], [62.3, 478.0], [62.4, 478.0], [62.5, 479.0], [62.6, 480.0], [62.7, 481.0], [62.8, 481.0], [62.9, 482.0], [63.0, 482.0], [63.1, 484.0], [63.2, 484.0], [63.3, 485.0], [63.4, 486.0], [63.5, 487.0], [63.6, 487.0], [63.7, 487.0], [63.8, 488.0], [63.9, 488.0], [64.0, 488.0], [64.1, 488.0], [64.2, 488.0], [64.3, 489.0], [64.4, 489.0], [64.5, 491.0], [64.6, 491.0], [64.7, 491.0], [64.8, 492.0], [64.9, 492.0], [65.0, 492.0], [65.1, 493.0], [65.2, 493.0], [65.3, 494.0], [65.4, 495.0], [65.5, 495.0], [65.6, 496.0], [65.7, 497.0], [65.8, 497.0], [65.9, 498.0], [66.0, 498.0], [66.1, 499.0], [66.2, 500.0], [66.3, 500.0], [66.4, 500.0], [66.5, 501.0], [66.6, 501.0], [66.7, 501.0], [66.8, 502.0], [66.9, 502.0], [67.0, 502.0], [67.1, 503.0], [67.2, 504.0], [67.3, 504.0], [67.4, 504.0], [67.5, 505.0], [67.6, 506.0], [67.7, 507.0], [67.8, 508.0], [67.9, 508.0], [68.0, 509.0], [68.1, 509.0], [68.2, 509.0], [68.3, 510.0], [68.4, 510.0], [68.5, 511.0], [68.6, 511.0], [68.7, 512.0], [68.8, 513.0], [68.9, 513.0], [69.0, 514.0], [69.1, 514.0], [69.2, 514.0], [69.3, 515.0], [69.4, 515.0], [69.5, 515.0], [69.6, 515.0], [69.7, 516.0], [69.8, 516.0], [69.9, 517.0], [70.0, 517.0], [70.1, 517.0], [70.2, 517.0], [70.3, 518.0], [70.4, 518.0], [70.5, 518.0], [70.6, 519.0], [70.7, 519.0], [70.8, 519.0], [70.9, 519.0], [71.0, 520.0], [71.1, 520.0], [71.2, 521.0], [71.3, 521.0], [71.4, 521.0], [71.5, 522.0], [71.6, 522.0], [71.7, 522.0], [71.8, 522.0], [71.9, 522.0], [72.0, 523.0], [72.1, 523.0], [72.2, 523.0], [72.3, 524.0], [72.4, 525.0], [72.5, 525.0], [72.6, 526.0], [72.7, 526.0], [72.8, 527.0], [72.9, 527.0], [73.0, 527.0], [73.1, 528.0], [73.2, 529.0], [73.3, 529.0], [73.4, 529.0], [73.5, 529.0], [73.6, 530.0], [73.7, 531.0], [73.8, 531.0], [73.9, 531.0], [74.0, 532.0], [74.1, 532.0], [74.2, 532.0], [74.3, 532.0], [74.4, 533.0], [74.5, 534.0], [74.6, 535.0], [74.7, 535.0], [74.8, 535.0], [74.9, 536.0], [75.0, 536.0], [75.1, 537.0], [75.2, 537.0], [75.3, 537.0], [75.4, 538.0], [75.5, 539.0], [75.6, 539.0], [75.7, 540.0], [75.8, 540.0], [75.9, 540.0], [76.0, 541.0], [76.1, 541.0], [76.2, 541.0], [76.3, 541.0], [76.4, 542.0], [76.5, 542.0], [76.6, 542.0], [76.7, 542.0], [76.8, 543.0], [76.9, 543.0], [77.0, 543.0], [77.1, 543.0], [77.2, 544.0], [77.3, 545.0], [77.4, 545.0], [77.5, 545.0], [77.6, 545.0], [77.7, 545.0], [77.8, 545.0], [77.9, 546.0], [78.0, 547.0], [78.1, 548.0], [78.2, 548.0], [78.3, 548.0], [78.4, 548.0], [78.5, 548.0], [78.6, 549.0], [78.7, 549.0], [78.8, 550.0], [78.9, 550.0], [79.0, 551.0], [79.1, 551.0], [79.2, 552.0], [79.3, 552.0], [79.4, 552.0], [79.5, 552.0], [79.6, 553.0], [79.7, 553.0], [79.8, 554.0], [79.9, 554.0], [80.0, 555.0], [80.1, 555.0], [80.2, 555.0], [80.3, 555.0], [80.4, 555.0], [80.5, 556.0], [80.6, 556.0], [80.7, 558.0], [80.8, 558.0], [80.9, 558.0], [81.0, 559.0], [81.1, 559.0], [81.2, 560.0], [81.3, 561.0], [81.4, 562.0], [81.5, 563.0], [81.6, 563.0], [81.7, 563.0], [81.8, 564.0], [81.9, 564.0], [82.0, 565.0], [82.1, 565.0], [82.2, 567.0], [82.3, 567.0], [82.4, 568.0], [82.5, 569.0], [82.6, 569.0], [82.7, 570.0], [82.8, 571.0], [82.9, 571.0], [83.0, 571.0], [83.1, 572.0], [83.2, 573.0], [83.3, 575.0], [83.4, 576.0], [83.5, 576.0], [83.6, 578.0], [83.7, 580.0], [83.8, 581.0], [83.9, 583.0], [84.0, 583.0], [84.1, 584.0], [84.2, 584.0], [84.3, 585.0], [84.4, 586.0], [84.5, 587.0], [84.6, 587.0], [84.7, 587.0], [84.8, 589.0], [84.9, 589.0], [85.0, 590.0], [85.1, 590.0], [85.2, 592.0], [85.3, 593.0], [85.4, 593.0], [85.5, 595.0], [85.6, 596.0], [85.7, 596.0], [85.8, 599.0], [85.9, 599.0], [86.0, 599.0], [86.1, 600.0], [86.2, 600.0], [86.3, 600.0], [86.4, 601.0], [86.5, 602.0], [86.6, 603.0], [86.7, 603.0], [86.8, 603.0], [86.9, 603.0], [87.0, 604.0], [87.1, 605.0], [87.2, 606.0], [87.3, 607.0], [87.4, 608.0], [87.5, 609.0], [87.6, 609.0], [87.7, 609.0], [87.8, 610.0], [87.9, 610.0], [88.0, 611.0], [88.1, 612.0], [88.2, 613.0], [88.3, 613.0], [88.4, 613.0], [88.5, 615.0], [88.6, 615.0], [88.7, 616.0], [88.8, 617.0], [88.9, 618.0], [89.0, 621.0], [89.1, 621.0], [89.2, 625.0], [89.3, 626.0], [89.4, 627.0], [89.5, 628.0], [89.6, 629.0], [89.7, 630.0], [89.8, 631.0], [89.9, 632.0], [90.0, 633.0], [90.1, 634.0], [90.2, 637.0], [90.3, 637.0], [90.4, 639.0], [90.5, 640.0], [90.6, 643.0], [90.7, 643.0], [90.8, 645.0], [90.9, 646.0], [91.0, 647.0], [91.1, 649.0], [91.2, 650.0], [91.3, 651.0], [91.4, 653.0], [91.5, 655.0], [91.6, 656.0], [91.7, 658.0], [91.8, 661.0], [91.9, 662.0], [92.0, 665.0], [92.1, 666.0], [92.2, 666.0], [92.3, 667.0], [92.4, 669.0], [92.5, 676.0], [92.6, 685.0], [92.7, 688.0], [92.8, 688.0], [92.9, 692.0], [93.0, 694.0], [93.1, 699.0], [93.2, 705.0], [93.3, 710.0], [93.4, 718.0], [93.5, 723.0], [93.6, 724.0], [93.7, 727.0], [93.8, 736.0], [93.9, 741.0], [94.0, 748.0], [94.1, 750.0], [94.2, 751.0], [94.3, 758.0], [94.4, 758.0], [94.5, 767.0], [94.6, 786.0], [94.7, 791.0], [94.8, 797.0], [94.9, 803.0], [95.0, 809.0], [95.1, 819.0], [95.2, 819.0], [95.3, 828.0], [95.4, 838.0], [95.5, 857.0], [95.6, 869.0], [95.7, 878.0], [95.8, 881.0], [95.9, 896.0], [96.0, 900.0], [96.1, 909.0], [96.2, 921.0], [96.3, 923.0], [96.4, 929.0], [96.5, 934.0], [96.6, 950.0], [96.7, 956.0], [96.8, 968.0], [96.9, 973.0], [97.0, 998.0], [97.1, 1013.0], [97.2, 1104.0], [97.3, 1145.0], [97.4, 1172.0], [97.5, 1187.0], [97.6, 1209.0], [97.7, 1221.0], [97.8, 1233.0], [97.9, 1236.0], [98.0, 1241.0], [98.1, 1247.0], [98.2, 1272.0], [98.3, 1276.0], [98.4, 1276.0], [98.5, 1286.0], [98.6, 1288.0], [98.7, 1318.0], [98.8, 1365.0], [98.9, 1368.0], [99.0, 1452.0], [99.1, 1480.0], [99.2, 1487.0], [99.3, 1583.0], [99.4, 1744.0], [99.5, 1902.0], [99.6, 1922.0], [99.7, 2212.0], [99.8, 2466.0], [99.9, 3021.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 599.0, "series": [{"data": [[0.0, 98.0], [2200.0, 1.0], [600.0, 202.0], [700.0, 128.0], [200.0, 308.0], [800.0, 60.0], [900.0, 28.0], [1000.0, 24.0], [1100.0, 13.0], [300.0, 174.0], [1200.0, 7.0], [1300.0, 4.0], [1400.0, 5.0], [1500.0, 4.0], [100.0, 522.0], [400.0, 157.0], [1700.0, 2.0], [1800.0, 5.0], [1900.0, 1.0], [500.0, 288.0]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[600.0, 199.0], [700.0, 266.0], [12100.0, 1.0], [800.0, 272.0], [900.0, 219.0], [1000.0, 117.0], [1100.0, 79.0], [1200.0, 81.0], [1300.0, 76.0], [1400.0, 25.0], [24200.0, 1.0], [1500.0, 17.0], [1600.0, 17.0], [100.0, 2.0], [1700.0, 10.0], [1800.0, 10.0], [1900.0, 10.0], [2000.0, 6.0], [2100.0, 7.0], [2300.0, 8.0], [2200.0, 5.0], [2400.0, 5.0], [2500.0, 7.0], [2700.0, 4.0], [2900.0, 3.0], [3100.0, 3.0], [200.0, 33.0], [3500.0, 1.0], [3700.0, 2.0], [3900.0, 1.0], [65200.0, 1.0], [64900.0, 1.0], [4300.0, 1.0], [4400.0, 1.0], [300.0, 170.0], [5500.0, 1.0], [5400.0, 1.0], [5600.0, 1.0], [400.0, 194.0], [500.0, 183.0]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[0.0, 40.0], [2200.0, 2.0], [600.0, 274.0], [2400.0, 2.0], [700.0, 85.0], [2700.0, 1.0], [800.0, 40.0], [200.0, 266.0], [3200.0, 1.0], [900.0, 26.0], [1000.0, 13.0], [1100.0, 12.0], [300.0, 224.0], [1200.0, 6.0], [4900.0, 1.0], [1300.0, 4.0], [1400.0, 5.0], [1500.0, 1.0], [400.0, 271.0], [100.0, 341.0], [1700.0, 6.0], [1800.0, 1.0], [1900.0, 2.0], [500.0, 407.0]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[0.0, 154.0], [2200.0, 2.0], [600.0, 144.0], [2400.0, 1.0], [700.0, 35.0], [2800.0, 1.0], [3000.0, 1.0], [3100.0, 2.0], [200.0, 220.0], [800.0, 23.0], [900.0, 22.0], [1000.0, 3.0], [1100.0, 8.0], [300.0, 149.0], [1200.0, 21.0], [1300.0, 6.0], [1400.0, 6.0], [1500.0, 2.0], [100.0, 599.0], [400.0, 221.0], [1700.0, 2.0], [1800.0, 1.0], [1900.0, 4.0], [500.0, 404.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 65200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 171.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 4155.0, "series": [{"data": [[0.0, 4155.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3808.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 171.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.55845362E12, "maxY": 20.0, "series": [{"data": [[1.55845398E12, 1.0], [1.5584538E12, 20.0], [1.55845362E12, 20.0], [1.55845392E12, 19.85264133456904], [1.55845374E12, 20.0], [1.55845386E12, 20.0], [1.55845368E12, 20.0]], "isOverall": false, "label": "stand-alone Test", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55845398E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 92.0, "minX": 1.0, "maxY": 64951.0, "series": [{"data": [[8.0, 490.0], [4.0, 299.0], [2.0, 292.0], [18.0, 104.0], [9.0, 301.0], [20.0, 413.63631865413225], [5.0, 294.0], [11.0, 486.0], [6.0, 286.0], [3.0, 421.0], [13.0, 92.0]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[19.94042343673068, 413.10881339241814]], "isOverall": false, "label": "BuyBook-Aggregated", "isController": false}, {"data": [[1.0, 64951.0], [17.0, 559.0], [19.0, 559.0], [20.0, 905.140748031496], [11.0, 648.0], [7.0, 616.0]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[19.97207251347379, 935.2351788339051]], "isOverall": false, "label": "SearchBooks-Aggregated", "isController": false}, {"data": [[20.0, 457.6838995568686]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[20.0, 457.6838995568686]], "isOverall": false, "label": "GetBook-Aggregated", "isController": false}, {"data": [[20.0, 381.1201378631211]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[20.0, 381.1201378631211]], "isOverall": false, "label": "Login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 20.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2.55, "minX": 1.55845362E12, "maxY": 172964.96666666667, "series": [{"data": [[1.55845398E12, 231.76666666666668], [1.5584538E12, 172309.88333333333], [1.55845362E12, 50882.15], [1.55845392E12, 100805.8], [1.55845374E12, 149929.88333333333], [1.55845386E12, 172964.96666666667], [1.55845368E12, 119373.21666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.55845398E12, 2.55], [1.5584538E12, 4680.55], [1.55845362E12, 1387.5333333333333], [1.55845392E12, 2786.0666666666666], [1.55845374E12, 4135.616666666667], [1.55845386E12, 4735.966666666666], [1.55845368E12, 3250.366666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55845398E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 299.35791757049884, "minX": 1.55845362E12, "maxY": 64951.0, "series": [{"data": [[1.5584538E12, 359.56762749445704], [1.55845362E12, 507.67910447761204], [1.55845392E12, 386.4399999999998], [1.55845374E12, 410.2258064516127], [1.55845386E12, 394.4232456140349], [1.55845368E12, 504.4262820512822]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[1.55845398E12, 64951.0], [1.5584538E12, 817.231601731602], [1.55845362E12, 967.7720588235294], [1.55845392E12, 753.3843283582084], [1.55845374E12, 981.8639798488665], [1.55845386E12, 807.4901960784309], [1.55845368E12, 1170.8836477987422]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[1.5584538E12, 413.55973451327435], [1.55845362E12, 481.7313432835821], [1.55845392E12, 453.8464419475657], [1.55845374E12, 441.17499999999984], [1.55845386E12, 408.4707158351412], [1.55845368E12, 606.0662460567817]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[1.5584538E12, 371.1155555555558], [1.55845362E12, 480.0074626865673], [1.55845392E12, 331.16356877323426], [1.55845374E12, 375.99255583126563], [1.55845386E12, 299.35791757049884], [1.55845368E12, 522.6751592356691]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55845398E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 293.7353579175704, "minX": 1.55845362E12, "maxY": 64842.0, "series": [{"data": [[1.5584538E12, 359.5654101995566], [1.55845362E12, 507.67910447761204], [1.55845392E12, 386.4399999999998], [1.55845374E12, 410.2258064516127], [1.55845386E12, 394.4210526315789], [1.55845368E12, 504.42307692307685]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[1.55845398E12, 64842.0], [1.5584538E12, 598.5411255411251], [1.55845362E12, 738.4558823529414], [1.55845392E12, 577.9552238805973], [1.55845374E12, 776.6146095717886], [1.55845386E12, 614.5185185185186], [1.55845368E12, 769.8270440251573]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[1.5584538E12, 383.35398230088504], [1.55845362E12, 457.7910447761192], [1.55845392E12, 441.441947565543], [1.55845374E12, 423.9024999999999], [1.55845386E12, 391.74837310195204], [1.55845368E12, 553.7255520504737]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[1.5584538E12, 353.84222222222195], [1.55845362E12, 458.55223880597026], [1.55845392E12, 324.8847583643121], [1.55845374E12, 368.03473945409417], [1.55845386E12, 293.7353579175704], [1.55845368E12, 506.9012738853503]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55845398E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.55845362E12, "maxY": 64761.0, "series": [{"data": [[1.5584538E12, 36.44567627494455], [1.55845362E12, 70.71641791044776], [1.55845392E12, 16.556363636363645], [1.55845374E12, 44.87841191066994], [1.55845386E12, 27.38157894736842], [1.55845368E12, 69.57051282051276]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[1.55845398E12, 64761.0], [1.5584538E12, 276.00000000000034], [1.55845362E12, 194.29411764705887], [1.55845392E12, 290.87313432835816], [1.55845374E12, 462.12342569269515], [1.55845386E12, 318.58605664487993], [1.55845368E12, 332.0220125786163]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[1.5584538E12, 7.382743362831857], [1.55845362E12, 20.34328358208957], [1.55845392E12, 0.0], [1.55845374E12, 2.529999999999999], [1.55845386E12, 3.34490238611713], [1.55845368E12, 42.63722397476336]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[1.5584538E12, 22.040000000000006], [1.55845362E12, 13.268656716417915], [1.55845392E12, 2.063197026022306], [1.55845374E12, 10.253101736972702], [1.55845386E12, 5.475054229934923], [1.55845368E12, 77.16560509554134]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55845398E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 57.0, "minX": 1.55845362E12, "maxY": 65214.0, "series": [{"data": [[1.55845398E12, 64951.0], [1.5584538E12, 5602.0], [1.55845362E12, 2542.0], [1.55845392E12, 1922.0], [1.55845374E12, 65214.0], [1.55845386E12, 4313.0], [1.55845368E12, 24284.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.55845398E12, 64951.0], [1.5584538E12, 57.0], [1.55845362E12, 77.0], [1.55845392E12, 59.0], [1.55845374E12, 59.0], [1.55845386E12, 59.0], [1.55845368E12, 59.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.55845398E12, 64951.0], [1.5584538E12, 926.4000000000001], [1.55845362E12, 1052.0000000000002], [1.55845392E12, 822.0], [1.55845374E12, 921.0], [1.55845386E12, 876.4000000000001], [1.55845368E12, 1326.3999999999999]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.55845398E12, 64951.0], [1.5584538E12, 1719.9599999999984], [1.55845362E12, 2478.6700000000005], [1.55845392E12, 1291.0000000000007], [1.55845374E12, 1389.8400000000001], [1.55845386E12, 1408.0], [1.55845368E12, 2752.659999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.55845398E12, 64951.0], [1.5584538E12, 1183.3999999999996], [1.55845362E12, 1382.9499999999973], [1.55845392E12, 920.0], [1.55845374E12, 1076.1999999999998], [1.55845386E12, 1006.3999999999996], [1.55845368E12, 1738.8999999999985]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55845398E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 163.0, "minX": 1.0, "maxY": 24284.0, "series": [{"data": [[2.0, 915.5], [4.0, 451.5], [6.0, 1135.0], [7.0, 1069.0], [8.0, 1323.0], [9.0, 783.0], [10.0, 835.0], [11.0, 755.0], [12.0, 775.0], [13.0, 725.0], [14.0, 575.0], [15.0, 600.0], [16.0, 685.5], [17.0, 750.0], [18.0, 593.5], [19.0, 684.5], [20.0, 618.0], [21.0, 662.0], [22.0, 582.0], [23.0, 589.5], [24.0, 547.0], [25.0, 564.0], [26.0, 498.0], [27.0, 549.5], [28.0, 479.0], [29.0, 487.0], [30.0, 500.5], [31.0, 542.0], [32.0, 407.5], [33.0, 524.5], [34.0, 449.5], [35.0, 510.0], [36.0, 506.5], [37.0, 346.5], [38.0, 423.0], [39.0, 373.0], [41.0, 477.0], [40.0, 343.0], [43.0, 415.0], [42.0, 319.5], [44.0, 375.5], [45.0, 259.0], [47.0, 274.0], [46.0, 446.5], [48.0, 520.0], [49.0, 270.0], [51.0, 233.0], [53.0, 223.5], [52.0, 213.5], [56.0, 277.0], [57.0, 163.0], [61.0, 177.0], [60.0, 222.0], [64.0, 190.5], [68.0, 168.5], [1.0, 24284.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 68.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 162.0, "minX": 1.0, "maxY": 1833.0, "series": [{"data": [[2.0, 821.0], [4.0, 451.5], [6.0, 1135.0], [7.0, 1006.0], [8.0, 1143.5], [9.0, 720.0], [10.0, 711.0], [11.0, 682.5], [12.0, 689.5], [13.0, 679.0], [14.0, 531.5], [15.0, 572.0], [16.0, 666.0], [17.0, 651.0], [18.0, 568.0], [19.0, 656.0], [20.0, 562.0], [21.0, 545.0], [22.0, 559.5], [23.0, 535.0], [24.0, 528.5], [25.0, 536.0], [26.0, 474.5], [27.0, 502.5], [28.0, 414.0], [29.0, 448.0], [30.0, 478.5], [31.0, 526.0], [32.0, 382.0], [33.0, 487.0], [34.0, 416.5], [35.0, 456.0], [36.0, 485.5], [37.0, 256.5], [38.0, 314.5], [39.0, 329.0], [41.0, 384.0], [40.0, 339.5], [43.0, 415.0], [42.0, 299.5], [44.0, 316.5], [45.0, 237.0], [47.0, 225.0], [46.0, 319.5], [48.0, 516.5], [49.0, 251.0], [51.0, 221.0], [53.0, 195.0], [52.0, 189.5], [56.0, 244.0], [57.0, 162.0], [61.0, 173.0], [60.0, 191.5], [64.0, 181.0], [68.0, 164.5], [1.0, 1833.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 68.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 9.183333333333334, "minX": 1.55845362E12, "maxY": 30.666666666666668, "series": [{"data": [[1.5584538E12, 30.233333333333334], [1.55845362E12, 9.183333333333334], [1.55845392E12, 17.7], [1.55845374E12, 26.7], [1.55845386E12, 30.666666666666668], [1.55845368E12, 21.083333333333332]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55845392E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.55845362E12, "maxY": 23.016666666666666, "series": [{"data": [[1.55845398E12, 0.016666666666666666], [1.5584538E12, 22.733333333333334], [1.55845362E12, 6.733333333333333], [1.55845392E12, 13.4], [1.55845374E12, 20.0], [1.55845386E12, 23.016666666666666], [1.55845368E12, 15.816666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.5584538E12, 7.516666666666667], [1.55845362E12, 2.2333333333333334], [1.55845392E12, 4.583333333333333], [1.55845374E12, 6.716666666666667], [1.55845386E12, 7.6], [1.55845368E12, 5.2]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55845398E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.55845362E12, "maxY": 7.7, "series": [{"data": [[1.5584538E12, 7.533333333333333], [1.55845362E12, 2.2333333333333334], [1.55845392E12, 4.45], [1.55845374E12, 6.666666666666667], [1.55845386E12, 7.683333333333334], [1.55845368E12, 5.283333333333333]], "isOverall": false, "label": "GetBook-success", "isController": false}, {"data": [[1.5584538E12, 7.516666666666667], [1.55845362E12, 2.2333333333333334], [1.55845392E12, 4.583333333333333], [1.55845374E12, 6.716666666666667], [1.55845386E12, 7.6], [1.55845368E12, 5.2]], "isOverall": false, "label": "BuyBook-success", "isController": false}, {"data": [[1.55845398E12, 0.016666666666666666], [1.5584538E12, 7.7], [1.55845362E12, 2.2666666666666666], [1.55845392E12, 4.466666666666667], [1.55845374E12, 6.616666666666666], [1.55845386E12, 7.65], [1.55845368E12, 5.3]], "isOverall": false, "label": "SearchBooks-success", "isController": false}, {"data": [[1.5584538E12, 7.5], [1.55845362E12, 2.2333333333333334], [1.55845392E12, 4.483333333333333], [1.55845374E12, 6.716666666666667], [1.55845386E12, 7.683333333333334], [1.55845368E12, 5.233333333333333]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55845398E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.55845362E12, "maxY": 30.616666666666667, "series": [{"data": [[1.55845398E12, 0.016666666666666666], [1.5584538E12, 30.25], [1.55845362E12, 8.966666666666667], [1.55845392E12, 17.983333333333334], [1.55845374E12, 26.716666666666665], [1.55845386E12, 30.616666666666667], [1.55845368E12, 21.016666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55845398E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

