/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 68.0, "minX": 0.0, "maxY": 60433.0, "series": [{"data": [[0.0, 76.0], [0.1, 76.0], [0.2, 80.0], [0.3, 80.0], [0.4, 84.0], [0.5, 84.0], [0.6, 85.0], [0.7, 85.0], [0.8, 87.0], [0.9, 87.0], [1.0, 88.0], [1.1, 88.0], [1.2, 90.0], [1.3, 91.0], [1.4, 91.0], [1.5, 91.0], [1.6, 91.0], [1.7, 92.0], [1.8, 92.0], [1.9, 92.0], [2.0, 92.0], [2.1, 92.0], [2.2, 92.0], [2.3, 92.0], [2.4, 94.0], [2.5, 94.0], [2.6, 95.0], [2.7, 95.0], [2.8, 97.0], [2.9, 97.0], [3.0, 97.0], [3.1, 97.0], [3.2, 97.0], [3.3, 97.0], [3.4, 97.0], [3.5, 98.0], [3.6, 98.0], [3.7, 98.0], [3.8, 98.0], [3.9, 98.0], [4.0, 98.0], [4.1, 98.0], [4.2, 98.0], [4.3, 99.0], [4.4, 99.0], [4.5, 99.0], [4.6, 99.0], [4.7, 99.0], [4.8, 100.0], [4.9, 100.0], [5.0, 100.0], [5.1, 100.0], [5.2, 103.0], [5.3, 103.0], [5.4, 103.0], [5.5, 103.0], [5.6, 103.0], [5.7, 103.0], [5.8, 103.0], [5.9, 104.0], [6.0, 104.0], [6.1, 104.0], [6.2, 104.0], [6.3, 104.0], [6.4, 104.0], [6.5, 104.0], [6.6, 104.0], [6.7, 104.0], [6.8, 104.0], [6.9, 105.0], [7.0, 105.0], [7.1, 105.0], [7.2, 105.0], [7.3, 105.0], [7.4, 106.0], [7.5, 106.0], [7.6, 107.0], [7.7, 107.0], [7.8, 108.0], [7.9, 108.0], [8.0, 108.0], [8.1, 109.0], [8.2, 109.0], [8.3, 109.0], [8.4, 109.0], [8.5, 110.0], [8.6, 110.0], [8.7, 110.0], [8.8, 110.0], [8.9, 110.0], [9.0, 110.0], [9.1, 111.0], [9.2, 111.0], [9.3, 111.0], [9.4, 111.0], [9.5, 111.0], [9.6, 112.0], [9.7, 112.0], [9.8, 112.0], [9.9, 112.0], [10.0, 112.0], [10.1, 112.0], [10.2, 112.0], [10.3, 113.0], [10.4, 113.0], [10.5, 113.0], [10.6, 113.0], [10.7, 114.0], [10.8, 114.0], [10.9, 114.0], [11.0, 114.0], [11.1, 114.0], [11.2, 114.0], [11.3, 115.0], [11.4, 115.0], [11.5, 115.0], [11.6, 115.0], [11.7, 115.0], [11.8, 116.0], [11.9, 116.0], [12.0, 116.0], [12.1, 116.0], [12.2, 117.0], [12.3, 117.0], [12.4, 117.0], [12.5, 117.0], [12.6, 117.0], [12.7, 117.0], [12.8, 117.0], [12.9, 118.0], [13.0, 118.0], [13.1, 119.0], [13.2, 119.0], [13.3, 120.0], [13.4, 120.0], [13.5, 120.0], [13.6, 120.0], [13.7, 120.0], [13.8, 121.0], [13.9, 121.0], [14.0, 121.0], [14.1, 121.0], [14.2, 121.0], [14.3, 121.0], [14.4, 121.0], [14.5, 121.0], [14.6, 122.0], [14.7, 122.0], [14.8, 122.0], [14.9, 122.0], [15.0, 122.0], [15.1, 122.0], [15.2, 122.0], [15.3, 123.0], [15.4, 123.0], [15.5, 123.0], [15.6, 123.0], [15.7, 124.0], [15.8, 124.0], [15.9, 125.0], [16.0, 126.0], [16.1, 126.0], [16.2, 127.0], [16.3, 127.0], [16.4, 127.0], [16.5, 127.0], [16.6, 127.0], [16.7, 127.0], [16.8, 129.0], [16.9, 129.0], [17.0, 130.0], [17.1, 130.0], [17.2, 130.0], [17.3, 131.0], [17.4, 131.0], [17.5, 131.0], [17.6, 131.0], [17.7, 131.0], [17.8, 131.0], [17.9, 131.0], [18.0, 131.0], [18.1, 131.0], [18.2, 134.0], [18.3, 134.0], [18.4, 134.0], [18.5, 134.0], [18.6, 134.0], [18.7, 134.0], [18.8, 135.0], [18.9, 135.0], [19.0, 137.0], [19.1, 137.0], [19.2, 137.0], [19.3, 137.0], [19.4, 138.0], [19.5, 140.0], [19.6, 140.0], [19.7, 141.0], [19.8, 141.0], [19.9, 142.0], [20.0, 142.0], [20.1, 142.0], [20.2, 142.0], [20.3, 144.0], [20.4, 144.0], [20.5, 147.0], [20.6, 148.0], [20.7, 148.0], [20.8, 149.0], [20.9, 149.0], [21.0, 149.0], [21.1, 149.0], [21.2, 150.0], [21.3, 150.0], [21.4, 151.0], [21.5, 151.0], [21.6, 151.0], [21.7, 152.0], [21.8, 152.0], [21.9, 152.0], [22.0, 152.0], [22.1, 153.0], [22.2, 153.0], [22.3, 154.0], [22.4, 154.0], [22.5, 154.0], [22.6, 154.0], [22.7, 155.0], [22.8, 155.0], [22.9, 155.0], [23.0, 158.0], [23.1, 158.0], [23.2, 158.0], [23.3, 158.0], [23.4, 158.0], [23.5, 158.0], [23.6, 158.0], [23.7, 158.0], [23.8, 160.0], [23.9, 162.0], [24.0, 162.0], [24.1, 162.0], [24.2, 162.0], [24.3, 163.0], [24.4, 163.0], [24.5, 163.0], [24.6, 163.0], [24.7, 166.0], [24.8, 166.0], [24.9, 167.0], [25.0, 167.0], [25.1, 167.0], [25.2, 167.0], [25.3, 167.0], [25.4, 167.0], [25.5, 167.0], [25.6, 168.0], [25.7, 168.0], [25.8, 168.0], [25.9, 168.0], [26.0, 171.0], [26.1, 171.0], [26.2, 172.0], [26.3, 172.0], [26.4, 172.0], [26.5, 172.0], [26.6, 172.0], [26.7, 173.0], [26.8, 173.0], [26.9, 175.0], [27.0, 175.0], [27.1, 176.0], [27.2, 176.0], [27.3, 177.0], [27.4, 178.0], [27.5, 178.0], [27.6, 181.0], [27.7, 181.0], [27.8, 182.0], [27.9, 182.0], [28.0, 182.0], [28.1, 182.0], [28.2, 183.0], [28.3, 183.0], [28.4, 183.0], [28.5, 185.0], [28.6, 185.0], [28.7, 185.0], [28.8, 185.0], [28.9, 186.0], [29.0, 186.0], [29.1, 188.0], [29.2, 188.0], [29.3, 189.0], [29.4, 189.0], [29.5, 190.0], [29.6, 190.0], [29.7, 190.0], [29.8, 191.0], [29.9, 191.0], [30.0, 195.0], [30.1, 195.0], [30.2, 196.0], [30.3, 196.0], [30.4, 197.0], [30.5, 197.0], [30.6, 197.0], [30.7, 198.0], [30.8, 198.0], [30.9, 200.0], [31.0, 200.0], [31.1, 200.0], [31.2, 200.0], [31.3, 206.0], [31.4, 206.0], [31.5, 206.0], [31.6, 206.0], [31.7, 207.0], [31.8, 207.0], [31.9, 208.0], [32.0, 214.0], [32.1, 214.0], [32.2, 216.0], [32.3, 216.0], [32.4, 216.0], [32.5, 216.0], [32.6, 217.0], [32.7, 217.0], [32.8, 219.0], [32.9, 219.0], [33.0, 220.0], [33.1, 223.0], [33.2, 223.0], [33.3, 224.0], [33.4, 224.0], [33.5, 224.0], [33.6, 224.0], [33.7, 228.0], [33.8, 228.0], [33.9, 231.0], [34.0, 231.0], [34.1, 233.0], [34.2, 238.0], [34.3, 238.0], [34.4, 240.0], [34.5, 240.0], [34.6, 241.0], [34.7, 241.0], [34.8, 241.0], [34.9, 241.0], [35.0, 242.0], [35.1, 242.0], [35.2, 242.0], [35.3, 246.0], [35.4, 246.0], [35.5, 249.0], [35.6, 249.0], [35.7, 250.0], [35.8, 250.0], [35.9, 251.0], [36.0, 251.0], [36.1, 251.0], [36.2, 251.0], [36.3, 252.0], [36.4, 256.0], [36.5, 256.0], [36.6, 263.0], [36.7, 263.0], [36.8, 263.0], [36.9, 263.0], [37.0, 267.0], [37.1, 267.0], [37.2, 270.0], [37.3, 270.0], [37.4, 278.0], [37.5, 278.0], [37.6, 279.0], [37.7, 279.0], [37.8, 279.0], [37.9, 280.0], [38.0, 280.0], [38.1, 282.0], [38.2, 282.0], [38.3, 284.0], [38.4, 284.0], [38.5, 285.0], [38.6, 285.0], [38.7, 286.0], [38.8, 288.0], [38.9, 288.0], [39.0, 289.0], [39.1, 289.0], [39.2, 291.0], [39.3, 291.0], [39.4, 295.0], [39.5, 295.0], [39.6, 300.0], [39.7, 300.0], [39.8, 301.0], [39.9, 302.0], [40.0, 302.0], [40.1, 303.0], [40.2, 303.0], [40.3, 303.0], [40.4, 303.0], [40.5, 304.0], [40.6, 304.0], [40.7, 305.0], [40.8, 305.0], [40.9, 307.0], [41.0, 308.0], [41.1, 308.0], [41.2, 309.0], [41.3, 309.0], [41.4, 313.0], [41.5, 313.0], [41.6, 317.0], [41.7, 317.0], [41.8, 319.0], [41.9, 319.0], [42.0, 321.0], [42.1, 326.0], [42.2, 326.0], [42.3, 328.0], [42.4, 328.0], [42.5, 332.0], [42.6, 332.0], [42.7, 332.0], [42.8, 332.0], [42.9, 332.0], [43.0, 332.0], [43.1, 333.0], [43.2, 337.0], [43.3, 337.0], [43.4, 345.0], [43.5, 345.0], [43.6, 361.0], [43.7, 361.0], [43.8, 365.0], [43.9, 365.0], [44.0, 365.0], [44.1, 365.0], [44.2, 366.0], [44.3, 366.0], [44.4, 368.0], [44.5, 368.0], [44.6, 368.0], [44.7, 369.0], [44.8, 369.0], [44.9, 370.0], [45.0, 370.0], [45.1, 370.0], [45.2, 370.0], [45.3, 375.0], [45.4, 375.0], [45.5, 375.0], [45.6, 376.0], [45.7, 376.0], [45.8, 378.0], [45.9, 378.0], [46.0, 378.0], [46.1, 378.0], [46.2, 382.0], [46.3, 382.0], [46.4, 382.0], [46.5, 382.0], [46.6, 388.0], [46.7, 396.0], [46.8, 396.0], [46.9, 398.0], [47.0, 398.0], [47.1, 411.0], [47.2, 411.0], [47.3, 412.0], [47.4, 412.0], [47.5, 417.0], [47.6, 417.0], [47.7, 426.0], [47.8, 426.0], [47.9, 426.0], [48.0, 435.0], [48.1, 435.0], [48.2, 443.0], [48.3, 443.0], [48.4, 460.0], [48.5, 460.0], [48.6, 461.0], [48.7, 461.0], [48.8, 462.0], [48.9, 462.0], [49.0, 462.0], [49.1, 484.0], [49.2, 484.0], [49.3, 488.0], [49.4, 488.0], [49.5, 492.0], [49.6, 492.0], [49.7, 498.0], [49.8, 498.0], [49.9, 501.0], [50.0, 501.0], [50.1, 503.0], [50.2, 504.0], [50.3, 504.0], [50.4, 506.0], [50.5, 506.0], [50.6, 515.0], [50.7, 515.0], [50.8, 547.0], [50.9, 547.0], [51.0, 548.0], [51.1, 548.0], [51.2, 549.0], [51.3, 563.0], [51.4, 563.0], [51.5, 575.0], [51.6, 575.0], [51.7, 578.0], [51.8, 578.0], [51.9, 580.0], [52.0, 580.0], [52.1, 582.0], [52.2, 582.0], [52.3, 592.0], [52.4, 598.0], [52.5, 598.0], [52.6, 620.0], [52.7, 620.0], [52.8, 632.0], [52.9, 632.0], [53.0, 639.0], [53.1, 639.0], [53.2, 651.0], [53.3, 651.0], [53.4, 655.0], [53.5, 655.0], [53.6, 655.0], [53.7, 659.0], [53.8, 659.0], [53.9, 659.0], [54.0, 659.0], [54.1, 686.0], [54.2, 686.0], [54.3, 686.0], [54.4, 686.0], [54.5, 695.0], [54.6, 695.0], [54.7, 695.0], [54.8, 696.0], [54.9, 696.0], [55.0, 703.0], [55.1, 703.0], [55.2, 705.0], [55.3, 705.0], [55.4, 743.0], [55.5, 743.0], [55.6, 752.0], [55.7, 773.0], [55.8, 773.0], [55.9, 779.0], [56.0, 779.0], [56.1, 799.0], [56.2, 799.0], [56.3, 818.0], [56.4, 818.0], [56.5, 819.0], [56.6, 819.0], [56.7, 878.0], [56.8, 878.0], [56.9, 883.0], [57.0, 886.0], [57.1, 886.0], [57.2, 912.0], [57.3, 912.0], [57.4, 916.0], [57.5, 916.0], [57.6, 983.0], [57.7, 983.0], [57.8, 1026.0], [57.9, 1026.0], [58.0, 1033.0], [58.1, 1043.0], [58.2, 1043.0], [58.3, 1060.0], [58.4, 1060.0], [58.5, 1110.0], [58.6, 1110.0], [58.7, 1177.0], [58.8, 1177.0], [58.9, 1180.0], [59.0, 1180.0], [59.1, 1188.0], [59.2, 1229.0], [59.3, 1229.0], [59.4, 1278.0], [59.5, 1278.0], [59.6, 1672.0], [59.7, 1672.0], [59.8, 1708.0], [59.9, 1708.0], [60.0, 1733.0], [60.1, 1733.0], [60.2, 1958.0], [60.3, 2005.0], [60.4, 2005.0], [60.5, 2597.0], [60.6, 2597.0], [60.7, 3010.0], [60.8, 3010.0], [60.9, 3015.0], [61.0, 3015.0], [61.1, 3015.0], [61.2, 3015.0], [61.3, 3025.0], [61.4, 3350.0], [61.5, 3350.0], [61.6, 3804.0], [61.7, 3804.0], [61.8, 3815.0], [61.9, 3815.0], [62.0, 3884.0], [62.1, 3884.0], [62.2, 3958.0], [62.3, 3958.0], [62.4, 26399.0], [62.5, 26399.0], [62.6, 29034.0], [62.7, 29647.0], [62.8, 29647.0], [62.9, 29920.0], [63.0, 29920.0], [63.1, 29928.0], [63.2, 29928.0], [63.3, 29932.0], [63.4, 29932.0], [63.5, 30059.0], [63.6, 30059.0], [63.7, 30070.0], [63.8, 30087.0], [63.9, 30087.0], [64.0, 30104.0], [64.1, 30104.0], [64.2, 30109.0], [64.3, 30109.0], [64.4, 30109.0], [64.5, 30109.0], [64.6, 30111.0], [64.7, 30111.0], [64.8, 30114.0], [64.9, 30114.0], [65.0, 30114.0], [65.1, 30115.0], [65.2, 30115.0], [65.3, 30118.0], [65.4, 30118.0], [65.5, 30119.0], [65.6, 30119.0], [65.7, 30135.0], [65.8, 30135.0], [65.9, 30138.0], [66.0, 30139.0], [66.1, 30139.0], [66.2, 30140.0], [66.3, 30140.0], [66.4, 30140.0], [66.5, 30140.0], [66.6, 30143.0], [66.7, 30143.0], [66.8, 30143.0], [66.9, 30143.0], [67.0, 30158.0], [67.1, 30162.0], [67.2, 30162.0], [67.3, 30164.0], [67.4, 30164.0], [67.5, 30165.0], [67.6, 30165.0], [67.7, 30166.0], [67.8, 30166.0], [67.9, 30167.0], [68.0, 30167.0], [68.1, 30167.0], [68.2, 30169.0], [68.3, 30169.0], [68.4, 30172.0], [68.5, 30172.0], [68.6, 30173.0], [68.7, 30173.0], [68.8, 30176.0], [68.9, 30176.0], [69.0, 30182.0], [69.1, 30182.0], [69.2, 30184.0], [69.3, 30184.0], [69.4, 30185.0], [69.5, 30187.0], [69.6, 30187.0], [69.7, 30187.0], [69.8, 30187.0], [69.9, 30192.0], [70.0, 30192.0], [70.1, 30199.0], [70.2, 30199.0], [70.3, 30199.0], [70.4, 30199.0], [70.5, 30200.0], [70.6, 30201.0], [70.7, 30201.0], [70.8, 30204.0], [70.9, 30204.0], [71.0, 30206.0], [71.1, 30206.0], [71.2, 30206.0], [71.3, 30206.0], [71.4, 30208.0], [71.5, 30208.0], [71.6, 30208.0], [71.7, 30209.0], [71.8, 30209.0], [71.9, 30210.0], [72.0, 30210.0], [72.1, 30210.0], [72.2, 30210.0], [72.3, 30211.0], [72.4, 30211.0], [72.5, 30211.0], [72.6, 30211.0], [72.7, 30215.0], [72.8, 30218.0], [72.9, 30218.0], [73.0, 30221.0], [73.1, 30221.0], [73.2, 30224.0], [73.3, 30224.0], [73.4, 30230.0], [73.5, 30230.0], [73.6, 30231.0], [73.7, 30231.0], [73.8, 30231.0], [73.9, 30232.0], [74.0, 30232.0], [74.1, 30233.0], [74.2, 30233.0], [74.3, 30237.0], [74.4, 30237.0], [74.5, 30257.0], [74.6, 30257.0], [74.7, 30261.0], [74.8, 30261.0], [74.9, 30274.0], [75.0, 30274.0], [75.1, 30274.0], [75.2, 30278.0], [75.3, 30278.0], [75.4, 30280.0], [75.5, 30280.0], [75.6, 30283.0], [75.7, 30283.0], [75.8, 30284.0], [75.9, 30284.0], [76.0, 30294.0], [76.1, 30294.0], [76.2, 30310.0], [76.3, 30310.0], [76.4, 30310.0], [76.5, 30311.0], [76.6, 30311.0], [76.7, 30312.0], [76.8, 30312.0], [76.9, 30318.0], [77.0, 30318.0], [77.1, 30335.0], [77.2, 30335.0], [77.3, 30341.0], [77.4, 30346.0], [77.5, 30346.0], [77.6, 30369.0], [77.7, 30369.0], [77.8, 30435.0], [77.9, 30435.0], [78.0, 30435.0], [78.1, 30435.0], [78.2, 30435.0], [78.3, 30435.0], [78.4, 30444.0], [78.5, 30448.0], [78.6, 30448.0], [78.7, 30449.0], [78.8, 30449.0], [78.9, 30452.0], [79.0, 30452.0], [79.1, 30460.0], [79.2, 30460.0], [79.3, 30464.0], [79.4, 30464.0], [79.5, 30467.0], [79.6, 30481.0], [79.7, 30481.0], [79.8, 30492.0], [79.9, 30492.0], [80.0, 30536.0], [80.1, 30536.0], [80.2, 30551.0], [80.3, 30551.0], [80.4, 30562.0], [80.5, 30562.0], [80.6, 30570.0], [80.7, 30620.0], [80.8, 30620.0], [80.9, 30639.0], [81.0, 30639.0], [81.1, 30645.0], [81.2, 30645.0], [81.3, 30654.0], [81.4, 30654.0], [81.5, 30656.0], [81.6, 30656.0], [81.7, 30659.0], [81.8, 30659.0], [81.9, 30660.0], [82.0, 30661.0], [82.1, 30661.0], [82.2, 30666.0], [82.3, 30666.0], [82.4, 30667.0], [82.5, 30667.0], [82.6, 30668.0], [82.7, 30668.0], [82.8, 30675.0], [82.9, 30675.0], [83.0, 30680.0], [83.1, 30682.0], [83.2, 30682.0], [83.3, 30687.0], [83.4, 30687.0], [83.5, 30694.0], [83.6, 30694.0], [83.7, 30694.0], [83.8, 30694.0], [83.9, 30702.0], [84.0, 30702.0], [84.1, 30712.0], [84.2, 30730.0], [84.3, 30730.0], [84.4, 30737.0], [84.5, 30737.0], [84.6, 30758.0], [84.7, 30758.0], [84.8, 30759.0], [84.9, 30759.0], [85.0, 30759.0], [85.1, 30759.0], [85.2, 30769.0], [85.3, 30778.0], [85.4, 30778.0], [85.5, 30778.0], [85.6, 30778.0], [85.7, 30781.0], [85.8, 30781.0], [85.9, 30781.0], [86.0, 30781.0], [86.1, 30864.0], [86.2, 30864.0], [86.3, 30868.0], [86.4, 30886.0], [86.5, 30886.0], [86.6, 30889.0], [86.7, 30889.0], [86.8, 30891.0], [86.9, 30891.0], [87.0, 30891.0], [87.1, 30891.0], [87.2, 30901.0], [87.3, 30901.0], [87.4, 30907.0], [87.5, 30907.0], [87.6, 30908.0], [87.7, 30909.0], [87.8, 30909.0], [87.9, 30917.0], [88.0, 30917.0], [88.1, 30922.0], [88.2, 30922.0], [88.3, 30938.0], [88.4, 30938.0], [88.5, 30940.0], [88.6, 30940.0], [88.7, 30958.0], [88.8, 30982.0], [88.9, 30982.0], [89.0, 31020.0], [89.1, 31020.0], [89.2, 31046.0], [89.3, 31046.0], [89.4, 31046.0], [89.5, 31046.0], [89.6, 31118.0], [89.7, 31118.0], [89.8, 31118.0], [89.9, 31124.0], [90.0, 31124.0], [90.1, 31125.0], [90.2, 31125.0], [90.3, 31136.0], [90.4, 31136.0], [90.5, 31153.0], [90.6, 31153.0], [90.7, 31333.0], [90.8, 31333.0], [90.9, 31420.0], [91.0, 31426.0], [91.1, 31426.0], [91.2, 31432.0], [91.3, 31432.0], [91.4, 31438.0], [91.5, 31438.0], [91.6, 31484.0], [91.7, 31484.0], [91.8, 31498.0], [91.9, 31498.0], [92.0, 31504.0], [92.1, 31510.0], [92.2, 31510.0], [92.3, 31532.0], [92.4, 31532.0], [92.5, 31596.0], [92.6, 31596.0], [92.7, 31632.0], [92.8, 31632.0], [92.9, 31642.0], [93.0, 31642.0], [93.1, 31646.0], [93.2, 31667.0], [93.3, 31667.0], [93.4, 31697.0], [93.5, 31697.0], [93.6, 32108.0], [93.7, 32108.0], [93.8, 32364.0], [93.9, 32364.0], [94.0, 32410.0], [94.1, 32410.0], [94.2, 32462.0], [94.3, 32462.0], [94.4, 32523.0], [94.5, 32557.0], [94.6, 32557.0], [94.7, 32558.0], [94.8, 32558.0], [94.9, 32816.0], [95.0, 32816.0], [95.1, 32820.0], [95.2, 32820.0], [95.3, 32995.0], [95.4, 32995.0], [95.5, 33134.0], [95.6, 33135.0], [95.7, 33135.0], [95.8, 33141.0], [95.9, 33141.0], [96.0, 33542.0], [96.1, 33542.0], [96.2, 33746.0], [96.3, 33746.0], [96.4, 59119.0], [96.5, 59119.0], [96.6, 59716.0], [96.7, 59828.0], [96.8, 59828.0], [96.9, 59837.0], [97.0, 59837.0], [97.1, 59868.0], [97.2, 59868.0], [97.3, 59868.0], [97.4, 59868.0], [97.5, 60056.0], [97.6, 60056.0], [97.7, 60110.0], [97.8, 60153.0], [97.9, 60153.0], [98.0, 60155.0], [98.1, 60155.0], [98.2, 60160.0], [98.3, 60160.0], [98.4, 60202.0], [98.5, 60202.0], [98.6, 60216.0], [98.7, 60216.0], [98.8, 60230.0], [98.9, 60235.0], [99.0, 60235.0], [99.1, 60252.0], [99.2, 60252.0], [99.3, 60302.0], [99.4, 60302.0], [99.5, 60308.0], [99.6, 60308.0], [99.7, 60314.0], [99.8, 60314.0], [99.9, 60433.0], [100.0, 60433.0]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[0.0, 270.0], [0.1, 270.0], [0.2, 279.0], [0.3, 279.0], [0.4, 287.0], [0.5, 287.0], [0.6, 323.0], [0.7, 323.0], [0.8, 323.0], [0.9, 329.0], [1.0, 329.0], [1.1, 337.0], [1.2, 337.0], [1.3, 356.0], [1.4, 356.0], [1.5, 384.0], [1.6, 384.0], [1.7, 398.0], [1.8, 399.0], [1.9, 399.0], [2.0, 401.0], [2.1, 401.0], [2.2, 411.0], [2.3, 411.0], [2.4, 413.0], [2.5, 424.0], [2.6, 424.0], [2.7, 428.0], [2.8, 428.0], [2.9, 435.0], [3.0, 435.0], [3.1, 444.0], [3.2, 444.0], [3.3, 457.0], [3.4, 470.0], [3.5, 470.0], [3.6, 470.0], [3.7, 470.0], [3.8, 474.0], [3.9, 474.0], [4.0, 482.0], [4.1, 486.0], [4.2, 486.0], [4.3, 487.0], [4.4, 487.0], [4.5, 491.0], [4.6, 491.0], [4.7, 491.0], [4.8, 491.0], [4.9, 493.0], [5.0, 501.0], [5.1, 501.0], [5.2, 504.0], [5.3, 504.0], [5.4, 504.0], [5.5, 504.0], [5.6, 510.0], [5.7, 511.0], [5.8, 511.0], [5.9, 511.0], [6.0, 511.0], [6.1, 513.0], [6.2, 513.0], [6.3, 514.0], [6.4, 514.0], [6.5, 521.0], [6.6, 524.0], [6.7, 524.0], [6.8, 527.0], [6.9, 527.0], [7.0, 529.0], [7.1, 529.0], [7.2, 530.0], [7.3, 539.0], [7.4, 539.0], [7.5, 549.0], [7.6, 549.0], [7.7, 551.0], [7.8, 551.0], [7.9, 553.0], [8.0, 553.0], [8.1, 557.0], [8.2, 557.0], [8.3, 557.0], [8.4, 557.0], [8.5, 557.0], [8.6, 559.0], [8.7, 559.0], [8.8, 563.0], [8.9, 571.0], [9.0, 571.0], [9.1, 574.0], [9.2, 574.0], [9.3, 577.0], [9.4, 577.0], [9.5, 580.0], [9.6, 580.0], [9.7, 589.0], [9.8, 592.0], [9.9, 592.0], [10.0, 596.0], [10.1, 596.0], [10.2, 598.0], [10.3, 598.0], [10.4, 603.0], [10.5, 607.0], [10.6, 607.0], [10.7, 610.0], [10.8, 610.0], [10.9, 618.0], [11.0, 618.0], [11.1, 625.0], [11.2, 625.0], [11.3, 625.0], [11.4, 627.0], [11.5, 627.0], [11.6, 628.0], [11.7, 628.0], [11.8, 628.0], [11.9, 628.0], [12.0, 630.0], [12.1, 633.0], [12.2, 633.0], [12.3, 634.0], [12.4, 634.0], [12.5, 638.0], [12.6, 638.0], [12.7, 639.0], [12.8, 639.0], [12.9, 643.0], [13.0, 655.0], [13.1, 655.0], [13.2, 657.0], [13.3, 657.0], [13.4, 657.0], [13.5, 657.0], [13.6, 664.0], [13.7, 664.0], [13.8, 667.0], [13.9, 667.0], [14.0, 667.0], [14.1, 668.0], [14.2, 668.0], [14.3, 673.0], [14.4, 673.0], [14.5, 675.0], [14.6, 688.0], [14.7, 688.0], [14.8, 689.0], [14.9, 689.0], [15.0, 691.0], [15.1, 691.0], [15.2, 692.0], [15.3, 692.0], [15.4, 695.0], [15.5, 695.0], [15.6, 695.0], [15.7, 696.0], [15.8, 696.0], [15.9, 699.0], [16.0, 699.0], [16.1, 705.0], [16.2, 705.0], [16.3, 705.0], [16.4, 706.0], [16.5, 706.0], [16.6, 707.0], [16.7, 707.0], [16.8, 711.0], [16.9, 711.0], [17.0, 713.0], [17.1, 717.0], [17.2, 717.0], [17.3, 730.0], [17.4, 730.0], [17.5, 731.0], [17.6, 731.0], [17.7, 746.0], [17.8, 746.0], [17.9, 746.0], [18.0, 747.0], [18.1, 747.0], [18.2, 751.0], [18.3, 751.0], [18.4, 754.0], [18.5, 754.0], [18.6, 754.0], [18.7, 758.0], [18.8, 758.0], [18.9, 760.0], [19.0, 760.0], [19.1, 760.0], [19.2, 760.0], [19.3, 768.0], [19.4, 769.0], [19.5, 769.0], [19.6, 770.0], [19.7, 770.0], [19.8, 779.0], [19.9, 779.0], [20.0, 782.0], [20.1, 782.0], [20.2, 784.0], [20.3, 790.0], [20.4, 790.0], [20.5, 792.0], [20.6, 792.0], [20.7, 803.0], [20.8, 803.0], [20.9, 805.0], [21.0, 815.0], [21.1, 815.0], [21.2, 817.0], [21.3, 817.0], [21.4, 830.0], [21.5, 830.0], [21.6, 838.0], [21.7, 838.0], [21.8, 840.0], [21.9, 848.0], [22.0, 848.0], [22.1, 850.0], [22.2, 850.0], [22.3, 851.0], [22.4, 851.0], [22.5, 854.0], [22.6, 858.0], [22.7, 858.0], [22.8, 861.0], [22.9, 861.0], [23.0, 861.0], [23.1, 861.0], [23.2, 864.0], [23.3, 864.0], [23.4, 869.0], [23.5, 871.0], [23.6, 871.0], [23.7, 873.0], [23.8, 873.0], [23.9, 877.0], [24.0, 877.0], [24.1, 880.0], [24.2, 883.0], [24.3, 883.0], [24.4, 887.0], [24.5, 887.0], [24.6, 887.0], [24.7, 887.0], [24.8, 896.0], [24.9, 896.0], [25.0, 904.0], [25.1, 908.0], [25.2, 908.0], [25.3, 909.0], [25.4, 909.0], [25.5, 909.0], [25.6, 909.0], [25.7, 920.0], [25.8, 920.0], [25.9, 923.0], [26.0, 930.0], [26.1, 930.0], [26.2, 931.0], [26.3, 931.0], [26.4, 933.0], [26.5, 933.0], [26.6, 938.0], [26.7, 941.0], [26.8, 941.0], [26.9, 951.0], [27.0, 951.0], [27.1, 953.0], [27.2, 953.0], [27.3, 958.0], [27.4, 958.0], [27.5, 958.0], [27.6, 961.0], [27.7, 961.0], [27.8, 968.0], [27.9, 968.0], [28.0, 975.0], [28.1, 975.0], [28.2, 980.0], [28.3, 982.0], [28.4, 982.0], [28.5, 985.0], [28.6, 985.0], [28.7, 986.0], [28.8, 986.0], [28.9, 992.0], [29.0, 992.0], [29.1, 995.0], [29.2, 995.0], [29.3, 995.0], [29.4, 999.0], [29.5, 999.0], [29.6, 1001.0], [29.7, 1001.0], [29.8, 1014.0], [29.9, 1016.0], [30.0, 1016.0], [30.1, 1021.0], [30.2, 1021.0], [30.3, 1024.0], [30.4, 1024.0], [30.5, 1027.0], [30.6, 1027.0], [30.7, 1030.0], [30.8, 1033.0], [30.9, 1033.0], [31.0, 1038.0], [31.1, 1038.0], [31.2, 1042.0], [31.3, 1042.0], [31.4, 1052.0], [31.5, 1052.0], [31.6, 1052.0], [31.7, 1052.0], [31.8, 1052.0], [31.9, 1057.0], [32.0, 1057.0], [32.1, 1057.0], [32.2, 1057.0], [32.3, 1058.0], [32.4, 1059.0], [32.5, 1059.0], [32.6, 1061.0], [32.7, 1061.0], [32.8, 1063.0], [32.9, 1063.0], [33.0, 1066.0], [33.1, 1067.0], [33.2, 1067.0], [33.3, 1069.0], [33.4, 1069.0], [33.5, 1072.0], [33.6, 1072.0], [33.7, 1078.0], [33.8, 1078.0], [33.9, 1085.0], [34.0, 1086.0], [34.1, 1086.0], [34.2, 1092.0], [34.3, 1092.0], [34.4, 1093.0], [34.5, 1093.0], [34.6, 1100.0], [34.7, 1101.0], [34.8, 1101.0], [34.9, 1104.0], [35.0, 1104.0], [35.1, 1112.0], [35.2, 1112.0], [35.3, 1114.0], [35.4, 1114.0], [35.5, 1116.0], [35.6, 1123.0], [35.7, 1123.0], [35.8, 1127.0], [35.9, 1127.0], [36.0, 1128.0], [36.1, 1128.0], [36.2, 1130.0], [36.3, 1133.0], [36.4, 1133.0], [36.5, 1134.0], [36.6, 1134.0], [36.7, 1137.0], [36.8, 1137.0], [36.9, 1139.0], [37.0, 1139.0], [37.1, 1139.0], [37.2, 1144.0], [37.3, 1144.0], [37.4, 1147.0], [37.5, 1147.0], [37.6, 1148.0], [37.7, 1148.0], [37.8, 1152.0], [37.9, 1152.0], [38.0, 1156.0], [38.1, 1160.0], [38.2, 1160.0], [38.3, 1169.0], [38.4, 1169.0], [38.5, 1169.0], [38.6, 1169.0], [38.7, 1170.0], [38.8, 1171.0], [38.9, 1171.0], [39.0, 1189.0], [39.1, 1189.0], [39.2, 1198.0], [39.3, 1198.0], [39.4, 1203.0], [39.5, 1203.0], [39.6, 1210.0], [39.7, 1216.0], [39.8, 1216.0], [39.9, 1219.0], [40.0, 1219.0], [40.1, 1220.0], [40.2, 1220.0], [40.3, 1222.0], [40.4, 1231.0], [40.5, 1231.0], [40.6, 1232.0], [40.7, 1232.0], [40.8, 1253.0], [40.9, 1253.0], [41.0, 1265.0], [41.1, 1265.0], [41.2, 1313.0], [41.3, 1315.0], [41.4, 1315.0], [41.5, 1316.0], [41.6, 1316.0], [41.7, 1317.0], [41.8, 1317.0], [41.9, 1332.0], [42.0, 1340.0], [42.1, 1340.0], [42.2, 1341.0], [42.3, 1341.0], [42.4, 1343.0], [42.5, 1343.0], [42.6, 1347.0], [42.7, 1347.0], [42.8, 1360.0], [42.9, 1366.0], [43.0, 1366.0], [43.1, 1373.0], [43.2, 1373.0], [43.3, 1391.0], [43.4, 1391.0], [43.5, 1394.0], [43.6, 1398.0], [43.7, 1398.0], [43.8, 1403.0], [43.9, 1403.0], [44.0, 1421.0], [44.1, 1421.0], [44.2, 1422.0], [44.3, 1422.0], [44.4, 1436.0], [44.5, 1439.0], [44.6, 1439.0], [44.7, 1445.0], [44.8, 1445.0], [44.9, 1446.0], [45.0, 1446.0], [45.1, 1447.0], [45.2, 1456.0], [45.3, 1456.0], [45.4, 1457.0], [45.5, 1457.0], [45.6, 1459.0], [45.7, 1459.0], [45.8, 1483.0], [45.9, 1483.0], [46.0, 1523.0], [46.1, 1523.0], [46.2, 1523.0], [46.3, 1527.0], [46.4, 1527.0], [46.5, 1533.0], [46.6, 1533.0], [46.7, 1533.0], [46.8, 1559.0], [46.9, 1559.0], [47.0, 1565.0], [47.1, 1565.0], [47.2, 1565.0], [47.3, 1565.0], [47.4, 1574.0], [47.5, 1574.0], [47.6, 1576.0], [47.7, 1584.0], [47.8, 1584.0], [47.9, 1593.0], [48.0, 1593.0], [48.1, 1595.0], [48.2, 1595.0], [48.3, 1606.0], [48.4, 1627.0], [48.5, 1627.0], [48.6, 1627.0], [48.7, 1627.0], [48.8, 1627.0], [48.9, 1627.0], [49.0, 1627.0], [49.1, 1627.0], [49.2, 1628.0], [49.3, 1642.0], [49.4, 1642.0], [49.5, 1659.0], [49.6, 1659.0], [49.7, 1661.0], [49.8, 1661.0], [49.9, 1673.0], [50.0, 1681.0], [50.1, 1681.0], [50.2, 1691.0], [50.3, 1691.0], [50.4, 1707.0], [50.5, 1707.0], [50.6, 1710.0], [50.7, 1710.0], [50.8, 1716.0], [50.9, 1720.0], [51.0, 1720.0], [51.1, 1749.0], [51.2, 1749.0], [51.3, 1761.0], [51.4, 1761.0], [51.5, 1767.0], [51.6, 1767.0], [51.7, 1769.0], [51.8, 1770.0], [51.9, 1770.0], [52.0, 1770.0], [52.1, 1770.0], [52.2, 1788.0], [52.3, 1788.0], [52.4, 1796.0], [52.5, 1804.0], [52.6, 1804.0], [52.7, 1820.0], [52.8, 1820.0], [52.9, 1843.0], [53.0, 1843.0], [53.1, 1886.0], [53.2, 1886.0], [53.3, 1889.0], [53.4, 1897.0], [53.5, 1897.0], [53.6, 1900.0], [53.7, 1900.0], [53.8, 1918.0], [53.9, 1918.0], [54.0, 1918.0], [54.1, 1918.0], [54.2, 1918.0], [54.3, 1919.0], [54.4, 1919.0], [54.5, 1922.0], [54.6, 1922.0], [54.7, 1924.0], [54.8, 1924.0], [54.9, 1964.0], [55.0, 1975.0], [55.1, 1975.0], [55.2, 1985.0], [55.3, 1985.0], [55.4, 2005.0], [55.5, 2005.0], [55.6, 2005.0], [55.7, 2012.0], [55.8, 2012.0], [55.9, 2012.0], [56.0, 2012.0], [56.1, 2014.0], [56.2, 2014.0], [56.3, 2016.0], [56.4, 2016.0], [56.5, 2016.0], [56.6, 2019.0], [56.7, 2019.0], [56.8, 2025.0], [56.9, 2025.0], [57.0, 2045.0], [57.1, 2045.0], [57.2, 2049.0], [57.3, 2064.0], [57.4, 2064.0], [57.5, 2066.0], [57.6, 2066.0], [57.7, 2067.0], [57.8, 2067.0], [57.9, 2077.0], [58.0, 2077.0], [58.1, 2083.0], [58.2, 2087.0], [58.3, 2087.0], [58.4, 2131.0], [58.5, 2131.0], [58.6, 2136.0], [58.7, 2136.0], [58.8, 2144.0], [58.9, 2191.0], [59.0, 2191.0], [59.1, 2226.0], [59.2, 2226.0], [59.3, 2234.0], [59.4, 2234.0], [59.5, 2255.0], [59.6, 2255.0], [59.7, 2260.0], [59.8, 2268.0], [59.9, 2268.0], [60.0, 2304.0], [60.1, 2304.0], [60.2, 2313.0], [60.3, 2313.0], [60.4, 2325.0], [60.5, 2348.0], [60.6, 2348.0], [60.7, 2350.0], [60.8, 2350.0], [60.9, 2388.0], [61.0, 2388.0], [61.1, 2392.0], [61.2, 2392.0], [61.3, 2393.0], [61.4, 2401.0], [61.5, 2401.0], [61.6, 2412.0], [61.7, 2412.0], [61.8, 2421.0], [61.9, 2421.0], [62.0, 2463.0], [62.1, 2476.0], [62.2, 2476.0], [62.3, 2476.0], [62.4, 2476.0], [62.5, 2492.0], [62.6, 2492.0], [62.7, 2497.0], [62.8, 2497.0], [62.9, 2497.0], [63.0, 2504.0], [63.1, 2504.0], [63.2, 2527.0], [63.3, 2527.0], [63.4, 2552.0], [63.5, 2552.0], [63.6, 2555.0], [63.7, 2555.0], [63.8, 2559.0], [63.9, 2564.0], [64.0, 2564.0], [64.1, 2582.0], [64.2, 2582.0], [64.3, 2583.0], [64.4, 2583.0], [64.5, 2586.0], [64.6, 2590.0], [64.7, 2590.0], [64.8, 2594.0], [64.9, 2594.0], [65.0, 2615.0], [65.1, 2615.0], [65.2, 2618.0], [65.3, 2618.0], [65.4, 2619.0], [65.5, 2629.0], [65.6, 2629.0], [65.7, 2629.0], [65.8, 2629.0], [65.9, 2631.0], [66.0, 2631.0], [66.1, 2631.0], [66.2, 2637.0], [66.3, 2637.0], [66.4, 2640.0], [66.5, 2640.0], [66.6, 2644.0], [66.7, 2644.0], [66.8, 2645.0], [66.9, 2645.0], [67.0, 2648.0], [67.1, 2667.0], [67.2, 2667.0], [67.3, 2668.0], [67.4, 2668.0], [67.5, 2669.0], [67.6, 2669.0], [67.7, 2677.0], [67.8, 2682.0], [67.9, 2682.0], [68.0, 2686.0], [68.1, 2686.0], [68.2, 2710.0], [68.3, 2710.0], [68.4, 2710.0], [68.5, 2710.0], [68.6, 2710.0], [68.7, 2711.0], [68.8, 2711.0], [68.9, 2712.0], [69.0, 2712.0], [69.1, 2712.0], [69.2, 2712.0], [69.3, 2713.0], [69.4, 2718.0], [69.5, 2718.0], [69.6, 2722.0], [69.7, 2722.0], [69.8, 2725.0], [69.9, 2725.0], [70.0, 2734.0], [70.1, 2734.0], [70.2, 2745.0], [70.3, 2746.0], [70.4, 2746.0], [70.5, 2747.0], [70.6, 2747.0], [70.7, 2748.0], [70.8, 2748.0], [70.9, 2751.0], [71.0, 2777.0], [71.1, 2777.0], [71.2, 2780.0], [71.3, 2780.0], [71.4, 2809.0], [71.5, 2809.0], [71.6, 2830.0], [71.7, 2830.0], [71.8, 2854.0], [71.9, 2882.0], [72.0, 2882.0], [72.1, 2898.0], [72.2, 2898.0], [72.3, 2898.0], [72.4, 2898.0], [72.5, 2901.0], [72.6, 2906.0], [72.7, 2906.0], [72.8, 2939.0], [72.9, 2939.0], [73.0, 2940.0], [73.1, 2940.0], [73.2, 2941.0], [73.3, 2941.0], [73.4, 2941.0], [73.5, 3000.0], [73.6, 3000.0], [73.7, 3080.0], [73.8, 3080.0], [73.9, 3097.0], [74.0, 3097.0], [74.1, 3135.0], [74.2, 3252.0], [74.3, 3252.0], [74.4, 3256.0], [74.5, 3256.0], [74.6, 3281.0], [74.7, 3281.0], [74.8, 3336.0], [74.9, 3336.0], [75.0, 3341.0], [75.1, 3354.0], [75.2, 3354.0], [75.3, 3419.0], [75.4, 3419.0], [75.5, 3537.0], [75.6, 3537.0], [75.7, 3576.0], [75.8, 3576.0], [75.9, 3599.0], [76.0, 3607.0], [76.1, 3607.0], [76.2, 3632.0], [76.3, 3632.0], [76.4, 3636.0], [76.5, 3636.0], [76.6, 3641.0], [76.7, 3665.0], [76.8, 3665.0], [76.9, 3671.0], [77.0, 3671.0], [77.1, 3681.0], [77.2, 3681.0], [77.3, 3695.0], [77.4, 3695.0], [77.5, 3711.0], [77.6, 3720.0], [77.7, 3720.0], [77.8, 3814.0], [77.9, 3814.0], [78.0, 3853.0], [78.1, 3853.0], [78.2, 3885.0], [78.3, 4166.0], [78.4, 4166.0], [78.5, 4247.0], [78.6, 4247.0], [78.7, 4322.0], [78.8, 4322.0], [78.9, 5300.0], [79.0, 5300.0], [79.1, 5645.0], [79.2, 6373.0], [79.3, 6373.0], [79.4, 6460.0], [79.5, 6460.0], [79.6, 12127.0], [79.7, 12127.0], [79.8, 29708.0], [79.9, 29972.0], [80.0, 29972.0], [80.1, 30023.0], [80.2, 30023.0], [80.3, 30025.0], [80.4, 30025.0], [80.5, 30036.0], [80.6, 30036.0], [80.7, 30042.0], [80.8, 30052.0], [80.9, 30052.0], [81.0, 30060.0], [81.1, 30060.0], [81.2, 30061.0], [81.3, 30061.0], [81.4, 30062.0], [81.5, 30076.0], [81.6, 30076.0], [81.7, 30077.0], [81.8, 30077.0], [81.9, 30108.0], [82.0, 30108.0], [82.1, 30126.0], [82.2, 30126.0], [82.3, 30167.0], [82.4, 30186.0], [82.5, 30186.0], [82.6, 30193.0], [82.7, 30193.0], [82.8, 30199.0], [82.9, 30199.0], [83.0, 30203.0], [83.1, 30203.0], [83.2, 30203.0], [83.3, 30204.0], [83.4, 30204.0], [83.5, 30206.0], [83.6, 30206.0], [83.7, 30206.0], [83.8, 30206.0], [83.9, 30209.0], [84.0, 30214.0], [84.1, 30214.0], [84.2, 30216.0], [84.3, 30216.0], [84.4, 30217.0], [84.5, 30217.0], [84.6, 30217.0], [84.7, 30220.0], [84.8, 30220.0], [84.9, 30221.0], [85.0, 30221.0], [85.1, 30222.0], [85.2, 30222.0], [85.3, 30224.0], [85.4, 30224.0], [85.5, 30225.0], [85.6, 30226.0], [85.7, 30226.0], [85.8, 30226.0], [85.9, 30226.0], [86.0, 30226.0], [86.1, 30226.0], [86.2, 30228.0], [86.3, 30228.0], [86.4, 30228.0], [86.5, 30229.0], [86.6, 30229.0], [86.7, 30230.0], [86.8, 30230.0], [86.9, 30231.0], [87.0, 30231.0], [87.1, 30237.0], [87.2, 30239.0], [87.3, 30239.0], [87.4, 30242.0], [87.5, 30242.0], [87.6, 30243.0], [87.7, 30243.0], [87.8, 30244.0], [87.9, 30244.0], [88.0, 30244.0], [88.1, 30244.0], [88.2, 30244.0], [88.3, 30250.0], [88.4, 30250.0], [88.5, 30259.0], [88.6, 30259.0], [88.7, 30261.0], [88.8, 30265.0], [88.9, 30265.0], [89.0, 30265.0], [89.1, 30265.0], [89.2, 30265.0], [89.3, 30265.0], [89.4, 30268.0], [89.5, 30268.0], [89.6, 30269.0], [89.7, 30270.0], [89.8, 30270.0], [89.9, 30272.0], [90.0, 30272.0], [90.1, 30273.0], [90.2, 30273.0], [90.3, 30274.0], [90.4, 30275.0], [90.5, 30275.0], [90.6, 30276.0], [90.7, 30276.0], [90.8, 30276.0], [90.9, 30276.0], [91.0, 30284.0], [91.1, 30284.0], [91.2, 30285.0], [91.3, 30285.0], [91.4, 30285.0], [91.5, 30290.0], [91.6, 30290.0], [91.7, 30291.0], [91.8, 30291.0], [91.9, 30294.0], [92.0, 30300.0], [92.1, 30300.0], [92.2, 30306.0], [92.3, 30306.0], [92.4, 30315.0], [92.5, 30315.0], [92.6, 30327.0], [92.7, 30327.0], [92.8, 30329.0], [92.9, 30331.0], [93.0, 30331.0], [93.1, 30335.0], [93.2, 30335.0], [93.3, 30338.0], [93.4, 30338.0], [93.5, 30340.0], [93.6, 30341.0], [93.7, 30341.0], [93.8, 30342.0], [93.9, 30342.0], [94.0, 30344.0], [94.1, 30344.0], [94.2, 30346.0], [94.3, 30346.0], [94.4, 30348.0], [94.5, 30354.0], [94.6, 30354.0], [94.7, 30356.0], [94.8, 30356.0], [94.9, 30357.0], [95.0, 30357.0], [95.1, 30360.0], [95.2, 30362.0], [95.3, 30362.0], [95.4, 30369.0], [95.5, 30369.0], [95.6, 30374.0], [95.7, 30374.0], [95.8, 30374.0], [95.9, 30374.0], [96.0, 30376.0], [96.1, 30384.0], [96.2, 30384.0], [96.3, 30385.0], [96.4, 30385.0], [96.5, 30388.0], [96.6, 30388.0], [96.7, 30392.0], [96.8, 30395.0], [96.9, 30395.0], [97.0, 30403.0], [97.1, 30403.0], [97.2, 30405.0], [97.3, 30405.0], [97.4, 30410.0], [97.5, 30410.0], [97.6, 30425.0], [97.7, 30426.0], [97.8, 30426.0], [97.9, 30431.0], [98.0, 30431.0], [98.1, 30460.0], [98.2, 30460.0], [98.3, 30463.0], [98.4, 30494.0], [98.5, 30494.0], [98.6, 30610.0], [98.7, 30610.0], [98.8, 30618.0], [98.9, 30618.0], [99.0, 30619.0], [99.1, 30619.0], [99.2, 30837.0], [99.3, 30934.0], [99.4, 30934.0], [99.5, 30955.0], [99.6, 30955.0], [99.7, 30956.0], [99.8, 30956.0], [99.9, 31079.0], [100.0, 31079.0]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[0.0, 81.0], [0.1, 81.0], [0.2, 93.0], [0.3, 93.0], [0.4, 97.0], [0.5, 97.0], [0.6, 98.0], [0.7, 98.0], [0.8, 99.0], [0.9, 101.0], [1.0, 101.0], [1.1, 102.0], [1.2, 102.0], [1.3, 107.0], [1.4, 107.0], [1.5, 110.0], [1.6, 110.0], [1.7, 113.0], [1.8, 115.0], [1.9, 115.0], [2.0, 115.0], [2.1, 115.0], [2.2, 119.0], [2.3, 119.0], [2.4, 119.0], [2.5, 119.0], [2.6, 119.0], [2.7, 120.0], [2.8, 120.0], [2.9, 122.0], [3.0, 122.0], [3.1, 126.0], [3.2, 126.0], [3.3, 127.0], [3.4, 129.0], [3.5, 129.0], [3.6, 130.0], [3.7, 130.0], [3.8, 132.0], [3.9, 132.0], [4.0, 137.0], [4.1, 140.0], [4.2, 140.0], [4.3, 147.0], [4.4, 147.0], [4.5, 149.0], [4.6, 149.0], [4.7, 150.0], [4.8, 150.0], [4.9, 153.0], [5.0, 157.0], [5.1, 157.0], [5.2, 158.0], [5.3, 158.0], [5.4, 158.0], [5.5, 158.0], [5.6, 158.0], [5.7, 162.0], [5.8, 162.0], [5.9, 164.0], [6.0, 164.0], [6.1, 167.0], [6.2, 167.0], [6.3, 168.0], [6.4, 168.0], [6.5, 172.0], [6.6, 175.0], [6.7, 175.0], [6.8, 179.0], [6.9, 179.0], [7.0, 183.0], [7.1, 183.0], [7.2, 184.0], [7.3, 190.0], [7.4, 190.0], [7.5, 191.0], [7.6, 191.0], [7.7, 192.0], [7.8, 192.0], [7.9, 194.0], [8.0, 194.0], [8.1, 196.0], [8.2, 197.0], [8.3, 197.0], [8.4, 198.0], [8.5, 198.0], [8.6, 200.0], [8.7, 200.0], [8.8, 201.0], [8.9, 202.0], [9.0, 202.0], [9.1, 203.0], [9.2, 203.0], [9.3, 204.0], [9.4, 204.0], [9.5, 205.0], [9.6, 205.0], [9.7, 206.0], [9.8, 210.0], [9.9, 210.0], [10.0, 210.0], [10.1, 210.0], [10.2, 210.0], [10.3, 210.0], [10.4, 212.0], [10.5, 215.0], [10.6, 215.0], [10.7, 218.0], [10.8, 218.0], [10.9, 218.0], [11.0, 218.0], [11.1, 221.0], [11.2, 221.0], [11.3, 223.0], [11.4, 224.0], [11.5, 224.0], [11.6, 225.0], [11.7, 225.0], [11.8, 225.0], [11.9, 225.0], [12.0, 227.0], [12.1, 234.0], [12.2, 234.0], [12.3, 238.0], [12.4, 238.0], [12.5, 242.0], [12.6, 242.0], [12.7, 244.0], [12.8, 244.0], [12.9, 249.0], [13.0, 249.0], [13.1, 249.0], [13.2, 250.0], [13.3, 250.0], [13.4, 254.0], [13.5, 254.0], [13.6, 254.0], [13.7, 254.0], [13.8, 261.0], [13.9, 261.0], [14.0, 261.0], [14.1, 263.0], [14.2, 263.0], [14.3, 268.0], [14.4, 268.0], [14.5, 269.0], [14.6, 272.0], [14.7, 272.0], [14.8, 274.0], [14.9, 274.0], [15.0, 276.0], [15.1, 276.0], [15.2, 284.0], [15.3, 284.0], [15.4, 287.0], [15.5, 290.0], [15.6, 290.0], [15.7, 290.0], [15.8, 290.0], [15.9, 298.0], [16.0, 298.0], [16.1, 302.0], [16.2, 320.0], [16.3, 320.0], [16.4, 320.0], [16.5, 320.0], [16.6, 323.0], [16.7, 323.0], [16.8, 323.0], [16.9, 323.0], [17.0, 324.0], [17.1, 329.0], [17.2, 329.0], [17.3, 340.0], [17.4, 340.0], [17.5, 343.0], [17.6, 343.0], [17.7, 343.0], [17.8, 344.0], [17.9, 344.0], [18.0, 345.0], [18.1, 345.0], [18.2, 351.0], [18.3, 351.0], [18.4, 351.0], [18.5, 351.0], [18.6, 355.0], [18.7, 360.0], [18.8, 360.0], [18.9, 360.0], [19.0, 360.0], [19.1, 364.0], [19.2, 364.0], [19.3, 365.0], [19.4, 365.0], [19.5, 365.0], [19.6, 367.0], [19.7, 367.0], [19.8, 371.0], [19.9, 371.0], [20.0, 373.0], [20.1, 373.0], [20.2, 374.0], [20.3, 375.0], [20.4, 375.0], [20.5, 375.0], [20.6, 375.0], [20.7, 381.0], [20.8, 381.0], [20.9, 382.0], [21.0, 382.0], [21.1, 382.0], [21.2, 382.0], [21.3, 382.0], [21.4, 385.0], [21.5, 385.0], [21.6, 388.0], [21.7, 388.0], [21.8, 388.0], [21.9, 400.0], [22.0, 400.0], [22.1, 401.0], [22.2, 401.0], [22.3, 404.0], [22.4, 404.0], [22.5, 414.0], [22.6, 414.0], [22.7, 414.0], [22.8, 418.0], [22.9, 418.0], [23.0, 419.0], [23.1, 419.0], [23.2, 419.0], [23.3, 419.0], [23.4, 419.0], [23.5, 425.0], [23.6, 425.0], [23.7, 426.0], [23.8, 426.0], [23.9, 427.0], [24.0, 427.0], [24.1, 431.0], [24.2, 431.0], [24.3, 431.0], [24.4, 432.0], [24.5, 432.0], [24.6, 439.0], [24.7, 439.0], [24.8, 446.0], [24.9, 446.0], [25.0, 449.0], [25.1, 450.0], [25.2, 450.0], [25.3, 452.0], [25.4, 452.0], [25.5, 460.0], [25.6, 460.0], [25.7, 461.0], [25.8, 461.0], [25.9, 466.0], [26.0, 469.0], [26.1, 469.0], [26.2, 469.0], [26.3, 469.0], [26.4, 469.0], [26.5, 469.0], [26.6, 470.0], [26.7, 471.0], [26.8, 471.0], [26.9, 474.0], [27.0, 474.0], [27.1, 477.0], [27.2, 477.0], [27.3, 478.0], [27.4, 478.0], [27.5, 480.0], [27.6, 483.0], [27.7, 483.0], [27.8, 484.0], [27.9, 484.0], [28.0, 484.0], [28.1, 484.0], [28.2, 486.0], [28.3, 487.0], [28.4, 487.0], [28.5, 488.0], [28.6, 488.0], [28.7, 488.0], [28.8, 488.0], [28.9, 488.0], [29.0, 488.0], [29.1, 489.0], [29.2, 490.0], [29.3, 490.0], [29.4, 492.0], [29.5, 492.0], [29.6, 493.0], [29.7, 493.0], [29.8, 499.0], [29.9, 502.0], [30.0, 502.0], [30.1, 505.0], [30.2, 505.0], [30.3, 508.0], [30.4, 508.0], [30.5, 512.0], [30.6, 512.0], [30.7, 513.0], [30.8, 514.0], [30.9, 514.0], [31.0, 516.0], [31.1, 516.0], [31.2, 517.0], [31.3, 517.0], [31.4, 523.0], [31.5, 528.0], [31.6, 528.0], [31.7, 528.0], [31.8, 528.0], [31.9, 528.0], [32.0, 528.0], [32.1, 531.0], [32.2, 531.0], [32.3, 535.0], [32.4, 537.0], [32.5, 537.0], [32.6, 539.0], [32.7, 539.0], [32.8, 540.0], [32.9, 540.0], [33.0, 540.0], [33.1, 541.0], [33.2, 541.0], [33.3, 543.0], [33.4, 543.0], [33.5, 544.0], [33.6, 544.0], [33.7, 544.0], [33.8, 544.0], [33.9, 544.0], [34.0, 545.0], [34.1, 545.0], [34.2, 548.0], [34.3, 548.0], [34.4, 548.0], [34.5, 548.0], [34.6, 550.0], [34.7, 551.0], [34.8, 551.0], [34.9, 552.0], [35.0, 552.0], [35.1, 556.0], [35.2, 556.0], [35.3, 556.0], [35.4, 556.0], [35.5, 562.0], [35.6, 568.0], [35.7, 568.0], [35.8, 570.0], [35.9, 570.0], [36.0, 578.0], [36.1, 578.0], [36.2, 579.0], [36.3, 580.0], [36.4, 580.0], [36.5, 580.0], [36.6, 580.0], [36.7, 582.0], [36.8, 582.0], [36.9, 583.0], [37.0, 583.0], [37.1, 585.0], [37.2, 588.0], [37.3, 588.0], [37.4, 595.0], [37.5, 595.0], [37.6, 596.0], [37.7, 596.0], [37.8, 597.0], [37.9, 597.0], [38.0, 598.0], [38.1, 601.0], [38.2, 601.0], [38.3, 602.0], [38.4, 602.0], [38.5, 618.0], [38.6, 618.0], [38.7, 620.0], [38.8, 623.0], [38.9, 623.0], [39.0, 623.0], [39.1, 623.0], [39.2, 624.0], [39.3, 624.0], [39.4, 631.0], [39.5, 631.0], [39.6, 634.0], [39.7, 634.0], [39.8, 634.0], [39.9, 636.0], [40.0, 636.0], [40.1, 638.0], [40.2, 638.0], [40.3, 640.0], [40.4, 641.0], [40.5, 641.0], [40.6, 642.0], [40.7, 642.0], [40.8, 649.0], [40.9, 649.0], [41.0, 650.0], [41.1, 650.0], [41.2, 650.0], [41.3, 651.0], [41.4, 651.0], [41.5, 652.0], [41.6, 652.0], [41.7, 653.0], [41.8, 653.0], [41.9, 663.0], [42.0, 664.0], [42.1, 664.0], [42.2, 664.0], [42.3, 664.0], [42.4, 666.0], [42.5, 666.0], [42.6, 668.0], [42.7, 668.0], [42.8, 671.0], [42.9, 673.0], [43.0, 673.0], [43.1, 682.0], [43.2, 682.0], [43.3, 684.0], [43.4, 684.0], [43.5, 691.0], [43.6, 694.0], [43.7, 694.0], [43.8, 695.0], [43.9, 695.0], [44.0, 702.0], [44.1, 702.0], [44.2, 704.0], [44.3, 704.0], [44.4, 706.0], [44.5, 707.0], [44.6, 707.0], [44.7, 719.0], [44.8, 719.0], [44.9, 721.0], [45.0, 721.0], [45.1, 723.0], [45.2, 734.0], [45.3, 734.0], [45.4, 738.0], [45.5, 738.0], [45.6, 738.0], [45.7, 738.0], [45.8, 741.0], [45.9, 741.0], [46.0, 742.0], [46.1, 742.0], [46.2, 742.0], [46.3, 747.0], [46.4, 747.0], [46.5, 758.0], [46.6, 758.0], [46.7, 758.0], [46.8, 763.0], [46.9, 763.0], [47.0, 763.0], [47.1, 763.0], [47.2, 769.0], [47.3, 769.0], [47.4, 774.0], [47.5, 774.0], [47.6, 777.0], [47.7, 779.0], [47.8, 779.0], [47.9, 791.0], [48.0, 791.0], [48.1, 792.0], [48.2, 792.0], [48.3, 796.0], [48.4, 796.0], [48.5, 796.0], [48.6, 798.0], [48.7, 798.0], [48.8, 801.0], [48.9, 801.0], [49.0, 805.0], [49.1, 805.0], [49.2, 806.0], [49.3, 810.0], [49.4, 810.0], [49.5, 810.0], [49.6, 810.0], [49.7, 813.0], [49.8, 813.0], [49.9, 815.0], [50.0, 818.0], [50.1, 818.0], [50.2, 819.0], [50.3, 819.0], [50.4, 819.0], [50.5, 819.0], [50.6, 820.0], [50.7, 820.0], [50.8, 820.0], [50.9, 824.0], [51.0, 824.0], [51.1, 825.0], [51.2, 825.0], [51.3, 827.0], [51.4, 827.0], [51.5, 831.0], [51.6, 831.0], [51.7, 832.0], [51.8, 853.0], [51.9, 853.0], [52.0, 855.0], [52.1, 855.0], [52.2, 864.0], [52.3, 864.0], [52.4, 865.0], [52.5, 866.0], [52.6, 866.0], [52.7, 867.0], [52.8, 867.0], [52.9, 871.0], [53.0, 871.0], [53.1, 871.0], [53.2, 871.0], [53.3, 875.0], [53.4, 879.0], [53.5, 879.0], [53.6, 882.0], [53.7, 882.0], [53.8, 884.0], [53.9, 884.0], [54.0, 884.0], [54.1, 888.0], [54.2, 888.0], [54.3, 889.0], [54.4, 889.0], [54.5, 901.0], [54.6, 901.0], [54.7, 905.0], [54.8, 905.0], [54.9, 906.0], [55.0, 910.0], [55.1, 910.0], [55.2, 916.0], [55.3, 916.0], [55.4, 919.0], [55.5, 919.0], [55.6, 927.0], [55.7, 928.0], [55.8, 928.0], [55.9, 932.0], [56.0, 932.0], [56.1, 935.0], [56.2, 935.0], [56.3, 952.0], [56.4, 952.0], [56.5, 952.0], [56.6, 954.0], [56.7, 954.0], [56.8, 955.0], [56.9, 955.0], [57.0, 955.0], [57.1, 955.0], [57.2, 958.0], [57.3, 968.0], [57.4, 968.0], [57.5, 971.0], [57.6, 971.0], [57.7, 977.0], [57.8, 977.0], [57.9, 981.0], [58.0, 981.0], [58.1, 982.0], [58.2, 983.0], [58.3, 983.0], [58.4, 984.0], [58.5, 984.0], [58.6, 986.0], [58.7, 986.0], [58.8, 988.0], [58.9, 996.0], [59.0, 996.0], [59.1, 997.0], [59.2, 997.0], [59.3, 998.0], [59.4, 998.0], [59.5, 998.0], [59.6, 998.0], [59.7, 1000.0], [59.8, 1004.0], [59.9, 1004.0], [60.0, 1006.0], [60.1, 1006.0], [60.2, 1008.0], [60.3, 1008.0], [60.4, 1008.0], [60.5, 1008.0], [60.6, 1008.0], [60.7, 1009.0], [60.8, 1009.0], [60.9, 1011.0], [61.0, 1011.0], [61.1, 1014.0], [61.2, 1014.0], [61.3, 1016.0], [61.4, 1017.0], [61.5, 1017.0], [61.6, 1020.0], [61.7, 1020.0], [61.8, 1021.0], [61.9, 1021.0], [62.0, 1025.0], [62.1, 1026.0], [62.2, 1026.0], [62.3, 1031.0], [62.4, 1031.0], [62.5, 1034.0], [62.6, 1034.0], [62.7, 1041.0], [62.8, 1041.0], [62.9, 1041.0], [63.0, 1042.0], [63.1, 1042.0], [63.2, 1042.0], [63.3, 1042.0], [63.4, 1043.0], [63.5, 1043.0], [63.6, 1048.0], [63.7, 1048.0], [63.8, 1049.0], [63.9, 1060.0], [64.0, 1060.0], [64.1, 1068.0], [64.2, 1068.0], [64.3, 1069.0], [64.4, 1069.0], [64.5, 1076.0], [64.6, 1082.0], [64.7, 1082.0], [64.8, 1083.0], [64.9, 1083.0], [65.0, 1088.0], [65.1, 1088.0], [65.2, 1089.0], [65.3, 1089.0], [65.4, 1092.0], [65.5, 1095.0], [65.6, 1095.0], [65.7, 1097.0], [65.8, 1097.0], [65.9, 1106.0], [66.0, 1106.0], [66.1, 1108.0], [66.2, 1121.0], [66.3, 1121.0], [66.4, 1134.0], [66.5, 1134.0], [66.6, 1136.0], [66.7, 1136.0], [66.8, 1154.0], [66.9, 1154.0], [67.0, 1163.0], [67.1, 1176.0], [67.2, 1176.0], [67.3, 1179.0], [67.4, 1179.0], [67.5, 1187.0], [67.6, 1187.0], [67.7, 1187.0], [67.8, 1189.0], [67.9, 1189.0], [68.0, 1204.0], [68.1, 1204.0], [68.2, 1204.0], [68.3, 1204.0], [68.4, 1206.0], [68.5, 1206.0], [68.6, 1216.0], [68.7, 1221.0], [68.8, 1221.0], [68.9, 1222.0], [69.0, 1222.0], [69.1, 1222.0], [69.2, 1222.0], [69.3, 1224.0], [69.4, 1237.0], [69.5, 1237.0], [69.6, 1249.0], [69.7, 1249.0], [69.8, 1255.0], [69.9, 1255.0], [70.0, 1257.0], [70.1, 1257.0], [70.2, 1262.0], [70.3, 1265.0], [70.4, 1265.0], [70.5, 1281.0], [70.6, 1281.0], [70.7, 1283.0], [70.8, 1283.0], [70.9, 1287.0], [71.0, 1287.0], [71.1, 1287.0], [71.2, 1288.0], [71.3, 1288.0], [71.4, 1292.0], [71.5, 1292.0], [71.6, 1297.0], [71.7, 1297.0], [71.8, 1311.0], [71.9, 1313.0], [72.0, 1313.0], [72.1, 1317.0], [72.2, 1317.0], [72.3, 1329.0], [72.4, 1329.0], [72.5, 1341.0], [72.6, 1346.0], [72.7, 1346.0], [72.8, 1347.0], [72.9, 1347.0], [73.0, 1353.0], [73.1, 1353.0], [73.2, 1357.0], [73.3, 1357.0], [73.4, 1366.0], [73.5, 1387.0], [73.6, 1387.0], [73.7, 1389.0], [73.8, 1389.0], [73.9, 1394.0], [74.0, 1394.0], [74.1, 1400.0], [74.2, 1438.0], [74.3, 1438.0], [74.4, 1441.0], [74.5, 1441.0], [74.6, 1443.0], [74.7, 1443.0], [74.8, 1444.0], [74.9, 1444.0], [75.0, 1445.0], [75.1, 1458.0], [75.2, 1458.0], [75.3, 1461.0], [75.4, 1461.0], [75.5, 1465.0], [75.6, 1465.0], [75.7, 1483.0], [75.8, 1483.0], [75.9, 1493.0], [76.0, 1498.0], [76.1, 1498.0], [76.2, 1505.0], [76.3, 1505.0], [76.4, 1505.0], [76.5, 1505.0], [76.6, 1508.0], [76.7, 1514.0], [76.8, 1514.0], [76.9, 1516.0], [77.0, 1516.0], [77.1, 1523.0], [77.2, 1523.0], [77.3, 1529.0], [77.4, 1529.0], [77.5, 1539.0], [77.6, 1543.0], [77.7, 1543.0], [77.8, 1568.0], [77.9, 1568.0], [78.0, 1591.0], [78.1, 1591.0], [78.2, 1594.0], [78.3, 1594.0], [78.4, 1594.0], [78.5, 1606.0], [78.6, 1606.0], [78.7, 1610.0], [78.8, 1610.0], [78.9, 1617.0], [79.0, 1617.0], [79.1, 1649.0], [79.2, 1676.0], [79.3, 1676.0], [79.4, 1688.0], [79.5, 1688.0], [79.6, 1704.0], [79.7, 1704.0], [79.8, 1717.0], [79.9, 1725.0], [80.0, 1725.0], [80.1, 1735.0], [80.2, 1735.0], [80.3, 1754.0], [80.4, 1754.0], [80.5, 1770.0], [80.6, 1770.0], [80.7, 1772.0], [80.8, 1783.0], [80.9, 1783.0], [81.0, 1816.0], [81.1, 1816.0], [81.2, 1816.0], [81.3, 1816.0], [81.4, 1830.0], [81.5, 1865.0], [81.6, 1865.0], [81.7, 1881.0], [81.8, 1881.0], [81.9, 1884.0], [82.0, 1884.0], [82.1, 1977.0], [82.2, 1977.0], [82.3, 2005.0], [82.4, 2066.0], [82.5, 2066.0], [82.6, 2103.0], [82.7, 2103.0], [82.8, 2128.0], [82.9, 2128.0], [83.0, 2241.0], [83.1, 2268.0], [83.2, 2268.0], [83.3, 2320.0], [83.4, 2320.0], [83.5, 2321.0], [83.6, 2321.0], [83.7, 2353.0], [83.8, 2353.0], [83.9, 2527.0], [84.0, 2565.0], [84.1, 2565.0], [84.2, 2568.0], [84.3, 2568.0], [84.4, 2586.0], [84.5, 2586.0], [84.6, 2587.0], [84.7, 2593.0], [84.8, 2593.0], [84.9, 2641.0], [85.0, 2641.0], [85.1, 2748.0], [85.2, 2748.0], [85.3, 2870.0], [85.4, 2870.0], [85.5, 3147.0], [85.6, 3171.0], [85.7, 3171.0], [85.8, 3184.0], [85.9, 3184.0], [86.0, 3206.0], [86.1, 3206.0], [86.2, 3236.0], [86.3, 3236.0], [86.4, 3236.0], [86.5, 3237.0], [86.6, 3237.0], [86.7, 3274.0], [86.8, 3274.0], [86.9, 3352.0], [87.0, 3352.0], [87.1, 3483.0], [87.2, 3528.0], [87.3, 3528.0], [87.4, 3580.0], [87.5, 3580.0], [87.6, 3580.0], [87.7, 3580.0], [87.8, 3606.0], [87.9, 3606.0], [88.0, 3647.0], [88.1, 3689.0], [88.2, 3689.0], [88.3, 5185.0], [88.4, 5185.0], [88.5, 5235.0], [88.6, 5235.0], [88.7, 5362.0], [88.8, 25579.0], [88.9, 25579.0], [89.0, 29105.0], [89.1, 29105.0], [89.2, 29127.0], [89.3, 29127.0], [89.4, 29165.0], [89.5, 29165.0], [89.6, 29171.0], [89.7, 29196.0], [89.8, 29196.0], [89.9, 29196.0], [90.0, 29196.0], [90.1, 29203.0], [90.2, 29203.0], [90.3, 29215.0], [90.4, 29254.0], [90.5, 29254.0], [90.6, 29255.0], [90.7, 29255.0], [90.8, 29260.0], [90.9, 29260.0], [91.0, 29677.0], [91.1, 29677.0], [91.2, 29967.0], [91.3, 29983.0], [91.4, 29983.0], [91.5, 29989.0], [91.6, 29989.0], [91.7, 30012.0], [91.8, 30012.0], [91.9, 30018.0], [92.0, 30023.0], [92.1, 30023.0], [92.2, 30041.0], [92.3, 30041.0], [92.4, 30051.0], [92.5, 30051.0], [92.6, 30065.0], [92.7, 30065.0], [92.8, 30066.0], [92.9, 30074.0], [93.0, 30074.0], [93.1, 30123.0], [93.2, 30123.0], [93.3, 30136.0], [93.4, 30136.0], [93.5, 30145.0], [93.6, 30166.0], [93.7, 30166.0], [93.8, 30178.0], [93.9, 30178.0], [94.0, 30178.0], [94.1, 30178.0], [94.2, 30195.0], [94.3, 30195.0], [94.4, 30216.0], [94.5, 30230.0], [94.6, 30230.0], [94.7, 30234.0], [94.8, 30234.0], [94.9, 30237.0], [95.0, 30237.0], [95.1, 30263.0], [95.2, 30266.0], [95.3, 30266.0], [95.4, 30315.0], [95.5, 30315.0], [95.6, 30356.0], [95.7, 30356.0], [95.8, 30373.0], [95.9, 30373.0], [96.0, 30376.0], [96.1, 30418.0], [96.2, 30418.0], [96.3, 30420.0], [96.4, 30420.0], [96.5, 30620.0], [96.6, 30620.0], [96.7, 30621.0], [96.8, 30680.0], [96.9, 30680.0], [97.0, 30997.0], [97.1, 30997.0], [97.2, 31017.0], [97.3, 31017.0], [97.4, 31032.0], [97.5, 31032.0], [97.6, 31033.0], [97.7, 31047.0], [97.8, 31047.0], [97.9, 31049.0], [98.0, 31049.0], [98.1, 31068.0], [98.2, 31068.0], [98.3, 31078.0], [98.4, 31144.0], [98.5, 31144.0], [98.6, 31218.0], [98.7, 31218.0], [98.8, 31231.0], [98.9, 31231.0], [99.0, 31231.0], [99.1, 31231.0], [99.2, 31234.0], [99.3, 31237.0], [99.4, 31237.0], [99.5, 31239.0], [99.6, 31239.0], [99.7, 31239.0], [99.8, 31239.0], [99.9, 31259.0], [100.0, 31259.0]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[0.0, 68.0], [0.1, 68.0], [0.2, 79.0], [0.3, 79.0], [0.4, 79.0], [0.5, 79.0], [0.6, 79.0], [0.7, 79.0], [0.8, 84.0], [0.9, 84.0], [1.0, 85.0], [1.1, 85.0], [1.2, 86.0], [1.3, 86.0], [1.4, 86.0], [1.5, 86.0], [1.6, 86.0], [1.7, 88.0], [1.8, 88.0], [1.9, 89.0], [2.0, 89.0], [2.1, 89.0], [2.2, 89.0], [2.3, 89.0], [2.4, 89.0], [2.5, 89.0], [2.6, 89.0], [2.7, 89.0], [2.8, 89.0], [2.9, 89.0], [3.0, 90.0], [3.1, 90.0], [3.2, 90.0], [3.3, 90.0], [3.4, 90.0], [3.5, 90.0], [3.6, 90.0], [3.7, 91.0], [3.8, 91.0], [3.9, 91.0], [4.0, 91.0], [4.1, 91.0], [4.2, 91.0], [4.3, 91.0], [4.4, 91.0], [4.5, 91.0], [4.6, 91.0], [4.7, 91.0], [4.8, 92.0], [4.9, 92.0], [5.0, 92.0], [5.1, 92.0], [5.2, 93.0], [5.3, 93.0], [5.4, 93.0], [5.5, 93.0], [5.6, 93.0], [5.7, 93.0], [5.8, 93.0], [5.9, 94.0], [6.0, 94.0], [6.1, 94.0], [6.2, 94.0], [6.3, 94.0], [6.4, 94.0], [6.5, 94.0], [6.6, 94.0], [6.7, 94.0], [6.8, 94.0], [6.9, 94.0], [7.0, 95.0], [7.1, 95.0], [7.2, 95.0], [7.3, 95.0], [7.4, 95.0], [7.5, 95.0], [7.6, 96.0], [7.7, 96.0], [7.8, 96.0], [7.9, 96.0], [8.0, 96.0], [8.1, 97.0], [8.2, 97.0], [8.3, 97.0], [8.4, 97.0], [8.5, 98.0], [8.6, 98.0], [8.7, 98.0], [8.8, 98.0], [8.9, 98.0], [9.0, 98.0], [9.1, 98.0], [9.2, 98.0], [9.3, 98.0], [9.4, 98.0], [9.5, 98.0], [9.6, 99.0], [9.7, 99.0], [9.8, 99.0], [9.9, 99.0], [10.0, 99.0], [10.1, 99.0], [10.2, 99.0], [10.3, 99.0], [10.4, 99.0], [10.5, 99.0], [10.6, 99.0], [10.7, 99.0], [10.8, 99.0], [10.9, 99.0], [11.0, 99.0], [11.1, 100.0], [11.2, 100.0], [11.3, 100.0], [11.4, 100.0], [11.5, 100.0], [11.6, 100.0], [11.7, 100.0], [11.8, 100.0], [11.9, 100.0], [12.0, 101.0], [12.1, 101.0], [12.2, 101.0], [12.3, 101.0], [12.4, 101.0], [12.5, 101.0], [12.6, 101.0], [12.7, 102.0], [12.8, 102.0], [12.9, 102.0], [13.0, 102.0], [13.1, 102.0], [13.2, 102.0], [13.3, 102.0], [13.4, 102.0], [13.5, 102.0], [13.6, 102.0], [13.7, 103.0], [13.8, 103.0], [13.9, 103.0], [14.0, 103.0], [14.1, 103.0], [14.2, 103.0], [14.3, 103.0], [14.4, 103.0], [14.5, 103.0], [14.6, 103.0], [14.7, 103.0], [14.8, 104.0], [14.9, 105.0], [15.0, 105.0], [15.1, 105.0], [15.2, 105.0], [15.3, 105.0], [15.4, 105.0], [15.5, 105.0], [15.6, 105.0], [15.7, 105.0], [15.8, 105.0], [15.9, 105.0], [16.0, 105.0], [16.1, 105.0], [16.2, 106.0], [16.3, 106.0], [16.4, 106.0], [16.5, 106.0], [16.6, 106.0], [16.7, 106.0], [16.8, 107.0], [16.9, 107.0], [17.0, 107.0], [17.1, 107.0], [17.2, 107.0], [17.3, 108.0], [17.4, 108.0], [17.5, 108.0], [17.6, 108.0], [17.7, 108.0], [17.8, 108.0], [17.9, 108.0], [18.0, 108.0], [18.1, 108.0], [18.2, 109.0], [18.3, 109.0], [18.4, 109.0], [18.5, 109.0], [18.6, 109.0], [18.7, 109.0], [18.8, 109.0], [18.9, 109.0], [19.0, 109.0], [19.1, 109.0], [19.2, 110.0], [19.3, 110.0], [19.4, 110.0], [19.5, 110.0], [19.6, 110.0], [19.7, 110.0], [19.8, 110.0], [19.9, 110.0], [20.0, 110.0], [20.1, 111.0], [20.2, 111.0], [20.3, 111.0], [20.4, 111.0], [20.5, 111.0], [20.6, 111.0], [20.7, 111.0], [20.8, 111.0], [20.9, 111.0], [21.0, 112.0], [21.1, 112.0], [21.2, 113.0], [21.3, 113.0], [21.4, 114.0], [21.5, 114.0], [21.6, 114.0], [21.7, 115.0], [21.8, 115.0], [21.9, 115.0], [22.0, 115.0], [22.1, 115.0], [22.2, 115.0], [22.3, 115.0], [22.4, 115.0], [22.5, 116.0], [22.6, 116.0], [22.7, 116.0], [22.8, 117.0], [22.9, 117.0], [23.0, 117.0], [23.1, 117.0], [23.2, 117.0], [23.3, 117.0], [23.4, 117.0], [23.5, 117.0], [23.6, 117.0], [23.7, 117.0], [23.8, 117.0], [23.9, 118.0], [24.0, 118.0], [24.1, 119.0], [24.2, 119.0], [24.3, 119.0], [24.4, 119.0], [24.5, 119.0], [24.6, 119.0], [24.7, 119.0], [24.8, 119.0], [24.9, 120.0], [25.0, 120.0], [25.1, 120.0], [25.2, 120.0], [25.3, 120.0], [25.4, 120.0], [25.5, 120.0], [25.6, 121.0], [25.7, 121.0], [25.8, 122.0], [25.9, 122.0], [26.0, 122.0], [26.1, 122.0], [26.2, 123.0], [26.3, 123.0], [26.4, 123.0], [26.5, 124.0], [26.6, 124.0], [26.7, 124.0], [26.8, 124.0], [26.9, 125.0], [27.0, 125.0], [27.1, 125.0], [27.2, 125.0], [27.3, 126.0], [27.4, 127.0], [27.5, 127.0], [27.6, 127.0], [27.7, 127.0], [27.8, 127.0], [27.9, 127.0], [28.0, 128.0], [28.1, 128.0], [28.2, 128.0], [28.3, 128.0], [28.4, 130.0], [28.5, 133.0], [28.6, 133.0], [28.7, 133.0], [28.8, 133.0], [28.9, 133.0], [29.0, 133.0], [29.1, 133.0], [29.2, 133.0], [29.3, 134.0], [29.4, 134.0], [29.5, 134.0], [29.6, 135.0], [29.7, 135.0], [29.8, 135.0], [29.9, 135.0], [30.0, 136.0], [30.1, 136.0], [30.2, 136.0], [30.3, 136.0], [30.4, 136.0], [30.5, 136.0], [30.6, 136.0], [30.7, 136.0], [30.8, 136.0], [30.9, 136.0], [31.0, 136.0], [31.1, 137.0], [31.2, 137.0], [31.3, 137.0], [31.4, 137.0], [31.5, 138.0], [31.6, 138.0], [31.7, 138.0], [31.8, 138.0], [31.9, 139.0], [32.0, 139.0], [32.1, 139.0], [32.2, 139.0], [32.3, 139.0], [32.4, 139.0], [32.5, 139.0], [32.6, 139.0], [32.7, 139.0], [32.8, 140.0], [32.9, 140.0], [33.0, 140.0], [33.1, 140.0], [33.2, 140.0], [33.3, 141.0], [33.4, 141.0], [33.5, 142.0], [33.6, 142.0], [33.7, 142.0], [33.8, 142.0], [33.9, 142.0], [34.0, 142.0], [34.1, 142.0], [34.2, 143.0], [34.3, 143.0], [34.4, 145.0], [34.5, 145.0], [34.6, 145.0], [34.7, 145.0], [34.8, 146.0], [34.9, 146.0], [35.0, 147.0], [35.1, 147.0], [35.2, 147.0], [35.3, 147.0], [35.4, 147.0], [35.5, 147.0], [35.6, 147.0], [35.7, 149.0], [35.8, 149.0], [35.9, 149.0], [36.0, 149.0], [36.1, 149.0], [36.2, 149.0], [36.3, 149.0], [36.4, 149.0], [36.5, 149.0], [36.6, 150.0], [36.7, 150.0], [36.8, 151.0], [36.9, 151.0], [37.0, 151.0], [37.1, 151.0], [37.2, 153.0], [37.3, 153.0], [37.4, 153.0], [37.5, 153.0], [37.6, 153.0], [37.7, 154.0], [37.8, 154.0], [37.9, 156.0], [38.0, 156.0], [38.1, 156.0], [38.2, 156.0], [38.3, 158.0], [38.4, 158.0], [38.5, 159.0], [38.6, 159.0], [38.7, 160.0], [38.8, 160.0], [38.9, 160.0], [39.0, 162.0], [39.1, 162.0], [39.2, 163.0], [39.3, 163.0], [39.4, 164.0], [39.5, 164.0], [39.6, 164.0], [39.7, 164.0], [39.8, 165.0], [39.9, 165.0], [40.0, 165.0], [40.1, 168.0], [40.2, 168.0], [40.3, 168.0], [40.4, 168.0], [40.5, 170.0], [40.6, 170.0], [40.7, 171.0], [40.8, 171.0], [40.9, 171.0], [41.0, 172.0], [41.1, 172.0], [41.2, 173.0], [41.3, 173.0], [41.4, 175.0], [41.5, 175.0], [41.6, 179.0], [41.7, 179.0], [41.8, 179.0], [41.9, 179.0], [42.0, 179.0], [42.1, 181.0], [42.2, 181.0], [42.3, 182.0], [42.4, 182.0], [42.5, 183.0], [42.6, 183.0], [42.7, 183.0], [42.8, 183.0], [42.9, 183.0], [43.0, 183.0], [43.1, 183.0], [43.2, 184.0], [43.3, 184.0], [43.4, 184.0], [43.5, 184.0], [43.6, 184.0], [43.7, 184.0], [43.8, 186.0], [43.9, 186.0], [44.0, 187.0], [44.1, 187.0], [44.2, 187.0], [44.3, 187.0], [44.4, 188.0], [44.5, 188.0], [44.6, 188.0], [44.7, 189.0], [44.8, 189.0], [44.9, 190.0], [45.0, 190.0], [45.1, 190.0], [45.2, 190.0], [45.3, 191.0], [45.4, 191.0], [45.5, 195.0], [45.6, 195.0], [45.7, 195.0], [45.8, 195.0], [45.9, 195.0], [46.0, 195.0], [46.1, 195.0], [46.2, 197.0], [46.3, 197.0], [46.4, 197.0], [46.5, 197.0], [46.6, 197.0], [46.7, 199.0], [46.8, 199.0], [46.9, 200.0], [47.0, 200.0], [47.1, 200.0], [47.2, 200.0], [47.3, 200.0], [47.4, 200.0], [47.5, 200.0], [47.6, 200.0], [47.7, 201.0], [47.8, 204.0], [47.9, 204.0], [48.0, 205.0], [48.1, 205.0], [48.2, 205.0], [48.3, 205.0], [48.4, 205.0], [48.5, 205.0], [48.6, 207.0], [48.7, 207.0], [48.8, 207.0], [48.9, 209.0], [49.0, 209.0], [49.1, 210.0], [49.2, 210.0], [49.3, 212.0], [49.4, 212.0], [49.5, 212.0], [49.6, 212.0], [49.7, 214.0], [49.8, 214.0], [49.9, 214.0], [50.0, 214.0], [50.1, 215.0], [50.2, 215.0], [50.3, 215.0], [50.4, 216.0], [50.5, 216.0], [50.6, 218.0], [50.7, 218.0], [50.8, 219.0], [50.9, 219.0], [51.0, 219.0], [51.1, 219.0], [51.2, 220.0], [51.3, 220.0], [51.4, 220.0], [51.5, 221.0], [51.6, 221.0], [51.7, 222.0], [51.8, 222.0], [51.9, 223.0], [52.0, 223.0], [52.1, 224.0], [52.2, 224.0], [52.3, 224.0], [52.4, 226.0], [52.5, 226.0], [52.6, 227.0], [52.7, 227.0], [52.8, 228.0], [52.9, 228.0], [53.0, 229.0], [53.1, 229.0], [53.2, 232.0], [53.3, 232.0], [53.4, 233.0], [53.5, 234.0], [53.6, 234.0], [53.7, 235.0], [53.8, 235.0], [53.9, 236.0], [54.0, 236.0], [54.1, 237.0], [54.2, 237.0], [54.3, 239.0], [54.4, 239.0], [54.5, 240.0], [54.6, 244.0], [54.7, 244.0], [54.8, 244.0], [54.9, 244.0], [55.0, 245.0], [55.1, 245.0], [55.2, 245.0], [55.3, 245.0], [55.4, 248.0], [55.5, 248.0], [55.6, 248.0], [55.7, 248.0], [55.8, 248.0], [55.9, 249.0], [56.0, 249.0], [56.1, 250.0], [56.2, 250.0], [56.3, 251.0], [56.4, 251.0], [56.5, 254.0], [56.6, 254.0], [56.7, 254.0], [56.8, 254.0], [56.9, 255.0], [57.0, 258.0], [57.1, 258.0], [57.2, 258.0], [57.3, 258.0], [57.4, 259.0], [57.5, 259.0], [57.6, 260.0], [57.7, 260.0], [57.8, 262.0], [57.9, 262.0], [58.0, 263.0], [58.1, 264.0], [58.2, 264.0], [58.3, 264.0], [58.4, 264.0], [58.5, 266.0], [58.6, 266.0], [58.7, 266.0], [58.8, 266.0], [58.9, 266.0], [59.0, 266.0], [59.1, 266.0], [59.2, 267.0], [59.3, 267.0], [59.4, 268.0], [59.5, 268.0], [59.6, 272.0], [59.7, 272.0], [59.8, 275.0], [59.9, 275.0], [60.0, 278.0], [60.1, 278.0], [60.2, 278.0], [60.3, 278.0], [60.4, 278.0], [60.5, 278.0], [60.6, 278.0], [60.7, 279.0], [60.8, 279.0], [60.9, 280.0], [61.0, 280.0], [61.1, 280.0], [61.2, 280.0], [61.3, 280.0], [61.4, 283.0], [61.5, 283.0], [61.6, 284.0], [61.7, 284.0], [61.8, 284.0], [61.9, 284.0], [62.0, 285.0], [62.1, 285.0], [62.2, 286.0], [62.3, 286.0], [62.4, 287.0], [62.5, 287.0], [62.6, 287.0], [62.7, 288.0], [62.8, 288.0], [62.9, 291.0], [63.0, 291.0], [63.1, 292.0], [63.2, 292.0], [63.3, 292.0], [63.4, 292.0], [63.5, 293.0], [63.6, 293.0], [63.7, 294.0], [63.8, 294.0], [63.9, 294.0], [64.0, 294.0], [64.1, 294.0], [64.2, 295.0], [64.3, 295.0], [64.4, 298.0], [64.5, 298.0], [64.6, 298.0], [64.7, 298.0], [64.8, 299.0], [64.9, 303.0], [65.0, 303.0], [65.1, 304.0], [65.2, 304.0], [65.3, 305.0], [65.4, 305.0], [65.5, 305.0], [65.6, 305.0], [65.7, 306.0], [65.8, 306.0], [65.9, 306.0], [66.0, 308.0], [66.1, 308.0], [66.2, 311.0], [66.3, 311.0], [66.4, 311.0], [66.5, 311.0], [66.6, 314.0], [66.7, 314.0], [66.8, 315.0], [66.9, 315.0], [67.0, 316.0], [67.1, 317.0], [67.2, 317.0], [67.3, 317.0], [67.4, 317.0], [67.5, 318.0], [67.6, 318.0], [67.7, 321.0], [67.8, 321.0], [67.9, 324.0], [68.0, 324.0], [68.1, 324.0], [68.2, 325.0], [68.3, 325.0], [68.4, 329.0], [68.5, 329.0], [68.6, 330.0], [68.7, 330.0], [68.8, 331.0], [68.9, 331.0], [69.0, 332.0], [69.1, 332.0], [69.2, 332.0], [69.3, 332.0], [69.4, 332.0], [69.5, 334.0], [69.6, 334.0], [69.7, 334.0], [69.8, 334.0], [69.9, 335.0], [70.0, 335.0], [70.1, 335.0], [70.2, 335.0], [70.3, 335.0], [70.4, 335.0], [70.5, 336.0], [70.6, 337.0], [70.7, 337.0], [70.8, 337.0], [70.9, 337.0], [71.0, 337.0], [71.1, 337.0], [71.2, 338.0], [71.3, 338.0], [71.4, 338.0], [71.5, 338.0], [71.6, 340.0], [71.7, 342.0], [71.8, 342.0], [71.9, 345.0], [72.0, 345.0], [72.1, 345.0], [72.2, 345.0], [72.3, 346.0], [72.4, 346.0], [72.5, 347.0], [72.6, 347.0], [72.7, 351.0], [72.8, 351.0], [72.9, 351.0], [73.0, 352.0], [73.1, 352.0], [73.2, 353.0], [73.3, 353.0], [73.4, 354.0], [73.5, 354.0], [73.6, 356.0], [73.7, 356.0], [73.8, 357.0], [73.9, 358.0], [74.0, 358.0], [74.1, 359.0], [74.2, 359.0], [74.3, 360.0], [74.4, 360.0], [74.5, 362.0], [74.6, 362.0], [74.7, 363.0], [74.8, 363.0], [74.9, 364.0], [75.0, 364.0], [75.1, 364.0], [75.2, 366.0], [75.3, 366.0], [75.4, 366.0], [75.5, 366.0], [75.6, 367.0], [75.7, 367.0], [75.8, 368.0], [75.9, 368.0], [76.0, 368.0], [76.1, 368.0], [76.2, 368.0], [76.3, 370.0], [76.4, 370.0], [76.5, 371.0], [76.6, 371.0], [76.7, 372.0], [76.8, 372.0], [76.9, 373.0], [77.0, 373.0], [77.1, 375.0], [77.2, 375.0], [77.3, 375.0], [77.4, 375.0], [77.5, 375.0], [77.6, 376.0], [77.7, 376.0], [77.8, 378.0], [77.9, 378.0], [78.0, 378.0], [78.1, 378.0], [78.2, 379.0], [78.3, 379.0], [78.4, 382.0], [78.5, 383.0], [78.6, 383.0], [78.7, 386.0], [78.8, 386.0], [78.9, 387.0], [79.0, 387.0], [79.1, 388.0], [79.2, 388.0], [79.3, 389.0], [79.4, 389.0], [79.5, 389.0], [79.6, 390.0], [79.7, 390.0], [79.8, 390.0], [79.9, 390.0], [80.0, 390.0], [80.1, 390.0], [80.2, 391.0], [80.3, 391.0], [80.4, 391.0], [80.5, 391.0], [80.6, 392.0], [80.7, 393.0], [80.8, 393.0], [80.9, 393.0], [81.0, 393.0], [81.1, 395.0], [81.2, 395.0], [81.3, 402.0], [81.4, 402.0], [81.5, 404.0], [81.6, 404.0], [81.7, 405.0], [81.8, 405.0], [81.9, 408.0], [82.0, 411.0], [82.1, 411.0], [82.2, 412.0], [82.3, 412.0], [82.4, 413.0], [82.5, 413.0], [82.6, 413.0], [82.7, 413.0], [82.8, 415.0], [82.9, 415.0], [83.0, 422.0], [83.1, 422.0], [83.2, 422.0], [83.3, 425.0], [83.4, 425.0], [83.5, 425.0], [83.6, 425.0], [83.7, 428.0], [83.8, 428.0], [83.9, 429.0], [84.0, 429.0], [84.1, 439.0], [84.2, 439.0], [84.3, 439.0], [84.4, 442.0], [84.5, 442.0], [84.6, 442.0], [84.7, 442.0], [84.8, 448.0], [84.9, 448.0], [85.0, 448.0], [85.1, 448.0], [85.2, 450.0], [85.3, 451.0], [85.4, 451.0], [85.5, 451.0], [85.6, 451.0], [85.7, 453.0], [85.8, 453.0], [85.9, 456.0], [86.0, 456.0], [86.1, 459.0], [86.2, 459.0], [86.3, 459.0], [86.4, 461.0], [86.5, 461.0], [86.6, 461.0], [86.7, 461.0], [86.8, 462.0], [86.9, 462.0], [87.0, 466.0], [87.1, 466.0], [87.2, 467.0], [87.3, 467.0], [87.4, 467.0], [87.5, 467.0], [87.6, 469.0], [87.7, 475.0], [87.8, 475.0], [87.9, 479.0], [88.0, 479.0], [88.1, 483.0], [88.2, 483.0], [88.3, 484.0], [88.4, 484.0], [88.5, 486.0], [88.6, 486.0], [88.7, 487.0], [88.8, 487.0], [88.9, 487.0], [89.0, 489.0], [89.1, 489.0], [89.2, 491.0], [89.3, 491.0], [89.4, 491.0], [89.5, 491.0], [89.6, 503.0], [89.7, 503.0], [89.8, 505.0], [89.9, 505.0], [90.0, 505.0], [90.1, 507.0], [90.2, 507.0], [90.3, 509.0], [90.4, 509.0], [90.5, 511.0], [90.6, 511.0], [90.7, 513.0], [90.8, 513.0], [90.9, 514.0], [91.0, 521.0], [91.1, 521.0], [91.2, 525.0], [91.3, 525.0], [91.4, 527.0], [91.5, 527.0], [91.6, 554.0], [91.7, 554.0], [91.8, 554.0], [91.9, 554.0], [92.0, 555.0], [92.1, 563.0], [92.2, 563.0], [92.3, 564.0], [92.4, 564.0], [92.5, 571.0], [92.6, 571.0], [92.7, 574.0], [92.8, 574.0], [92.9, 574.0], [93.0, 574.0], [93.1, 582.0], [93.2, 583.0], [93.3, 583.0], [93.4, 584.0], [93.5, 584.0], [93.6, 585.0], [93.7, 585.0], [93.8, 588.0], [93.9, 588.0], [94.0, 600.0], [94.1, 600.0], [94.2, 607.0], [94.3, 607.0], [94.4, 615.0], [94.5, 617.0], [94.6, 617.0], [94.7, 626.0], [94.8, 626.0], [94.9, 627.0], [95.0, 627.0], [95.1, 628.0], [95.2, 628.0], [95.3, 640.0], [95.4, 640.0], [95.5, 647.0], [95.6, 647.0], [95.7, 647.0], [95.8, 650.0], [95.9, 650.0], [96.0, 724.0], [96.1, 724.0], [96.2, 736.0], [96.3, 736.0], [96.4, 742.0], [96.5, 742.0], [96.6, 756.0], [96.7, 777.0], [96.8, 777.0], [96.9, 782.0], [97.0, 782.0], [97.1, 796.0], [97.2, 796.0], [97.3, 821.0], [97.4, 821.0], [97.5, 836.0], [97.6, 836.0], [97.7, 859.0], [97.8, 872.0], [97.9, 872.0], [98.0, 912.0], [98.1, 912.0], [98.2, 914.0], [98.3, 914.0], [98.4, 930.0], [98.5, 930.0], [98.6, 932.0], [98.7, 932.0], [98.8, 978.0], [98.9, 990.0], [99.0, 990.0], [99.1, 1024.0], [99.2, 1024.0], [99.3, 1043.0], [99.4, 1043.0], [99.5, 1124.0], [99.6, 1124.0], [99.7, 2432.0], [99.8, 2432.0], [99.9, 2608.0], [100.0, 2608.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 195.0, "series": [{"data": [[0.0, 26.0], [600.0, 13.0], [700.0, 7.0], [800.0, 5.0], [900.0, 3.0], [1000.0, 4.0], [1100.0, 4.0], [1200.0, 2.0], [1600.0, 1.0], [1700.0, 2.0], [1900.0, 1.0], [2000.0, 1.0], [2500.0, 1.0], [3000.0, 4.0], [3300.0, 1.0], [3800.0, 3.0], [3900.0, 1.0], [100.0, 142.0], [26300.0, 1.0], [29000.0, 1.0], [29600.0, 1.0], [30500.0, 4.0], [30600.0, 17.0], [30200.0, 31.0], [30100.0, 35.0], [30300.0, 9.0], [30400.0, 12.0], [30000.0, 3.0], [29900.0, 3.0], [30700.0, 12.0], [30900.0, 10.0], [30800.0, 6.0], [31400.0, 6.0], [31600.0, 5.0], [31000.0, 3.0], [31100.0, 6.0], [31500.0, 4.0], [31300.0, 1.0], [32300.0, 1.0], [32400.0, 2.0], [32500.0, 3.0], [32100.0, 1.0], [32800.0, 2.0], [33700.0, 1.0], [33100.0, 3.0], [32900.0, 1.0], [33500.0, 1.0], [200.0, 47.0], [59100.0, 1.0], [60100.0, 4.0], [60200.0, 5.0], [60300.0, 3.0], [60000.0, 1.0], [59700.0, 1.0], [59800.0, 4.0], [60400.0, 1.0], [300.0, 41.0], [400.0, 15.0], [500.0, 15.0]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[600.0, 32.0], [700.0, 26.0], [800.0, 24.0], [900.0, 26.0], [1000.0, 28.0], [1100.0, 27.0], [1200.0, 10.0], [1300.0, 15.0], [1400.0, 12.0], [1500.0, 13.0], [1600.0, 12.0], [1700.0, 12.0], [1800.0, 6.0], [1900.0, 10.0], [2000.0, 17.0], [2100.0, 4.0], [2300.0, 8.0], [2200.0, 5.0], [2400.0, 9.0], [2500.0, 11.0], [2600.0, 18.0], [2700.0, 18.0], [2800.0, 6.0], [2900.0, 6.0], [3000.0, 3.0], [3100.0, 1.0], [3300.0, 3.0], [3200.0, 3.0], [3400.0, 1.0], [3500.0, 3.0], [3600.0, 8.0], [3700.0, 2.0], [3800.0, 3.0], [4100.0, 1.0], [4200.0, 1.0], [4300.0, 1.0], [5300.0, 1.0], [5600.0, 1.0], [6300.0, 1.0], [6400.0, 1.0], [12100.0, 1.0], [30200.0, 51.0], [30300.0, 28.0], [30100.0, 6.0], [30000.0, 10.0], [30400.0, 9.0], [30600.0, 3.0], [29900.0, 1.0], [29700.0, 1.0], [31000.0, 1.0], [30900.0, 3.0], [30800.0, 1.0], [200.0, 3.0], [300.0, 8.0], [400.0, 17.0], [500.0, 30.0]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[0.0, 5.0], [600.0, 33.0], [700.0, 27.0], [800.0, 32.0], [900.0, 29.0], [1000.0, 35.0], [1100.0, 12.0], [1200.0, 21.0], [1300.0, 13.0], [1400.0, 12.0], [1500.0, 13.0], [1600.0, 6.0], [1700.0, 8.0], [1800.0, 6.0], [1900.0, 1.0], [2000.0, 2.0], [2100.0, 2.0], [2300.0, 3.0], [2200.0, 2.0], [2500.0, 6.0], [2600.0, 1.0], [2700.0, 1.0], [2800.0, 1.0], [3100.0, 3.0], [3200.0, 5.0], [3300.0, 1.0], [3400.0, 1.0], [3500.0, 3.0], [3600.0, 3.0], [5100.0, 1.0], [5300.0, 1.0], [5200.0, 1.0], [25500.0, 1.0], [100.0, 43.0], [29100.0, 6.0], [29200.0, 5.0], [29600.0, 1.0], [30400.0, 2.0], [30200.0, 6.0], [30100.0, 7.0], [30000.0, 8.0], [29900.0, 3.0], [30300.0, 4.0], [30600.0, 3.0], [30900.0, 1.0], [31000.0, 7.0], [31100.0, 1.0], [31200.0, 8.0], [200.0, 42.0], [300.0, 33.0], [400.0, 45.0], [500.0, 46.0]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[0.0, 60.0], [600.0, 11.0], [2400.0, 1.0], [2600.0, 1.0], [700.0, 7.0], [200.0, 98.0], [800.0, 4.0], [900.0, 6.0], [1000.0, 2.0], [1100.0, 1.0], [300.0, 89.0], [100.0, 195.0], [400.0, 45.0], [500.0, 24.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 60400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 598.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 954.0, "series": [{"data": [[0.0, 954.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 598.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 660.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 42.480769230769226, "minX": 1.55912994E12, "maxY": 50.0, "series": [{"data": [[1.55913024E12, 42.480769230769226], [1.55912994E12, 50.0], [1.55913012E12, 50.0], [1.55913E12, 50.0], [1.55913018E12, 50.0], [1.55913006E12, 50.0]], "isOverall": false, "label": "stand-alone-test", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55913024E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 276.67647058823457, "minX": 1.0, "maxY": 33542.0, "series": [{"data": [[32.0, 30677.5], [8.0, 31697.0], [2.0, 2005.0], [37.0, 30871.5], [39.0, 30642.0], [10.0, 31596.0], [42.0, 31244.666666666668], [47.0, 31133.6], [49.0, 30294.0], [48.0, 30310.0], [50.0, 11822.89453125], [13.0, 31498.0], [14.0, 31333.0], [16.0, 31532.0], [1.0, 33542.0], [19.0, 30730.0], [5.0, 32108.0], [23.0, 30707.0], [30.0, 30687.666666666668]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[48.84558823529412, 12902.520220588234]], "isOverall": false, "label": "BuyBook-Aggregated", "isController": false}, {"data": [[50.0, 7415.325622775804]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[50.0, 7415.325622775804]], "isOverall": false, "label": "SearchBooks-Aggregated", "isController": false}, {"data": [[16.0, 31218.0], [17.0, 31144.0], [37.0, 30997.0], [19.0, 31049.0], [20.0, 31047.0], [5.0, 31259.0], [23.0, 31078.0], [50.0, 3350.9302752293556], [26.0, 31044.333333333332], [13.0, 31232.0], [7.0, 31238.333333333332], [30.0, 31017.0]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[49.03024911032028, 4191.4768683274]], "isOverall": false, "label": "GetBook-Aggregated", "isController": false}, {"data": [[50.0, 276.67647058823457]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[50.0, 276.67647058823457]], "isOverall": false, "label": "Login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 350.51666666666665, "minX": 1.55912994E12, "maxY": 89478.1, "series": [{"data": [[1.55913024E12, 12496.15], [1.55912994E12, 17994.65], [1.55913012E12, 19138.516666666666], [1.55913E12, 30907.3], [1.55913018E12, 26855.316666666666], [1.55913006E12, 89478.1]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.55913024E12, 404.6666666666667], [1.55912994E12, 350.51666666666665], [1.55913012E12, 597.4166666666666], [1.55913E12, 1026.5833333333333], [1.55913018E12, 891.4], [1.55913006E12, 2427.7833333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55913024E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 213.26086956521743, "minX": 1.55912994E12, "maxY": 30281.166666666664, "series": [{"data": [[1.55913024E12, 30281.166666666664], [1.55912994E12, 912.0], [1.55913012E12, 25074.67241379311], [1.55913E12, 15411.48717948718], [1.55913018E12, 16338.179775280889], [1.55913006E12, 3692.5974025974015]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[1.55913024E12, 11412.894736842103], [1.55912994E12, 2727.6399999999994], [1.55913012E12, 11875.076923076924], [1.55913E12, 11350.189473684208], [1.55913018E12, 12563.406976744185], [1.55913006E12, 3407.120331950204]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[1.55913024E12, 17311.659090909096], [1.55912994E12, 1046.5652173913045], [1.55913012E12, 8525.90163934426], [1.55913E12, 2021.604395604396], [1.55913018E12, 4742.823529411765], [1.55913006E12, 1866.2510638297872]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[1.55913024E12, 371.2307692307692], [1.55912994E12, 213.26086956521743], [1.55913012E12, 393.8032786885246], [1.55913E12, 269.2967032967034], [1.55913018E12, 246.835294117647], [1.55913006E12, 261.8765957446809]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55913024E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 206.76086956521735, "minX": 1.55912994E12, "maxY": 30277.520833333332, "series": [{"data": [[1.55913024E12, 30277.520833333332], [1.55912994E12, 912.0], [1.55913012E12, 25074.293103448275], [1.55913E12, 15410.54700854701], [1.55913018E12, 16338.089887640448], [1.55913006E12, 3692.5974025974015]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[1.55913024E12, 11324.921052631575], [1.55912994E12, 2613.6800000000003], [1.55913012E12, 11730.86538461538], [1.55913E12, 10845.084210526313], [1.55913018E12, 12363.511627906975], [1.55913006E12, 2700.863070539416]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[1.55913024E12, 17304.318181818184], [1.55912994E12, 1011.3913043478261], [1.55913012E12, 8508.836065573774], [1.55913E12, 1745.6483516483524], [1.55913018E12, 4641.694117647059], [1.55913006E12, 1614.3404255319138]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[1.55913024E12, 369.34615384615387], [1.55912994E12, 206.76086956521735], [1.55913012E12, 388.08196721311475], [1.55913E12, 246.36263736263734], [1.55913018E12, 218.96470588235292], [1.55913006E12, 228.17021276595744]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55913024E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.55912994E12, "maxY": 144.18257261410793, "series": [{"data": [[1.55913024E12, 19.937500000000004], [1.55912994E12, 0.0], [1.55913012E12, 7.206896551724137], [1.55913E12, 10.401709401709402], [1.55913018E12, 17.337078651685395], [1.55913006E12, 23.064935064935085]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[1.55913024E12, 102.86842105263156], [1.55912994E12, 125.36], [1.55913012E12, 124.67307692307692], [1.55913E12, 130.6], [1.55913018E12, 100.1046511627907], [1.55913006E12, 144.18257261410793]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[1.55913024E12, 41.63636363636363], [1.55912994E12, 91.91304347826085], [1.55913012E12, 87.21311475409836], [1.55913E12, 66.97802197802199], [1.55913018E12, 56.14117647058821], [1.55913006E12, 37.68085106382979]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[1.55913024E12, 46.92307692307693], [1.55912994E12, 0.0], [1.55913012E12, 110.57377049180332], [1.55913E12, 48.824175824175825], [1.55913018E12, 34.835294117647045], [1.55913006E12, 33.74468085106382]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55913024E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 68.0, "minX": 1.55912994E12, "maxY": 60433.0, "series": [{"data": [[1.55913024E12, 33542.0], [1.55912994E12, 4247.0], [1.55913012E12, 60433.0], [1.55913E12, 60308.0], [1.55913018E12, 33141.0], [1.55913006E12, 32816.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.55913024E12, 284.0], [1.55912994E12, 93.0], [1.55913012E12, 159.0], [1.55913E12, 79.0], [1.55913018E12, 79.0], [1.55913006E12, 68.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.55913024E12, 31234.9], [1.55912994E12, 2727.6], [1.55913012E12, 30781.0], [1.55913E12, 30274.0], [1.55913018E12, 30439.600000000002], [1.55913006E12, 3143.4000000000005]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.55913024E12, 32724.62000000001], [1.55912994E12, 4211.360000000001], [1.55913012E12, 60310.04], [1.55913E12, 60230.25], [1.55913018E12, 33070.060000000005], [1.55913006E12, 30346.969999999998]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.55913024E12, 31504.9], [1.55912994E12, 2898.0], [1.55913012E12, 32951.049999999996], [1.55913E12, 30477.25], [1.55913018E12, 31118.0], [1.55913006E12, 30005.249999999996]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55913024E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 139.0, "minX": 1.0, "maxY": 30981.5, "series": [{"data": [[2.0, 30311.0], [33.0, 618.0], [34.0, 30778.0], [36.0, 838.0], [37.0, 779.0], [39.0, 238.0], [40.0, 270.5], [3.0, 30274.0], [48.0, 301.5], [49.0, 1708.0], [51.0, 476.5], [52.0, 1058.5], [54.0, 1288.5], [56.0, 641.0], [58.0, 30138.0], [65.0, 299.5], [4.0, 636.5], [68.0, 495.5], [70.0, 205.0], [71.0, 663.0], [72.0, 250.0], [75.0, 320.0], [76.0, 355.5], [80.0, 30198.5], [5.0, 584.0], [96.0, 340.0], [6.0, 15846.5], [7.0, 3015.0], [9.0, 30392.0], [10.0, 30981.5], [11.0, 30143.0], [15.0, 1523.0], [1.0, 30237.0], [18.0, 30343.5], [19.0, 30162.0], [21.0, 139.0], [22.0, 30205.0], [23.0, 30231.0], [27.0, 172.0], [28.0, 820.0], [30.0, 29146.0], [31.0, 30290.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 96.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 132.0, "minX": 1.0, "maxY": 30981.5, "series": [{"data": [[2.0, 30310.5], [33.0, 351.0], [34.0, 30773.5], [36.0, 419.5], [37.0, 592.0], [39.0, 187.0], [40.0, 197.0], [3.0, 30274.0], [48.0, 215.5], [49.0, 1528.0], [51.0, 325.5], [52.0, 894.5], [54.0, 902.0], [56.0, 310.5], [58.0, 30059.0], [65.0, 206.0], [4.0, 552.5], [68.0, 495.0], [70.0, 132.0], [71.0, 663.0], [72.0, 224.0], [75.0, 303.0], [76.0, 350.5], [80.0, 30088.5], [5.0, 583.0], [96.0, 299.5], [6.0, 15842.0], [7.0, 3015.0], [9.0, 30263.0], [10.0, 30981.5], [11.0, 30143.0], [15.0, 1289.0], [1.0, 30237.0], [18.0, 30343.5], [19.0, 30162.0], [21.0, 135.0], [22.0, 30205.0], [23.0, 30231.0], [27.0, 172.0], [28.0, 258.0], [30.0, 29119.0], [31.0, 30268.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 96.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 1.9166666666666667, "minX": 1.55912994E12, "maxY": 15.733333333333333, "series": [{"data": [[1.55913024E12, 1.9166666666666667], [1.55912994E12, 3.2], [1.55913012E12, 3.8666666666666667], [1.55913E12, 6.466666666666667], [1.55913018E12, 5.683333333333334], [1.55913006E12, 15.733333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55913024E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.55912994E12, "maxY": 12.016666666666667, "series": [{"data": [[1.55913024E12, 2.466666666666667], [1.55912994E12, 2.3666666666666667], [1.55913012E12, 3.3333333333333335], [1.55913E12, 5.3], [1.55913018E12, 4.75], [1.55913006E12, 12.016666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.55913024E12, 0.13333333333333333], [1.55912994E12, 0.016666666666666666], [1.55913012E12, 0.5333333333333333], [1.55913E12, 1.2666666666666666], [1.55913018E12, 1.0], [1.55913006E12, 3.683333333333333]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55913024E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.55912994E12, "maxY": 4.016666666666667, "series": [{"data": [[1.55913024E12, 0.7333333333333333], [1.55912994E12, 0.7666666666666667], [1.55913012E12, 1.0166666666666666], [1.55913E12, 1.5166666666666666], [1.55913018E12, 1.4166666666666667], [1.55913006E12, 3.9166666666666665]], "isOverall": false, "label": "GetBook-success", "isController": false}, {"data": [[1.55913024E12, 0.8], [1.55912994E12, 0.016666666666666666], [1.55913012E12, 0.9666666666666667], [1.55913E12, 1.95], [1.55913018E12, 1.4833333333333334], [1.55913006E12, 3.85]], "isOverall": false, "label": "BuyBook-success", "isController": false}, {"data": [[1.55913024E12, 0.6333333333333333], [1.55912994E12, 0.8333333333333334], [1.55913012E12, 0.8666666666666667], [1.55913E12, 1.5833333333333333], [1.55913018E12, 1.4333333333333333], [1.55913006E12, 4.016666666666667]], "isOverall": false, "label": "SearchBooks-success", "isController": false}, {"data": [[1.55913024E12, 0.43333333333333335], [1.55912994E12, 0.7666666666666667], [1.55913012E12, 1.0166666666666666], [1.55913E12, 1.5166666666666666], [1.55913018E12, 1.4166666666666667], [1.55913006E12, 3.9166666666666665]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55913024E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 2.3833333333333333, "minX": 1.55912994E12, "maxY": 15.7, "series": [{"data": [[1.55913024E12, 2.6], [1.55912994E12, 2.3833333333333333], [1.55913012E12, 3.8666666666666667], [1.55913E12, 6.566666666666666], [1.55913018E12, 5.75], [1.55913006E12, 15.7]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55913024E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

