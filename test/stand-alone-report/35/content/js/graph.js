/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 49.0, "minX": 0.0, "maxY": 65934.0, "series": [{"data": [[0.0, 53.0], [0.1, 54.0], [0.2, 54.0], [0.3, 55.0], [0.4, 55.0], [0.5, 55.0], [0.6, 55.0], [0.7, 55.0], [0.8, 56.0], [0.9, 56.0], [1.0, 56.0], [1.1, 56.0], [1.2, 56.0], [1.3, 56.0], [1.4, 56.0], [1.5, 56.0], [1.6, 57.0], [1.7, 57.0], [1.8, 57.0], [1.9, 57.0], [2.0, 57.0], [2.1, 57.0], [2.2, 57.0], [2.3, 57.0], [2.4, 57.0], [2.5, 57.0], [2.6, 57.0], [2.7, 57.0], [2.8, 58.0], [2.9, 58.0], [3.0, 58.0], [3.1, 58.0], [3.2, 58.0], [3.3, 58.0], [3.4, 58.0], [3.5, 58.0], [3.6, 58.0], [3.7, 58.0], [3.8, 58.0], [3.9, 58.0], [4.0, 59.0], [4.1, 59.0], [4.2, 59.0], [4.3, 59.0], [4.4, 59.0], [4.5, 59.0], [4.6, 59.0], [4.7, 59.0], [4.8, 59.0], [4.9, 59.0], [5.0, 59.0], [5.1, 60.0], [5.2, 60.0], [5.3, 60.0], [5.4, 60.0], [5.5, 60.0], [5.6, 60.0], [5.7, 60.0], [5.8, 60.0], [5.9, 60.0], [6.0, 60.0], [6.1, 60.0], [6.2, 60.0], [6.3, 60.0], [6.4, 60.0], [6.5, 60.0], [6.6, 61.0], [6.7, 61.0], [6.8, 61.0], [6.9, 61.0], [7.0, 61.0], [7.1, 61.0], [7.2, 61.0], [7.3, 61.0], [7.4, 61.0], [7.5, 61.0], [7.6, 61.0], [7.7, 61.0], [7.8, 61.0], [7.9, 61.0], [8.0, 62.0], [8.1, 62.0], [8.2, 62.0], [8.3, 62.0], [8.4, 62.0], [8.5, 62.0], [8.6, 62.0], [8.7, 62.0], [8.8, 62.0], [8.9, 62.0], [9.0, 62.0], [9.1, 62.0], [9.2, 62.0], [9.3, 63.0], [9.4, 63.0], [9.5, 63.0], [9.6, 63.0], [9.7, 63.0], [9.8, 63.0], [9.9, 63.0], [10.0, 63.0], [10.1, 63.0], [10.2, 63.0], [10.3, 63.0], [10.4, 63.0], [10.5, 63.0], [10.6, 63.0], [10.7, 63.0], [10.8, 64.0], [10.9, 64.0], [11.0, 64.0], [11.1, 64.0], [11.2, 64.0], [11.3, 64.0], [11.4, 64.0], [11.5, 64.0], [11.6, 64.0], [11.7, 64.0], [11.8, 64.0], [11.9, 64.0], [12.0, 64.0], [12.1, 64.0], [12.2, 65.0], [12.3, 65.0], [12.4, 65.0], [12.5, 65.0], [12.6, 65.0], [12.7, 65.0], [12.8, 65.0], [12.9, 65.0], [13.0, 65.0], [13.1, 65.0], [13.2, 65.0], [13.3, 65.0], [13.4, 65.0], [13.5, 66.0], [13.6, 66.0], [13.7, 66.0], [13.8, 66.0], [13.9, 66.0], [14.0, 66.0], [14.1, 66.0], [14.2, 66.0], [14.3, 66.0], [14.4, 66.0], [14.5, 66.0], [14.6, 66.0], [14.7, 66.0], [14.8, 66.0], [14.9, 66.0], [15.0, 66.0], [15.1, 67.0], [15.2, 67.0], [15.3, 67.0], [15.4, 67.0], [15.5, 67.0], [15.6, 67.0], [15.7, 67.0], [15.8, 67.0], [15.9, 67.0], [16.0, 67.0], [16.1, 67.0], [16.2, 67.0], [16.3, 67.0], [16.4, 68.0], [16.5, 68.0], [16.6, 68.0], [16.7, 68.0], [16.8, 68.0], [16.9, 68.0], [17.0, 68.0], [17.1, 68.0], [17.2, 68.0], [17.3, 68.0], [17.4, 68.0], [17.5, 68.0], [17.6, 69.0], [17.7, 69.0], [17.8, 69.0], [17.9, 69.0], [18.0, 69.0], [18.1, 69.0], [18.2, 69.0], [18.3, 69.0], [18.4, 69.0], [18.5, 69.0], [18.6, 69.0], [18.7, 69.0], [18.8, 70.0], [18.9, 70.0], [19.0, 70.0], [19.1, 70.0], [19.2, 70.0], [19.3, 70.0], [19.4, 70.0], [19.5, 70.0], [19.6, 70.0], [19.7, 70.0], [19.8, 70.0], [19.9, 71.0], [20.0, 71.0], [20.1, 71.0], [20.2, 71.0], [20.3, 71.0], [20.4, 71.0], [20.5, 71.0], [20.6, 71.0], [20.7, 71.0], [20.8, 71.0], [20.9, 72.0], [21.0, 72.0], [21.1, 72.0], [21.2, 72.0], [21.3, 72.0], [21.4, 72.0], [21.5, 72.0], [21.6, 72.0], [21.7, 72.0], [21.8, 72.0], [21.9, 73.0], [22.0, 73.0], [22.1, 73.0], [22.2, 73.0], [22.3, 73.0], [22.4, 73.0], [22.5, 73.0], [22.6, 73.0], [22.7, 73.0], [22.8, 74.0], [22.9, 74.0], [23.0, 74.0], [23.1, 74.0], [23.2, 74.0], [23.3, 74.0], [23.4, 74.0], [23.5, 74.0], [23.6, 75.0], [23.7, 75.0], [23.8, 75.0], [23.9, 75.0], [24.0, 75.0], [24.1, 75.0], [24.2, 75.0], [24.3, 75.0], [24.4, 75.0], [24.5, 75.0], [24.6, 75.0], [24.7, 76.0], [24.8, 76.0], [24.9, 76.0], [25.0, 76.0], [25.1, 76.0], [25.2, 76.0], [25.3, 76.0], [25.4, 77.0], [25.5, 77.0], [25.6, 77.0], [25.7, 77.0], [25.8, 77.0], [25.9, 77.0], [26.0, 77.0], [26.1, 77.0], [26.2, 77.0], [26.3, 77.0], [26.4, 77.0], [26.5, 77.0], [26.6, 78.0], [26.7, 78.0], [26.8, 78.0], [26.9, 78.0], [27.0, 78.0], [27.1, 78.0], [27.2, 78.0], [27.3, 78.0], [27.4, 78.0], [27.5, 78.0], [27.6, 78.0], [27.7, 79.0], [27.8, 79.0], [27.9, 79.0], [28.0, 79.0], [28.1, 79.0], [28.2, 79.0], [28.3, 79.0], [28.4, 79.0], [28.5, 79.0], [28.6, 80.0], [28.7, 80.0], [28.8, 80.0], [28.9, 80.0], [29.0, 80.0], [29.1, 80.0], [29.2, 80.0], [29.3, 80.0], [29.4, 80.0], [29.5, 81.0], [29.6, 81.0], [29.7, 81.0], [29.8, 81.0], [29.9, 81.0], [30.0, 81.0], [30.1, 81.0], [30.2, 81.0], [30.3, 82.0], [30.4, 82.0], [30.5, 82.0], [30.6, 82.0], [30.7, 82.0], [30.8, 82.0], [30.9, 82.0], [31.0, 82.0], [31.1, 83.0], [31.2, 83.0], [31.3, 83.0], [31.4, 83.0], [31.5, 84.0], [31.6, 84.0], [31.7, 84.0], [31.8, 84.0], [31.9, 84.0], [32.0, 84.0], [32.1, 85.0], [32.2, 85.0], [32.3, 85.0], [32.4, 85.0], [32.5, 85.0], [32.6, 85.0], [32.7, 86.0], [32.8, 86.0], [32.9, 86.0], [33.0, 86.0], [33.1, 86.0], [33.2, 87.0], [33.3, 87.0], [33.4, 87.0], [33.5, 87.0], [33.6, 87.0], [33.7, 87.0], [33.8, 88.0], [33.9, 88.0], [34.0, 88.0], [34.1, 88.0], [34.2, 88.0], [34.3, 89.0], [34.4, 89.0], [34.5, 89.0], [34.6, 89.0], [34.7, 89.0], [34.8, 89.0], [34.9, 90.0], [35.0, 90.0], [35.1, 90.0], [35.2, 90.0], [35.3, 91.0], [35.4, 91.0], [35.5, 91.0], [35.6, 91.0], [35.7, 92.0], [35.8, 92.0], [35.9, 92.0], [36.0, 93.0], [36.1, 93.0], [36.2, 93.0], [36.3, 94.0], [36.4, 94.0], [36.5, 94.0], [36.6, 95.0], [36.7, 95.0], [36.8, 95.0], [36.9, 95.0], [37.0, 95.0], [37.1, 95.0], [37.2, 96.0], [37.3, 96.0], [37.4, 96.0], [37.5, 96.0], [37.6, 96.0], [37.7, 97.0], [37.8, 97.0], [37.9, 97.0], [38.0, 97.0], [38.1, 97.0], [38.2, 98.0], [38.3, 98.0], [38.4, 98.0], [38.5, 98.0], [38.6, 99.0], [38.7, 99.0], [38.8, 99.0], [38.9, 100.0], [39.0, 100.0], [39.1, 100.0], [39.2, 101.0], [39.3, 101.0], [39.4, 102.0], [39.5, 102.0], [39.6, 102.0], [39.7, 102.0], [39.8, 102.0], [39.9, 103.0], [40.0, 103.0], [40.1, 103.0], [40.2, 104.0], [40.3, 104.0], [40.4, 104.0], [40.5, 105.0], [40.6, 105.0], [40.7, 105.0], [40.8, 106.0], [40.9, 106.0], [41.0, 106.0], [41.1, 107.0], [41.2, 107.0], [41.3, 107.0], [41.4, 107.0], [41.5, 108.0], [41.6, 108.0], [41.7, 108.0], [41.8, 109.0], [41.9, 109.0], [42.0, 109.0], [42.1, 109.0], [42.2, 110.0], [42.3, 111.0], [42.4, 111.0], [42.5, 112.0], [42.6, 112.0], [42.7, 112.0], [42.8, 113.0], [42.9, 113.0], [43.0, 113.0], [43.1, 114.0], [43.2, 114.0], [43.3, 114.0], [43.4, 114.0], [43.5, 115.0], [43.6, 115.0], [43.7, 115.0], [43.8, 115.0], [43.9, 116.0], [44.0, 116.0], [44.1, 117.0], [44.2, 117.0], [44.3, 118.0], [44.4, 118.0], [44.5, 118.0], [44.6, 118.0], [44.7, 119.0], [44.8, 119.0], [44.9, 119.0], [45.0, 120.0], [45.1, 120.0], [45.2, 121.0], [45.3, 121.0], [45.4, 122.0], [45.5, 122.0], [45.6, 122.0], [45.7, 123.0], [45.8, 123.0], [45.9, 124.0], [46.0, 124.0], [46.1, 125.0], [46.2, 125.0], [46.3, 125.0], [46.4, 125.0], [46.5, 126.0], [46.6, 126.0], [46.7, 126.0], [46.8, 127.0], [46.9, 127.0], [47.0, 128.0], [47.1, 128.0], [47.2, 129.0], [47.3, 129.0], [47.4, 129.0], [47.5, 130.0], [47.6, 131.0], [47.7, 131.0], [47.8, 132.0], [47.9, 132.0], [48.0, 133.0], [48.1, 133.0], [48.2, 133.0], [48.3, 133.0], [48.4, 133.0], [48.5, 134.0], [48.6, 134.0], [48.7, 135.0], [48.8, 135.0], [48.9, 135.0], [49.0, 136.0], [49.1, 137.0], [49.2, 137.0], [49.3, 138.0], [49.4, 138.0], [49.5, 139.0], [49.6, 139.0], [49.7, 141.0], [49.8, 141.0], [49.9, 142.0], [50.0, 142.0], [50.1, 143.0], [50.2, 144.0], [50.3, 144.0], [50.4, 145.0], [50.5, 145.0], [50.6, 146.0], [50.7, 146.0], [50.8, 147.0], [50.9, 148.0], [51.0, 148.0], [51.1, 149.0], [51.2, 150.0], [51.3, 150.0], [51.4, 151.0], [51.5, 151.0], [51.6, 152.0], [51.7, 153.0], [51.8, 153.0], [51.9, 153.0], [52.0, 154.0], [52.1, 155.0], [52.2, 155.0], [52.3, 156.0], [52.4, 156.0], [52.5, 157.0], [52.6, 158.0], [52.7, 158.0], [52.8, 158.0], [52.9, 159.0], [53.0, 160.0], [53.1, 161.0], [53.2, 161.0], [53.3, 161.0], [53.4, 162.0], [53.5, 163.0], [53.6, 164.0], [53.7, 164.0], [53.8, 165.0], [53.9, 166.0], [54.0, 166.0], [54.1, 167.0], [54.2, 169.0], [54.3, 169.0], [54.4, 170.0], [54.5, 170.0], [54.6, 170.0], [54.7, 171.0], [54.8, 171.0], [54.9, 171.0], [55.0, 173.0], [55.1, 173.0], [55.2, 173.0], [55.3, 174.0], [55.4, 175.0], [55.5, 175.0], [55.6, 176.0], [55.7, 176.0], [55.8, 176.0], [55.9, 177.0], [56.0, 178.0], [56.1, 178.0], [56.2, 179.0], [56.3, 179.0], [56.4, 180.0], [56.5, 181.0], [56.6, 181.0], [56.7, 183.0], [56.8, 183.0], [56.9, 184.0], [57.0, 184.0], [57.1, 185.0], [57.2, 186.0], [57.3, 188.0], [57.4, 188.0], [57.5, 188.0], [57.6, 189.0], [57.7, 189.0], [57.8, 192.0], [57.9, 192.0], [58.0, 192.0], [58.1, 193.0], [58.2, 194.0], [58.3, 195.0], [58.4, 195.0], [58.5, 196.0], [58.6, 196.0], [58.7, 197.0], [58.8, 197.0], [58.9, 198.0], [59.0, 199.0], [59.1, 200.0], [59.2, 201.0], [59.3, 201.0], [59.4, 202.0], [59.5, 202.0], [59.6, 203.0], [59.7, 204.0], [59.8, 204.0], [59.9, 204.0], [60.0, 205.0], [60.1, 206.0], [60.2, 206.0], [60.3, 207.0], [60.4, 208.0], [60.5, 209.0], [60.6, 210.0], [60.7, 210.0], [60.8, 211.0], [60.9, 211.0], [61.0, 212.0], [61.1, 213.0], [61.2, 213.0], [61.3, 215.0], [61.4, 215.0], [61.5, 217.0], [61.6, 217.0], [61.7, 218.0], [61.8, 219.0], [61.9, 220.0], [62.0, 221.0], [62.1, 222.0], [62.2, 223.0], [62.3, 224.0], [62.4, 224.0], [62.5, 225.0], [62.6, 226.0], [62.7, 226.0], [62.8, 227.0], [62.9, 228.0], [63.0, 229.0], [63.1, 230.0], [63.2, 231.0], [63.3, 231.0], [63.4, 234.0], [63.5, 234.0], [63.6, 235.0], [63.7, 236.0], [63.8, 237.0], [63.9, 237.0], [64.0, 237.0], [64.1, 238.0], [64.2, 239.0], [64.3, 240.0], [64.4, 240.0], [64.5, 241.0], [64.6, 241.0], [64.7, 243.0], [64.8, 243.0], [64.9, 244.0], [65.0, 245.0], [65.1, 245.0], [65.2, 247.0], [65.3, 249.0], [65.4, 250.0], [65.5, 250.0], [65.6, 252.0], [65.7, 253.0], [65.8, 255.0], [65.9, 257.0], [66.0, 260.0], [66.1, 261.0], [66.2, 261.0], [66.3, 261.0], [66.4, 263.0], [66.5, 265.0], [66.6, 266.0], [66.7, 267.0], [66.8, 268.0], [66.9, 269.0], [67.0, 269.0], [67.1, 271.0], [67.2, 272.0], [67.3, 274.0], [67.4, 275.0], [67.5, 276.0], [67.6, 277.0], [67.7, 279.0], [67.8, 280.0], [67.9, 281.0], [68.0, 281.0], [68.1, 282.0], [68.2, 283.0], [68.3, 285.0], [68.4, 285.0], [68.5, 286.0], [68.6, 288.0], [68.7, 289.0], [68.8, 289.0], [68.9, 290.0], [69.0, 292.0], [69.1, 293.0], [69.2, 294.0], [69.3, 294.0], [69.4, 297.0], [69.5, 298.0], [69.6, 299.0], [69.7, 300.0], [69.8, 301.0], [69.9, 301.0], [70.0, 302.0], [70.1, 303.0], [70.2, 304.0], [70.3, 304.0], [70.4, 305.0], [70.5, 306.0], [70.6, 306.0], [70.7, 307.0], [70.8, 307.0], [70.9, 309.0], [71.0, 310.0], [71.1, 311.0], [71.2, 312.0], [71.3, 313.0], [71.4, 314.0], [71.5, 314.0], [71.6, 314.0], [71.7, 315.0], [71.8, 316.0], [71.9, 317.0], [72.0, 317.0], [72.1, 318.0], [72.2, 318.0], [72.3, 318.0], [72.4, 321.0], [72.5, 322.0], [72.6, 323.0], [72.7, 324.0], [72.8, 324.0], [72.9, 325.0], [73.0, 325.0], [73.1, 326.0], [73.2, 328.0], [73.3, 330.0], [73.4, 331.0], [73.5, 333.0], [73.6, 335.0], [73.7, 336.0], [73.8, 338.0], [73.9, 340.0], [74.0, 340.0], [74.1, 341.0], [74.2, 341.0], [74.3, 343.0], [74.4, 344.0], [74.5, 344.0], [74.6, 345.0], [74.7, 347.0], [74.8, 347.0], [74.9, 348.0], [75.0, 350.0], [75.1, 351.0], [75.2, 352.0], [75.3, 352.0], [75.4, 353.0], [75.5, 355.0], [75.6, 357.0], [75.7, 360.0], [75.8, 360.0], [75.9, 361.0], [76.0, 362.0], [76.1, 364.0], [76.2, 365.0], [76.3, 366.0], [76.4, 367.0], [76.5, 367.0], [76.6, 368.0], [76.7, 370.0], [76.8, 372.0], [76.9, 374.0], [77.0, 374.0], [77.1, 377.0], [77.2, 379.0], [77.3, 382.0], [77.4, 383.0], [77.5, 383.0], [77.6, 384.0], [77.7, 385.0], [77.8, 386.0], [77.9, 387.0], [78.0, 389.0], [78.1, 390.0], [78.2, 390.0], [78.3, 391.0], [78.4, 393.0], [78.5, 397.0], [78.6, 397.0], [78.7, 399.0], [78.8, 402.0], [78.9, 405.0], [79.0, 406.0], [79.1, 407.0], [79.2, 408.0], [79.3, 410.0], [79.4, 415.0], [79.5, 420.0], [79.6, 421.0], [79.7, 423.0], [79.8, 424.0], [79.9, 426.0], [80.0, 430.0], [80.1, 432.0], [80.2, 435.0], [80.3, 437.0], [80.4, 439.0], [80.5, 440.0], [80.6, 441.0], [80.7, 443.0], [80.8, 444.0], [80.9, 446.0], [81.0, 448.0], [81.1, 449.0], [81.2, 450.0], [81.3, 453.0], [81.4, 455.0], [81.5, 459.0], [81.6, 461.0], [81.7, 462.0], [81.8, 465.0], [81.9, 467.0], [82.0, 469.0], [82.1, 470.0], [82.2, 471.0], [82.3, 472.0], [82.4, 472.0], [82.5, 476.0], [82.6, 481.0], [82.7, 484.0], [82.8, 486.0], [82.9, 487.0], [83.0, 489.0], [83.1, 491.0], [83.2, 491.0], [83.3, 492.0], [83.4, 493.0], [83.5, 496.0], [83.6, 502.0], [83.7, 504.0], [83.8, 508.0], [83.9, 512.0], [84.0, 518.0], [84.1, 521.0], [84.2, 527.0], [84.3, 531.0], [84.4, 533.0], [84.5, 539.0], [84.6, 542.0], [84.7, 544.0], [84.8, 546.0], [84.9, 547.0], [85.0, 549.0], [85.1, 560.0], [85.2, 562.0], [85.3, 565.0], [85.4, 568.0], [85.5, 570.0], [85.6, 572.0], [85.7, 577.0], [85.8, 580.0], [85.9, 584.0], [86.0, 586.0], [86.1, 588.0], [86.2, 589.0], [86.3, 590.0], [86.4, 591.0], [86.5, 593.0], [86.6, 594.0], [86.7, 595.0], [86.8, 600.0], [86.9, 607.0], [87.0, 609.0], [87.1, 613.0], [87.2, 615.0], [87.3, 618.0], [87.4, 625.0], [87.5, 628.0], [87.6, 632.0], [87.7, 635.0], [87.8, 638.0], [87.9, 642.0], [88.0, 645.0], [88.1, 651.0], [88.2, 655.0], [88.3, 660.0], [88.4, 663.0], [88.5, 668.0], [88.6, 669.0], [88.7, 672.0], [88.8, 674.0], [88.9, 675.0], [89.0, 679.0], [89.1, 682.0], [89.2, 687.0], [89.3, 691.0], [89.4, 693.0], [89.5, 702.0], [89.6, 704.0], [89.7, 709.0], [89.8, 713.0], [89.9, 715.0], [90.0, 717.0], [90.1, 727.0], [90.2, 736.0], [90.3, 745.0], [90.4, 753.0], [90.5, 764.0], [90.6, 766.0], [90.7, 770.0], [90.8, 774.0], [90.9, 781.0], [91.0, 783.0], [91.1, 794.0], [91.2, 798.0], [91.3, 801.0], [91.4, 806.0], [91.5, 814.0], [91.6, 829.0], [91.7, 835.0], [91.8, 837.0], [91.9, 845.0], [92.0, 857.0], [92.1, 861.0], [92.2, 866.0], [92.3, 870.0], [92.4, 875.0], [92.5, 880.0], [92.6, 887.0], [92.7, 896.0], [92.8, 899.0], [92.9, 902.0], [93.0, 917.0], [93.1, 923.0], [93.2, 925.0], [93.3, 935.0], [93.4, 956.0], [93.5, 964.0], [93.6, 971.0], [93.7, 987.0], [93.8, 992.0], [93.9, 1016.0], [94.0, 1022.0], [94.1, 1032.0], [94.2, 1050.0], [94.3, 1070.0], [94.4, 1079.0], [94.5, 1086.0], [94.6, 1093.0], [94.7, 1103.0], [94.8, 1111.0], [94.9, 1122.0], [95.0, 1124.0], [95.1, 1130.0], [95.2, 1141.0], [95.3, 1164.0], [95.4, 1186.0], [95.5, 1216.0], [95.6, 1225.0], [95.7, 1242.0], [95.8, 1264.0], [95.9, 1276.0], [96.0, 1302.0], [96.1, 1349.0], [96.2, 1368.0], [96.3, 1390.0], [96.4, 1418.0], [96.5, 1424.0], [96.6, 1434.0], [96.7, 1459.0], [96.8, 1473.0], [96.9, 1507.0], [97.0, 1528.0], [97.1, 1534.0], [97.2, 1541.0], [97.3, 1561.0], [97.4, 1578.0], [97.5, 1589.0], [97.6, 1607.0], [97.7, 1610.0], [97.8, 1615.0], [97.9, 1650.0], [98.0, 1684.0], [98.1, 1733.0], [98.2, 1791.0], [98.3, 1862.0], [98.4, 1961.0], [98.5, 2105.0], [98.6, 2202.0], [98.7, 2308.0], [98.8, 30585.0], [98.9, 30592.0], [99.0, 30602.0], [99.1, 30604.0], [99.2, 30611.0], [99.3, 30618.0], [99.4, 30639.0], [99.5, 30649.0], [99.6, 30660.0], [99.7, 30674.0], [99.8, 30745.0], [99.9, 30760.0], [100.0, 65260.0]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[0.0, 157.0], [0.1, 160.0], [0.2, 168.0], [0.3, 173.0], [0.4, 178.0], [0.5, 183.0], [0.6, 189.0], [0.7, 191.0], [0.8, 198.0], [0.9, 202.0], [1.0, 208.0], [1.1, 216.0], [1.2, 221.0], [1.3, 222.0], [1.4, 226.0], [1.5, 229.0], [1.6, 235.0], [1.7, 237.0], [1.8, 240.0], [1.9, 243.0], [2.0, 249.0], [2.1, 250.0], [2.2, 252.0], [2.3, 253.0], [2.4, 254.0], [2.5, 257.0], [2.6, 261.0], [2.7, 266.0], [2.8, 268.0], [2.9, 270.0], [3.0, 274.0], [3.1, 277.0], [3.2, 278.0], [3.3, 279.0], [3.4, 280.0], [3.5, 282.0], [3.6, 286.0], [3.7, 288.0], [3.8, 291.0], [3.9, 294.0], [4.0, 295.0], [4.1, 296.0], [4.2, 301.0], [4.3, 305.0], [4.4, 306.0], [4.5, 308.0], [4.6, 309.0], [4.7, 310.0], [4.8, 312.0], [4.9, 314.0], [5.0, 316.0], [5.1, 318.0], [5.2, 319.0], [5.3, 321.0], [5.4, 325.0], [5.5, 326.0], [5.6, 328.0], [5.7, 330.0], [5.8, 331.0], [5.9, 332.0], [6.0, 334.0], [6.1, 335.0], [6.2, 337.0], [6.3, 339.0], [6.4, 340.0], [6.5, 341.0], [6.6, 342.0], [6.7, 344.0], [6.8, 345.0], [6.9, 348.0], [7.0, 351.0], [7.1, 351.0], [7.2, 353.0], [7.3, 354.0], [7.4, 355.0], [7.5, 355.0], [7.6, 356.0], [7.7, 357.0], [7.8, 358.0], [7.9, 359.0], [8.0, 361.0], [8.1, 362.0], [8.2, 362.0], [8.3, 363.0], [8.4, 364.0], [8.5, 365.0], [8.6, 365.0], [8.7, 368.0], [8.8, 369.0], [8.9, 369.0], [9.0, 370.0], [9.1, 372.0], [9.2, 372.0], [9.3, 373.0], [9.4, 374.0], [9.5, 374.0], [9.6, 376.0], [9.7, 377.0], [9.8, 379.0], [9.9, 381.0], [10.0, 381.0], [10.1, 382.0], [10.2, 383.0], [10.3, 387.0], [10.4, 387.0], [10.5, 388.0], [10.6, 389.0], [10.7, 390.0], [10.8, 391.0], [10.9, 393.0], [11.0, 394.0], [11.1, 394.0], [11.2, 395.0], [11.3, 395.0], [11.4, 397.0], [11.5, 397.0], [11.6, 399.0], [11.7, 400.0], [11.8, 402.0], [11.9, 403.0], [12.0, 404.0], [12.1, 405.0], [12.2, 405.0], [12.3, 406.0], [12.4, 407.0], [12.5, 408.0], [12.6, 409.0], [12.7, 409.0], [12.8, 410.0], [12.9, 411.0], [13.0, 412.0], [13.1, 413.0], [13.2, 413.0], [13.3, 414.0], [13.4, 415.0], [13.5, 416.0], [13.6, 418.0], [13.7, 420.0], [13.8, 420.0], [13.9, 420.0], [14.0, 422.0], [14.1, 424.0], [14.2, 426.0], [14.3, 427.0], [14.4, 427.0], [14.5, 430.0], [14.6, 434.0], [14.7, 435.0], [14.8, 437.0], [14.9, 437.0], [15.0, 438.0], [15.1, 440.0], [15.2, 440.0], [15.3, 442.0], [15.4, 442.0], [15.5, 443.0], [15.6, 444.0], [15.7, 445.0], [15.8, 446.0], [15.9, 447.0], [16.0, 447.0], [16.1, 448.0], [16.2, 449.0], [16.3, 450.0], [16.4, 451.0], [16.5, 452.0], [16.6, 453.0], [16.7, 456.0], [16.8, 457.0], [16.9, 457.0], [17.0, 459.0], [17.1, 460.0], [17.2, 461.0], [17.3, 462.0], [17.4, 463.0], [17.5, 463.0], [17.6, 463.0], [17.7, 464.0], [17.8, 465.0], [17.9, 465.0], [18.0, 468.0], [18.1, 469.0], [18.2, 470.0], [18.3, 471.0], [18.4, 472.0], [18.5, 473.0], [18.6, 474.0], [18.7, 475.0], [18.8, 476.0], [18.9, 476.0], [19.0, 478.0], [19.1, 479.0], [19.2, 480.0], [19.3, 481.0], [19.4, 483.0], [19.5, 484.0], [19.6, 485.0], [19.7, 486.0], [19.8, 487.0], [19.9, 488.0], [20.0, 492.0], [20.1, 493.0], [20.2, 493.0], [20.3, 494.0], [20.4, 494.0], [20.5, 496.0], [20.6, 498.0], [20.7, 499.0], [20.8, 500.0], [20.9, 501.0], [21.0, 502.0], [21.1, 502.0], [21.2, 503.0], [21.3, 503.0], [21.4, 504.0], [21.5, 504.0], [21.6, 506.0], [21.7, 507.0], [21.8, 508.0], [21.9, 508.0], [22.0, 509.0], [22.1, 510.0], [22.2, 511.0], [22.3, 511.0], [22.4, 511.0], [22.5, 514.0], [22.6, 515.0], [22.7, 517.0], [22.8, 518.0], [22.9, 518.0], [23.0, 519.0], [23.1, 520.0], [23.2, 521.0], [23.3, 523.0], [23.4, 523.0], [23.5, 524.0], [23.6, 525.0], [23.7, 526.0], [23.8, 526.0], [23.9, 527.0], [24.0, 528.0], [24.1, 530.0], [24.2, 531.0], [24.3, 531.0], [24.4, 532.0], [24.5, 533.0], [24.6, 534.0], [24.7, 535.0], [24.8, 536.0], [24.9, 537.0], [25.0, 537.0], [25.1, 538.0], [25.2, 539.0], [25.3, 540.0], [25.4, 542.0], [25.5, 542.0], [25.6, 543.0], [25.7, 543.0], [25.8, 544.0], [25.9, 545.0], [26.0, 546.0], [26.1, 547.0], [26.2, 548.0], [26.3, 549.0], [26.4, 549.0], [26.5, 549.0], [26.6, 550.0], [26.7, 551.0], [26.8, 552.0], [26.9, 554.0], [27.0, 555.0], [27.1, 557.0], [27.2, 559.0], [27.3, 560.0], [27.4, 561.0], [27.5, 563.0], [27.6, 564.0], [27.7, 565.0], [27.8, 565.0], [27.9, 567.0], [28.0, 567.0], [28.1, 568.0], [28.2, 570.0], [28.3, 571.0], [28.4, 571.0], [28.5, 573.0], [28.6, 574.0], [28.7, 575.0], [28.8, 576.0], [28.9, 577.0], [29.0, 579.0], [29.1, 579.0], [29.2, 580.0], [29.3, 580.0], [29.4, 581.0], [29.5, 582.0], [29.6, 582.0], [29.7, 583.0], [29.8, 583.0], [29.9, 584.0], [30.0, 584.0], [30.1, 587.0], [30.2, 588.0], [30.3, 589.0], [30.4, 591.0], [30.5, 592.0], [30.6, 593.0], [30.7, 593.0], [30.8, 595.0], [30.9, 596.0], [31.0, 597.0], [31.1, 597.0], [31.2, 598.0], [31.3, 599.0], [31.4, 599.0], [31.5, 600.0], [31.6, 601.0], [31.7, 602.0], [31.8, 603.0], [31.9, 604.0], [32.0, 604.0], [32.1, 606.0], [32.2, 607.0], [32.3, 607.0], [32.4, 608.0], [32.5, 609.0], [32.6, 611.0], [32.7, 612.0], [32.8, 613.0], [32.9, 614.0], [33.0, 614.0], [33.1, 615.0], [33.2, 615.0], [33.3, 617.0], [33.4, 617.0], [33.5, 618.0], [33.6, 618.0], [33.7, 619.0], [33.8, 620.0], [33.9, 621.0], [34.0, 621.0], [34.1, 622.0], [34.2, 624.0], [34.3, 625.0], [34.4, 625.0], [34.5, 626.0], [34.6, 627.0], [34.7, 627.0], [34.8, 628.0], [34.9, 630.0], [35.0, 632.0], [35.1, 633.0], [35.2, 634.0], [35.3, 635.0], [35.4, 636.0], [35.5, 637.0], [35.6, 638.0], [35.7, 639.0], [35.8, 640.0], [35.9, 640.0], [36.0, 642.0], [36.1, 643.0], [36.2, 644.0], [36.3, 647.0], [36.4, 648.0], [36.5, 648.0], [36.6, 650.0], [36.7, 652.0], [36.8, 653.0], [36.9, 654.0], [37.0, 655.0], [37.1, 657.0], [37.2, 658.0], [37.3, 659.0], [37.4, 660.0], [37.5, 661.0], [37.6, 661.0], [37.7, 662.0], [37.8, 663.0], [37.9, 664.0], [38.0, 666.0], [38.1, 667.0], [38.2, 669.0], [38.3, 670.0], [38.4, 670.0], [38.5, 671.0], [38.6, 674.0], [38.7, 676.0], [38.8, 677.0], [38.9, 678.0], [39.0, 681.0], [39.1, 682.0], [39.2, 682.0], [39.3, 684.0], [39.4, 685.0], [39.5, 687.0], [39.6, 689.0], [39.7, 689.0], [39.8, 690.0], [39.9, 691.0], [40.0, 692.0], [40.1, 693.0], [40.2, 695.0], [40.3, 697.0], [40.4, 698.0], [40.5, 700.0], [40.6, 701.0], [40.7, 703.0], [40.8, 703.0], [40.9, 704.0], [41.0, 706.0], [41.1, 707.0], [41.2, 708.0], [41.3, 708.0], [41.4, 710.0], [41.5, 712.0], [41.6, 713.0], [41.7, 714.0], [41.8, 716.0], [41.9, 717.0], [42.0, 719.0], [42.1, 720.0], [42.2, 721.0], [42.3, 723.0], [42.4, 725.0], [42.5, 725.0], [42.6, 726.0], [42.7, 728.0], [42.8, 729.0], [42.9, 730.0], [43.0, 732.0], [43.1, 732.0], [43.2, 734.0], [43.3, 735.0], [43.4, 736.0], [43.5, 737.0], [43.6, 738.0], [43.7, 741.0], [43.8, 741.0], [43.9, 742.0], [44.0, 743.0], [44.1, 746.0], [44.2, 748.0], [44.3, 749.0], [44.4, 749.0], [44.5, 751.0], [44.6, 751.0], [44.7, 751.0], [44.8, 752.0], [44.9, 752.0], [45.0, 753.0], [45.1, 755.0], [45.2, 756.0], [45.3, 756.0], [45.4, 757.0], [45.5, 758.0], [45.6, 759.0], [45.7, 760.0], [45.8, 761.0], [45.9, 761.0], [46.0, 762.0], [46.1, 762.0], [46.2, 762.0], [46.3, 764.0], [46.4, 765.0], [46.5, 766.0], [46.6, 768.0], [46.7, 768.0], [46.8, 771.0], [46.9, 773.0], [47.0, 774.0], [47.1, 775.0], [47.2, 775.0], [47.3, 775.0], [47.4, 777.0], [47.5, 778.0], [47.6, 778.0], [47.7, 779.0], [47.8, 781.0], [47.9, 782.0], [48.0, 782.0], [48.1, 782.0], [48.2, 784.0], [48.3, 784.0], [48.4, 786.0], [48.5, 787.0], [48.6, 787.0], [48.7, 789.0], [48.8, 791.0], [48.9, 792.0], [49.0, 792.0], [49.1, 793.0], [49.2, 795.0], [49.3, 797.0], [49.4, 798.0], [49.5, 799.0], [49.6, 803.0], [49.7, 807.0], [49.8, 808.0], [49.9, 809.0], [50.0, 810.0], [50.1, 811.0], [50.2, 812.0], [50.3, 814.0], [50.4, 814.0], [50.5, 817.0], [50.6, 818.0], [50.7, 819.0], [50.8, 820.0], [50.9, 821.0], [51.0, 823.0], [51.1, 824.0], [51.2, 826.0], [51.3, 827.0], [51.4, 828.0], [51.5, 828.0], [51.6, 830.0], [51.7, 831.0], [51.8, 832.0], [51.9, 832.0], [52.0, 834.0], [52.1, 835.0], [52.2, 837.0], [52.3, 838.0], [52.4, 839.0], [52.5, 841.0], [52.6, 841.0], [52.7, 843.0], [52.8, 844.0], [52.9, 844.0], [53.0, 845.0], [53.1, 847.0], [53.2, 848.0], [53.3, 850.0], [53.4, 851.0], [53.5, 852.0], [53.6, 852.0], [53.7, 855.0], [53.8, 855.0], [53.9, 856.0], [54.0, 858.0], [54.1, 859.0], [54.2, 861.0], [54.3, 862.0], [54.4, 863.0], [54.5, 863.0], [54.6, 865.0], [54.7, 865.0], [54.8, 867.0], [54.9, 870.0], [55.0, 871.0], [55.1, 872.0], [55.2, 873.0], [55.3, 875.0], [55.4, 877.0], [55.5, 878.0], [55.6, 880.0], [55.7, 881.0], [55.8, 882.0], [55.9, 884.0], [56.0, 888.0], [56.1, 889.0], [56.2, 891.0], [56.3, 892.0], [56.4, 893.0], [56.5, 895.0], [56.6, 897.0], [56.7, 898.0], [56.8, 898.0], [56.9, 899.0], [57.0, 902.0], [57.1, 904.0], [57.2, 906.0], [57.3, 907.0], [57.4, 909.0], [57.5, 910.0], [57.6, 911.0], [57.7, 911.0], [57.8, 912.0], [57.9, 913.0], [58.0, 914.0], [58.1, 915.0], [58.2, 916.0], [58.3, 916.0], [58.4, 917.0], [58.5, 918.0], [58.6, 919.0], [58.7, 920.0], [58.8, 921.0], [58.9, 921.0], [59.0, 922.0], [59.1, 924.0], [59.2, 926.0], [59.3, 927.0], [59.4, 928.0], [59.5, 928.0], [59.6, 930.0], [59.7, 931.0], [59.8, 932.0], [59.9, 933.0], [60.0, 936.0], [60.1, 938.0], [60.2, 939.0], [60.3, 940.0], [60.4, 941.0], [60.5, 943.0], [60.6, 944.0], [60.7, 944.0], [60.8, 945.0], [60.9, 946.0], [61.0, 946.0], [61.1, 948.0], [61.2, 948.0], [61.3, 949.0], [61.4, 951.0], [61.5, 953.0], [61.6, 956.0], [61.7, 956.0], [61.8, 960.0], [61.9, 961.0], [62.0, 965.0], [62.1, 966.0], [62.2, 967.0], [62.3, 968.0], [62.4, 968.0], [62.5, 970.0], [62.6, 971.0], [62.7, 973.0], [62.8, 976.0], [62.9, 977.0], [63.0, 982.0], [63.1, 983.0], [63.2, 986.0], [63.3, 989.0], [63.4, 993.0], [63.5, 995.0], [63.6, 995.0], [63.7, 997.0], [63.8, 998.0], [63.9, 999.0], [64.0, 1002.0], [64.1, 1006.0], [64.2, 1007.0], [64.3, 1010.0], [64.4, 1012.0], [64.5, 1013.0], [64.6, 1015.0], [64.7, 1016.0], [64.8, 1018.0], [64.9, 1021.0], [65.0, 1023.0], [65.1, 1024.0], [65.2, 1026.0], [65.3, 1030.0], [65.4, 1032.0], [65.5, 1035.0], [65.6, 1036.0], [65.7, 1039.0], [65.8, 1041.0], [65.9, 1044.0], [66.0, 1049.0], [66.1, 1054.0], [66.2, 1058.0], [66.3, 1059.0], [66.4, 1060.0], [66.5, 1065.0], [66.6, 1067.0], [66.7, 1070.0], [66.8, 1074.0], [66.9, 1080.0], [67.0, 1084.0], [67.1, 1088.0], [67.2, 1090.0], [67.3, 1095.0], [67.4, 1099.0], [67.5, 1100.0], [67.6, 1101.0], [67.7, 1103.0], [67.8, 1105.0], [67.9, 1105.0], [68.0, 1107.0], [68.1, 1108.0], [68.2, 1108.0], [68.3, 1109.0], [68.4, 1110.0], [68.5, 1113.0], [68.6, 1113.0], [68.7, 1114.0], [68.8, 1116.0], [68.9, 1120.0], [69.0, 1122.0], [69.1, 1123.0], [69.2, 1126.0], [69.3, 1128.0], [69.4, 1131.0], [69.5, 1139.0], [69.6, 1140.0], [69.7, 1144.0], [69.8, 1148.0], [69.9, 1150.0], [70.0, 1155.0], [70.1, 1156.0], [70.2, 1157.0], [70.3, 1158.0], [70.4, 1161.0], [70.5, 1165.0], [70.6, 1167.0], [70.7, 1169.0], [70.8, 1170.0], [70.9, 1172.0], [71.0, 1172.0], [71.1, 1176.0], [71.2, 1178.0], [71.3, 1179.0], [71.4, 1180.0], [71.5, 1186.0], [71.6, 1188.0], [71.7, 1190.0], [71.8, 1191.0], [71.9, 1195.0], [72.0, 1197.0], [72.1, 1200.0], [72.2, 1205.0], [72.3, 1206.0], [72.4, 1209.0], [72.5, 1210.0], [72.6, 1214.0], [72.7, 1217.0], [72.8, 1218.0], [72.9, 1230.0], [73.0, 1231.0], [73.1, 1235.0], [73.2, 1236.0], [73.3, 1240.0], [73.4, 1241.0], [73.5, 1247.0], [73.6, 1249.0], [73.7, 1254.0], [73.8, 1256.0], [73.9, 1259.0], [74.0, 1261.0], [74.1, 1263.0], [74.2, 1266.0], [74.3, 1268.0], [74.4, 1271.0], [74.5, 1272.0], [74.6, 1274.0], [74.7, 1279.0], [74.8, 1281.0], [74.9, 1286.0], [75.0, 1292.0], [75.1, 1295.0], [75.2, 1296.0], [75.3, 1299.0], [75.4, 1300.0], [75.5, 1304.0], [75.6, 1306.0], [75.7, 1308.0], [75.8, 1315.0], [75.9, 1319.0], [76.0, 1321.0], [76.1, 1326.0], [76.2, 1329.0], [76.3, 1332.0], [76.4, 1333.0], [76.5, 1339.0], [76.6, 1343.0], [76.7, 1345.0], [76.8, 1352.0], [76.9, 1359.0], [77.0, 1360.0], [77.1, 1371.0], [77.2, 1373.0], [77.3, 1374.0], [77.4, 1378.0], [77.5, 1380.0], [77.6, 1384.0], [77.7, 1387.0], [77.8, 1390.0], [77.9, 1394.0], [78.0, 1397.0], [78.1, 1405.0], [78.2, 1406.0], [78.3, 1414.0], [78.4, 1416.0], [78.5, 1423.0], [78.6, 1427.0], [78.7, 1434.0], [78.8, 1438.0], [78.9, 1442.0], [79.0, 1443.0], [79.1, 1448.0], [79.2, 1451.0], [79.3, 1458.0], [79.4, 1459.0], [79.5, 1463.0], [79.6, 1468.0], [79.7, 1469.0], [79.8, 1472.0], [79.9, 1474.0], [80.0, 1478.0], [80.1, 1480.0], [80.2, 1482.0], [80.3, 1484.0], [80.4, 1485.0], [80.5, 1487.0], [80.6, 1495.0], [80.7, 1499.0], [80.8, 1503.0], [80.9, 1507.0], [81.0, 1508.0], [81.1, 1511.0], [81.2, 1517.0], [81.3, 1518.0], [81.4, 1526.0], [81.5, 1530.0], [81.6, 1531.0], [81.7, 1534.0], [81.8, 1546.0], [81.9, 1550.0], [82.0, 1554.0], [82.1, 1558.0], [82.2, 1559.0], [82.3, 1561.0], [82.4, 1569.0], [82.5, 1572.0], [82.6, 1574.0], [82.7, 1577.0], [82.8, 1580.0], [82.9, 1583.0], [83.0, 1591.0], [83.1, 1595.0], [83.2, 1599.0], [83.3, 1610.0], [83.4, 1613.0], [83.5, 1616.0], [83.6, 1618.0], [83.7, 1622.0], [83.8, 1626.0], [83.9, 1632.0], [84.0, 1636.0], [84.1, 1640.0], [84.2, 1643.0], [84.3, 1645.0], [84.4, 1648.0], [84.5, 1652.0], [84.6, 1656.0], [84.7, 1659.0], [84.8, 1663.0], [84.9, 1669.0], [85.0, 1670.0], [85.1, 1674.0], [85.2, 1674.0], [85.3, 1676.0], [85.4, 1676.0], [85.5, 1678.0], [85.6, 1681.0], [85.7, 1689.0], [85.8, 1691.0], [85.9, 1693.0], [86.0, 1698.0], [86.1, 1701.0], [86.2, 1706.0], [86.3, 1710.0], [86.4, 1714.0], [86.5, 1716.0], [86.6, 1717.0], [86.7, 1721.0], [86.8, 1725.0], [86.9, 1727.0], [87.0, 1731.0], [87.1, 1734.0], [87.2, 1735.0], [87.3, 1747.0], [87.4, 1750.0], [87.5, 1751.0], [87.6, 1753.0], [87.7, 1756.0], [87.8, 1759.0], [87.9, 1769.0], [88.0, 1776.0], [88.1, 1780.0], [88.2, 1783.0], [88.3, 1790.0], [88.4, 1798.0], [88.5, 1800.0], [88.6, 1801.0], [88.7, 1808.0], [88.8, 1814.0], [88.9, 1816.0], [89.0, 1816.0], [89.1, 1827.0], [89.2, 1831.0], [89.3, 1835.0], [89.4, 1843.0], [89.5, 1845.0], [89.6, 1855.0], [89.7, 1858.0], [89.8, 1863.0], [89.9, 1873.0], [90.0, 1886.0], [90.1, 1895.0], [90.2, 1906.0], [90.3, 1910.0], [90.4, 1923.0], [90.5, 1929.0], [90.6, 1941.0], [90.7, 1951.0], [90.8, 1967.0], [90.9, 1973.0], [91.0, 1988.0], [91.1, 1993.0], [91.2, 2008.0], [91.3, 2028.0], [91.4, 2039.0], [91.5, 2063.0], [91.6, 2076.0], [91.7, 2084.0], [91.8, 2088.0], [91.9, 2096.0], [92.0, 2103.0], [92.1, 2106.0], [92.2, 2115.0], [92.3, 2125.0], [92.4, 2140.0], [92.5, 2152.0], [92.6, 2156.0], [92.7, 2163.0], [92.8, 2169.0], [92.9, 2177.0], [93.0, 2183.0], [93.1, 2211.0], [93.2, 2222.0], [93.3, 2226.0], [93.4, 2257.0], [93.5, 2264.0], [93.6, 2273.0], [93.7, 2284.0], [93.8, 2294.0], [93.9, 2322.0], [94.0, 2323.0], [94.1, 2331.0], [94.2, 2339.0], [94.3, 2343.0], [94.4, 2353.0], [94.5, 2368.0], [94.6, 2371.0], [94.7, 2386.0], [94.8, 2394.0], [94.9, 2408.0], [95.0, 2421.0], [95.1, 2442.0], [95.2, 2449.0], [95.3, 2469.0], [95.4, 2483.0], [95.5, 2514.0], [95.6, 2536.0], [95.7, 2564.0], [95.8, 2595.0], [95.9, 2618.0], [96.0, 2623.0], [96.1, 2629.0], [96.2, 2646.0], [96.3, 2667.0], [96.4, 2697.0], [96.5, 2712.0], [96.6, 2762.0], [96.7, 2823.0], [96.8, 2851.0], [96.9, 2863.0], [97.0, 2883.0], [97.1, 2938.0], [97.2, 2977.0], [97.3, 3012.0], [97.4, 3059.0], [97.5, 3121.0], [97.6, 3156.0], [97.7, 3166.0], [97.8, 3286.0], [97.9, 3347.0], [98.0, 3365.0], [98.1, 3409.0], [98.2, 3440.0], [98.3, 3548.0], [98.4, 3671.0], [98.5, 3825.0], [98.6, 3953.0], [98.7, 4021.0], [98.8, 4172.0], [98.9, 4275.0], [99.0, 4395.0], [99.1, 4661.0], [99.2, 5180.0], [99.3, 5685.0], [99.4, 5824.0], [99.5, 6572.0], [99.6, 7008.0], [99.7, 7881.0], [99.8, 27408.0], [99.9, 64810.0], [100.0, 65934.0]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[0.0, 53.0], [0.1, 53.0], [0.2, 54.0], [0.3, 55.0], [0.4, 55.0], [0.5, 55.0], [0.6, 56.0], [0.7, 56.0], [0.8, 57.0], [0.9, 57.0], [1.0, 57.0], [1.1, 58.0], [1.2, 58.0], [1.3, 59.0], [1.4, 59.0], [1.5, 60.0], [1.6, 61.0], [1.7, 61.0], [1.8, 61.0], [1.9, 61.0], [2.0, 62.0], [2.1, 62.0], [2.2, 63.0], [2.3, 63.0], [2.4, 63.0], [2.5, 63.0], [2.6, 64.0], [2.7, 64.0], [2.8, 64.0], [2.9, 64.0], [3.0, 65.0], [3.1, 65.0], [3.2, 65.0], [3.3, 65.0], [3.4, 66.0], [3.5, 66.0], [3.6, 66.0], [3.7, 66.0], [3.8, 66.0], [3.9, 66.0], [4.0, 67.0], [4.1, 67.0], [4.2, 68.0], [4.3, 69.0], [4.4, 69.0], [4.5, 70.0], [4.6, 70.0], [4.7, 70.0], [4.8, 70.0], [4.9, 71.0], [5.0, 71.0], [5.1, 71.0], [5.2, 72.0], [5.3, 73.0], [5.4, 73.0], [5.5, 74.0], [5.6, 75.0], [5.7, 75.0], [5.8, 75.0], [5.9, 76.0], [6.0, 77.0], [6.1, 77.0], [6.2, 78.0], [6.3, 79.0], [6.4, 80.0], [6.5, 80.0], [6.6, 82.0], [6.7, 83.0], [6.8, 85.0], [6.9, 86.0], [7.0, 88.0], [7.1, 89.0], [7.2, 91.0], [7.3, 91.0], [7.4, 92.0], [7.5, 93.0], [7.6, 94.0], [7.7, 95.0], [7.8, 96.0], [7.9, 96.0], [8.0, 97.0], [8.1, 98.0], [8.2, 99.0], [8.3, 99.0], [8.4, 100.0], [8.5, 100.0], [8.6, 101.0], [8.7, 102.0], [8.8, 103.0], [8.9, 104.0], [9.0, 105.0], [9.1, 105.0], [9.2, 106.0], [9.3, 106.0], [9.4, 106.0], [9.5, 107.0], [9.6, 108.0], [9.7, 109.0], [9.8, 110.0], [9.9, 111.0], [10.0, 111.0], [10.1, 112.0], [10.2, 112.0], [10.3, 113.0], [10.4, 114.0], [10.5, 115.0], [10.6, 116.0], [10.7, 116.0], [10.8, 117.0], [10.9, 117.0], [11.0, 118.0], [11.1, 119.0], [11.2, 119.0], [11.3, 120.0], [11.4, 120.0], [11.5, 121.0], [11.6, 121.0], [11.7, 123.0], [11.8, 124.0], [11.9, 125.0], [12.0, 125.0], [12.1, 126.0], [12.2, 126.0], [12.3, 127.0], [12.4, 128.0], [12.5, 128.0], [12.6, 129.0], [12.7, 129.0], [12.8, 130.0], [12.9, 131.0], [13.0, 131.0], [13.1, 132.0], [13.2, 132.0], [13.3, 133.0], [13.4, 134.0], [13.5, 135.0], [13.6, 136.0], [13.7, 136.0], [13.8, 136.0], [13.9, 137.0], [14.0, 138.0], [14.1, 138.0], [14.2, 139.0], [14.3, 140.0], [14.4, 140.0], [14.5, 141.0], [14.6, 142.0], [14.7, 143.0], [14.8, 143.0], [14.9, 145.0], [15.0, 145.0], [15.1, 146.0], [15.2, 148.0], [15.3, 149.0], [15.4, 150.0], [15.5, 151.0], [15.6, 151.0], [15.7, 151.0], [15.8, 151.0], [15.9, 152.0], [16.0, 153.0], [16.1, 153.0], [16.2, 154.0], [16.3, 154.0], [16.4, 155.0], [16.5, 156.0], [16.6, 157.0], [16.7, 159.0], [16.8, 159.0], [16.9, 159.0], [17.0, 159.0], [17.1, 160.0], [17.2, 160.0], [17.3, 161.0], [17.4, 162.0], [17.5, 163.0], [17.6, 163.0], [17.7, 164.0], [17.8, 165.0], [17.9, 166.0], [18.0, 166.0], [18.1, 166.0], [18.2, 167.0], [18.3, 167.0], [18.4, 169.0], [18.5, 170.0], [18.6, 171.0], [18.7, 171.0], [18.8, 172.0], [18.9, 173.0], [19.0, 174.0], [19.1, 174.0], [19.2, 175.0], [19.3, 176.0], [19.4, 176.0], [19.5, 176.0], [19.6, 178.0], [19.7, 179.0], [19.8, 180.0], [19.9, 180.0], [20.0, 181.0], [20.1, 182.0], [20.2, 182.0], [20.3, 183.0], [20.4, 183.0], [20.5, 184.0], [20.6, 186.0], [20.7, 186.0], [20.8, 187.0], [20.9, 187.0], [21.0, 188.0], [21.1, 190.0], [21.2, 190.0], [21.3, 191.0], [21.4, 192.0], [21.5, 193.0], [21.6, 194.0], [21.7, 194.0], [21.8, 195.0], [21.9, 195.0], [22.0, 197.0], [22.1, 198.0], [22.2, 198.0], [22.3, 198.0], [22.4, 200.0], [22.5, 201.0], [22.6, 201.0], [22.7, 202.0], [22.8, 203.0], [22.9, 203.0], [23.0, 204.0], [23.1, 204.0], [23.2, 205.0], [23.3, 206.0], [23.4, 208.0], [23.5, 209.0], [23.6, 210.0], [23.7, 210.0], [23.8, 211.0], [23.9, 211.0], [24.0, 212.0], [24.1, 213.0], [24.2, 215.0], [24.3, 215.0], [24.4, 216.0], [24.5, 217.0], [24.6, 217.0], [24.7, 217.0], [24.8, 218.0], [24.9, 218.0], [25.0, 219.0], [25.1, 219.0], [25.2, 220.0], [25.3, 221.0], [25.4, 221.0], [25.5, 222.0], [25.6, 223.0], [25.7, 224.0], [25.8, 224.0], [25.9, 225.0], [26.0, 225.0], [26.1, 226.0], [26.2, 226.0], [26.3, 227.0], [26.4, 227.0], [26.5, 227.0], [26.6, 228.0], [26.7, 228.0], [26.8, 230.0], [26.9, 230.0], [27.0, 231.0], [27.1, 232.0], [27.2, 234.0], [27.3, 235.0], [27.4, 236.0], [27.5, 237.0], [27.6, 238.0], [27.7, 238.0], [27.8, 238.0], [27.9, 239.0], [28.0, 240.0], [28.1, 240.0], [28.2, 241.0], [28.3, 241.0], [28.4, 242.0], [28.5, 243.0], [28.6, 243.0], [28.7, 244.0], [28.8, 245.0], [28.9, 246.0], [29.0, 247.0], [29.1, 248.0], [29.2, 249.0], [29.3, 251.0], [29.4, 253.0], [29.5, 254.0], [29.6, 254.0], [29.7, 255.0], [29.8, 255.0], [29.9, 256.0], [30.0, 256.0], [30.1, 257.0], [30.2, 258.0], [30.3, 259.0], [30.4, 260.0], [30.5, 260.0], [30.6, 262.0], [30.7, 262.0], [30.8, 263.0], [30.9, 263.0], [31.0, 264.0], [31.1, 265.0], [31.2, 267.0], [31.3, 268.0], [31.4, 268.0], [31.5, 269.0], [31.6, 269.0], [31.7, 270.0], [31.8, 271.0], [31.9, 272.0], [32.0, 272.0], [32.1, 273.0], [32.2, 274.0], [32.3, 276.0], [32.4, 277.0], [32.5, 278.0], [32.6, 281.0], [32.7, 281.0], [32.8, 282.0], [32.9, 283.0], [33.0, 283.0], [33.1, 284.0], [33.2, 285.0], [33.3, 286.0], [33.4, 286.0], [33.5, 288.0], [33.6, 288.0], [33.7, 289.0], [33.8, 289.0], [33.9, 290.0], [34.0, 290.0], [34.1, 292.0], [34.2, 292.0], [34.3, 293.0], [34.4, 294.0], [34.5, 294.0], [34.6, 295.0], [34.7, 296.0], [34.8, 299.0], [34.9, 299.0], [35.0, 302.0], [35.1, 302.0], [35.2, 304.0], [35.3, 305.0], [35.4, 305.0], [35.5, 306.0], [35.6, 308.0], [35.7, 309.0], [35.8, 311.0], [35.9, 312.0], [36.0, 313.0], [36.1, 314.0], [36.2, 315.0], [36.3, 316.0], [36.4, 317.0], [36.5, 317.0], [36.6, 319.0], [36.7, 320.0], [36.8, 321.0], [36.9, 322.0], [37.0, 323.0], [37.1, 324.0], [37.2, 325.0], [37.3, 326.0], [37.4, 327.0], [37.5, 327.0], [37.6, 328.0], [37.7, 328.0], [37.8, 329.0], [37.9, 329.0], [38.0, 330.0], [38.1, 331.0], [38.2, 332.0], [38.3, 332.0], [38.4, 333.0], [38.5, 333.0], [38.6, 334.0], [38.7, 335.0], [38.8, 337.0], [38.9, 337.0], [39.0, 338.0], [39.1, 340.0], [39.2, 342.0], [39.3, 343.0], [39.4, 344.0], [39.5, 344.0], [39.6, 344.0], [39.7, 345.0], [39.8, 346.0], [39.9, 348.0], [40.0, 349.0], [40.1, 349.0], [40.2, 350.0], [40.3, 350.0], [40.4, 350.0], [40.5, 351.0], [40.6, 352.0], [40.7, 352.0], [40.8, 353.0], [40.9, 353.0], [41.0, 354.0], [41.1, 355.0], [41.2, 356.0], [41.3, 356.0], [41.4, 357.0], [41.5, 358.0], [41.6, 358.0], [41.7, 359.0], [41.8, 359.0], [41.9, 359.0], [42.0, 360.0], [42.1, 360.0], [42.2, 361.0], [42.3, 362.0], [42.4, 363.0], [42.5, 365.0], [42.6, 365.0], [42.7, 366.0], [42.8, 367.0], [42.9, 367.0], [43.0, 368.0], [43.1, 369.0], [43.2, 369.0], [43.3, 370.0], [43.4, 370.0], [43.5, 370.0], [43.6, 371.0], [43.7, 371.0], [43.8, 372.0], [43.9, 373.0], [44.0, 373.0], [44.1, 374.0], [44.2, 375.0], [44.3, 375.0], [44.4, 376.0], [44.5, 376.0], [44.6, 377.0], [44.7, 377.0], [44.8, 378.0], [44.9, 378.0], [45.0, 379.0], [45.1, 379.0], [45.2, 380.0], [45.3, 380.0], [45.4, 382.0], [45.5, 382.0], [45.6, 383.0], [45.7, 384.0], [45.8, 385.0], [45.9, 387.0], [46.0, 389.0], [46.1, 390.0], [46.2, 390.0], [46.3, 391.0], [46.4, 391.0], [46.5, 392.0], [46.6, 392.0], [46.7, 393.0], [46.8, 394.0], [46.9, 395.0], [47.0, 396.0], [47.1, 397.0], [47.2, 397.0], [47.3, 398.0], [47.4, 398.0], [47.5, 400.0], [47.6, 401.0], [47.7, 401.0], [47.8, 402.0], [47.9, 403.0], [48.0, 403.0], [48.1, 404.0], [48.2, 404.0], [48.3, 405.0], [48.4, 406.0], [48.5, 406.0], [48.6, 407.0], [48.7, 408.0], [48.8, 409.0], [48.9, 409.0], [49.0, 410.0], [49.1, 411.0], [49.2, 411.0], [49.3, 412.0], [49.4, 413.0], [49.5, 414.0], [49.6, 415.0], [49.7, 415.0], [49.8, 416.0], [49.9, 416.0], [50.0, 417.0], [50.1, 418.0], [50.2, 418.0], [50.3, 420.0], [50.4, 421.0], [50.5, 421.0], [50.6, 422.0], [50.7, 423.0], [50.8, 424.0], [50.9, 425.0], [51.0, 426.0], [51.1, 427.0], [51.2, 429.0], [51.3, 430.0], [51.4, 431.0], [51.5, 431.0], [51.6, 432.0], [51.7, 433.0], [51.8, 433.0], [51.9, 434.0], [52.0, 436.0], [52.1, 437.0], [52.2, 438.0], [52.3, 438.0], [52.4, 439.0], [52.5, 439.0], [52.6, 441.0], [52.7, 442.0], [52.8, 443.0], [52.9, 443.0], [53.0, 443.0], [53.1, 447.0], [53.2, 449.0], [53.3, 449.0], [53.4, 451.0], [53.5, 451.0], [53.6, 452.0], [53.7, 453.0], [53.8, 454.0], [53.9, 455.0], [54.0, 455.0], [54.1, 455.0], [54.2, 457.0], [54.3, 458.0], [54.4, 459.0], [54.5, 460.0], [54.6, 460.0], [54.7, 462.0], [54.8, 463.0], [54.9, 463.0], [55.0, 465.0], [55.1, 466.0], [55.2, 467.0], [55.3, 467.0], [55.4, 469.0], [55.5, 470.0], [55.6, 472.0], [55.7, 475.0], [55.8, 476.0], [55.9, 480.0], [56.0, 481.0], [56.1, 482.0], [56.2, 484.0], [56.3, 484.0], [56.4, 485.0], [56.5, 488.0], [56.6, 489.0], [56.7, 490.0], [56.8, 490.0], [56.9, 492.0], [57.0, 493.0], [57.1, 494.0], [57.2, 496.0], [57.3, 496.0], [57.4, 498.0], [57.5, 498.0], [57.6, 502.0], [57.7, 504.0], [57.8, 505.0], [57.9, 505.0], [58.0, 507.0], [58.1, 508.0], [58.2, 508.0], [58.3, 509.0], [58.4, 511.0], [58.5, 512.0], [58.6, 512.0], [58.7, 513.0], [58.8, 514.0], [58.9, 516.0], [59.0, 517.0], [59.1, 519.0], [59.2, 520.0], [59.3, 521.0], [59.4, 523.0], [59.5, 523.0], [59.6, 525.0], [59.7, 526.0], [59.8, 527.0], [59.9, 528.0], [60.0, 529.0], [60.1, 531.0], [60.2, 532.0], [60.3, 533.0], [60.4, 533.0], [60.5, 536.0], [60.6, 538.0], [60.7, 540.0], [60.8, 541.0], [60.9, 542.0], [61.0, 543.0], [61.1, 544.0], [61.2, 547.0], [61.3, 551.0], [61.4, 552.0], [61.5, 553.0], [61.6, 554.0], [61.7, 556.0], [61.8, 558.0], [61.9, 560.0], [62.0, 561.0], [62.1, 563.0], [62.2, 564.0], [62.3, 564.0], [62.4, 564.0], [62.5, 565.0], [62.6, 567.0], [62.7, 568.0], [62.8, 569.0], [62.9, 570.0], [63.0, 571.0], [63.1, 572.0], [63.2, 573.0], [63.3, 575.0], [63.4, 576.0], [63.5, 577.0], [63.6, 578.0], [63.7, 580.0], [63.8, 581.0], [63.9, 582.0], [64.0, 583.0], [64.1, 586.0], [64.2, 587.0], [64.3, 589.0], [64.4, 591.0], [64.5, 594.0], [64.6, 595.0], [64.7, 595.0], [64.8, 596.0], [64.9, 596.0], [65.0, 597.0], [65.1, 599.0], [65.2, 599.0], [65.3, 600.0], [65.4, 601.0], [65.5, 602.0], [65.6, 602.0], [65.7, 603.0], [65.8, 603.0], [65.9, 604.0], [66.0, 604.0], [66.1, 605.0], [66.2, 607.0], [66.3, 608.0], [66.4, 610.0], [66.5, 611.0], [66.6, 612.0], [66.7, 613.0], [66.8, 614.0], [66.9, 614.0], [67.0, 616.0], [67.1, 618.0], [67.2, 620.0], [67.3, 621.0], [67.4, 622.0], [67.5, 624.0], [67.6, 625.0], [67.7, 630.0], [67.8, 630.0], [67.9, 632.0], [68.0, 633.0], [68.1, 634.0], [68.2, 635.0], [68.3, 636.0], [68.4, 639.0], [68.5, 640.0], [68.6, 640.0], [68.7, 641.0], [68.8, 642.0], [68.9, 643.0], [69.0, 644.0], [69.1, 644.0], [69.2, 645.0], [69.3, 647.0], [69.4, 648.0], [69.5, 649.0], [69.6, 650.0], [69.7, 650.0], [69.8, 651.0], [69.9, 652.0], [70.0, 653.0], [70.1, 654.0], [70.2, 654.0], [70.3, 655.0], [70.4, 656.0], [70.5, 656.0], [70.6, 658.0], [70.7, 659.0], [70.8, 661.0], [70.9, 661.0], [71.0, 662.0], [71.1, 663.0], [71.2, 664.0], [71.3, 665.0], [71.4, 665.0], [71.5, 668.0], [71.6, 668.0], [71.7, 669.0], [71.8, 670.0], [71.9, 671.0], [72.0, 672.0], [72.1, 672.0], [72.2, 673.0], [72.3, 674.0], [72.4, 675.0], [72.5, 675.0], [72.6, 676.0], [72.7, 677.0], [72.8, 678.0], [72.9, 680.0], [73.0, 681.0], [73.1, 682.0], [73.2, 685.0], [73.3, 686.0], [73.4, 687.0], [73.5, 689.0], [73.6, 690.0], [73.7, 690.0], [73.8, 691.0], [73.9, 692.0], [74.0, 693.0], [74.1, 694.0], [74.2, 696.0], [74.3, 697.0], [74.4, 700.0], [74.5, 701.0], [74.6, 704.0], [74.7, 705.0], [74.8, 707.0], [74.9, 708.0], [75.0, 708.0], [75.1, 709.0], [75.2, 711.0], [75.3, 712.0], [75.4, 716.0], [75.5, 716.0], [75.6, 717.0], [75.7, 718.0], [75.8, 721.0], [75.9, 721.0], [76.0, 723.0], [76.1, 725.0], [76.2, 729.0], [76.3, 729.0], [76.4, 732.0], [76.5, 733.0], [76.6, 735.0], [76.7, 736.0], [76.8, 738.0], [76.9, 740.0], [77.0, 741.0], [77.1, 742.0], [77.2, 743.0], [77.3, 745.0], [77.4, 746.0], [77.5, 747.0], [77.6, 749.0], [77.7, 752.0], [77.8, 754.0], [77.9, 755.0], [78.0, 757.0], [78.1, 761.0], [78.2, 762.0], [78.3, 764.0], [78.4, 765.0], [78.5, 772.0], [78.6, 777.0], [78.7, 778.0], [78.8, 782.0], [78.9, 783.0], [79.0, 784.0], [79.1, 786.0], [79.2, 787.0], [79.3, 791.0], [79.4, 794.0], [79.5, 796.0], [79.6, 799.0], [79.7, 803.0], [79.8, 808.0], [79.9, 808.0], [80.0, 809.0], [80.1, 811.0], [80.2, 815.0], [80.3, 818.0], [80.4, 819.0], [80.5, 822.0], [80.6, 823.0], [80.7, 824.0], [80.8, 826.0], [80.9, 829.0], [81.0, 839.0], [81.1, 842.0], [81.2, 845.0], [81.3, 848.0], [81.4, 851.0], [81.5, 853.0], [81.6, 861.0], [81.7, 869.0], [81.8, 869.0], [81.9, 875.0], [82.0, 880.0], [82.1, 881.0], [82.2, 887.0], [82.3, 891.0], [82.4, 893.0], [82.5, 899.0], [82.6, 902.0], [82.7, 902.0], [82.8, 903.0], [82.9, 907.0], [83.0, 913.0], [83.1, 915.0], [83.2, 920.0], [83.3, 922.0], [83.4, 925.0], [83.5, 927.0], [83.6, 933.0], [83.7, 935.0], [83.8, 938.0], [83.9, 943.0], [84.0, 952.0], [84.1, 954.0], [84.2, 957.0], [84.3, 961.0], [84.4, 966.0], [84.5, 972.0], [84.6, 978.0], [84.7, 982.0], [84.8, 986.0], [84.9, 987.0], [85.0, 990.0], [85.1, 994.0], [85.2, 996.0], [85.3, 1000.0], [85.4, 1002.0], [85.5, 1003.0], [85.6, 1007.0], [85.7, 1009.0], [85.8, 1014.0], [85.9, 1017.0], [86.0, 1019.0], [86.1, 1024.0], [86.2, 1027.0], [86.3, 1036.0], [86.4, 1040.0], [86.5, 1044.0], [86.6, 1054.0], [86.7, 1055.0], [86.8, 1056.0], [86.9, 1062.0], [87.0, 1070.0], [87.1, 1079.0], [87.2, 1081.0], [87.3, 1094.0], [87.4, 1102.0], [87.5, 1105.0], [87.6, 1108.0], [87.7, 1112.0], [87.8, 1117.0], [87.9, 1122.0], [88.0, 1126.0], [88.1, 1129.0], [88.2, 1134.0], [88.3, 1143.0], [88.4, 1147.0], [88.5, 1151.0], [88.6, 1155.0], [88.7, 1158.0], [88.8, 1163.0], [88.9, 1169.0], [89.0, 1173.0], [89.1, 1176.0], [89.2, 1185.0], [89.3, 1193.0], [89.4, 1196.0], [89.5, 1201.0], [89.6, 1202.0], [89.7, 1209.0], [89.8, 1217.0], [89.9, 1221.0], [90.0, 1228.0], [90.1, 1237.0], [90.2, 1243.0], [90.3, 1247.0], [90.4, 1248.0], [90.5, 1252.0], [90.6, 1256.0], [90.7, 1262.0], [90.8, 1266.0], [90.9, 1271.0], [91.0, 1277.0], [91.1, 1280.0], [91.2, 1288.0], [91.3, 1293.0], [91.4, 1299.0], [91.5, 1306.0], [91.6, 1312.0], [91.7, 1318.0], [91.8, 1328.0], [91.9, 1332.0], [92.0, 1342.0], [92.1, 1365.0], [92.2, 1380.0], [92.3, 1388.0], [92.4, 1396.0], [92.5, 1397.0], [92.6, 1411.0], [92.7, 1428.0], [92.8, 1432.0], [92.9, 1455.0], [93.0, 1460.0], [93.1, 1463.0], [93.2, 1468.0], [93.3, 1474.0], [93.4, 1477.0], [93.5, 1481.0], [93.6, 1493.0], [93.7, 1501.0], [93.8, 1508.0], [93.9, 1513.0], [94.0, 1521.0], [94.1, 1523.0], [94.2, 1534.0], [94.3, 1537.0], [94.4, 1538.0], [94.5, 1563.0], [94.6, 1572.0], [94.7, 1585.0], [94.8, 1602.0], [94.9, 1606.0], [95.0, 1617.0], [95.1, 1631.0], [95.2, 1638.0], [95.3, 1665.0], [95.4, 1694.0], [95.5, 1701.0], [95.6, 1701.0], [95.7, 1716.0], [95.8, 1718.0], [95.9, 1757.0], [96.0, 1764.0], [96.1, 1780.0], [96.2, 1809.0], [96.3, 1826.0], [96.4, 1847.0], [96.5, 1874.0], [96.6, 1905.0], [96.7, 1927.0], [96.8, 1957.0], [96.9, 1977.0], [97.0, 2018.0], [97.1, 2052.0], [97.2, 2085.0], [97.3, 2172.0], [97.4, 2227.0], [97.5, 2251.0], [97.6, 2325.0], [97.7, 2348.0], [97.8, 2385.0], [97.9, 2489.0], [98.0, 2512.0], [98.1, 2545.0], [98.2, 2558.0], [98.3, 2627.0], [98.4, 2674.0], [98.5, 2691.0], [98.6, 2705.0], [98.7, 2737.0], [98.8, 2771.0], [98.9, 2828.0], [99.0, 2919.0], [99.1, 2970.0], [99.2, 3091.0], [99.3, 3223.0], [99.4, 3306.0], [99.5, 3510.0], [99.6, 4287.0], [99.7, 4537.0], [99.8, 6628.0], [99.9, 8923.0], [100.0, 33806.0]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[0.0, 49.0], [0.1, 49.0], [0.2, 50.0], [0.3, 50.0], [0.4, 51.0], [0.5, 51.0], [0.6, 51.0], [0.7, 51.0], [0.8, 51.0], [0.9, 51.0], [1.0, 52.0], [1.1, 52.0], [1.2, 52.0], [1.3, 52.0], [1.4, 52.0], [1.5, 52.0], [1.6, 52.0], [1.7, 52.0], [1.8, 52.0], [1.9, 53.0], [2.0, 53.0], [2.1, 53.0], [2.2, 53.0], [2.3, 53.0], [2.4, 53.0], [2.5, 53.0], [2.6, 53.0], [2.7, 54.0], [2.8, 54.0], [2.9, 54.0], [3.0, 54.0], [3.1, 54.0], [3.2, 54.0], [3.3, 54.0], [3.4, 54.0], [3.5, 54.0], [3.6, 55.0], [3.7, 55.0], [3.8, 55.0], [3.9, 55.0], [4.0, 55.0], [4.1, 55.0], [4.2, 55.0], [4.3, 55.0], [4.4, 55.0], [4.5, 55.0], [4.6, 55.0], [4.7, 56.0], [4.8, 56.0], [4.9, 56.0], [5.0, 56.0], [5.1, 56.0], [5.2, 56.0], [5.3, 56.0], [5.4, 56.0], [5.5, 56.0], [5.6, 56.0], [5.7, 56.0], [5.8, 56.0], [5.9, 57.0], [6.0, 57.0], [6.1, 57.0], [6.2, 57.0], [6.3, 57.0], [6.4, 57.0], [6.5, 57.0], [6.6, 57.0], [6.7, 57.0], [6.8, 57.0], [6.9, 57.0], [7.0, 57.0], [7.1, 58.0], [7.2, 58.0], [7.3, 58.0], [7.4, 58.0], [7.5, 58.0], [7.6, 58.0], [7.7, 58.0], [7.8, 58.0], [7.9, 58.0], [8.0, 58.0], [8.1, 59.0], [8.2, 59.0], [8.3, 59.0], [8.4, 59.0], [8.5, 59.0], [8.6, 59.0], [8.7, 59.0], [8.8, 59.0], [8.9, 59.0], [9.0, 59.0], [9.1, 60.0], [9.2, 60.0], [9.3, 60.0], [9.4, 60.0], [9.5, 60.0], [9.6, 60.0], [9.7, 60.0], [9.8, 60.0], [9.9, 60.0], [10.0, 60.0], [10.1, 61.0], [10.2, 61.0], [10.3, 61.0], [10.4, 61.0], [10.5, 61.0], [10.6, 61.0], [10.7, 61.0], [10.8, 61.0], [10.9, 62.0], [11.0, 62.0], [11.1, 62.0], [11.2, 62.0], [11.3, 62.0], [11.4, 62.0], [11.5, 62.0], [11.6, 62.0], [11.7, 62.0], [11.8, 63.0], [11.9, 63.0], [12.0, 63.0], [12.1, 63.0], [12.2, 63.0], [12.3, 63.0], [12.4, 63.0], [12.5, 63.0], [12.6, 63.0], [12.7, 64.0], [12.8, 64.0], [12.9, 64.0], [13.0, 64.0], [13.1, 64.0], [13.2, 64.0], [13.3, 64.0], [13.4, 64.0], [13.5, 64.0], [13.6, 64.0], [13.7, 65.0], [13.8, 65.0], [13.9, 65.0], [14.0, 65.0], [14.1, 65.0], [14.2, 66.0], [14.3, 66.0], [14.4, 66.0], [14.5, 66.0], [14.6, 66.0], [14.7, 67.0], [14.8, 67.0], [14.9, 67.0], [15.0, 67.0], [15.1, 67.0], [15.2, 67.0], [15.3, 67.0], [15.4, 68.0], [15.5, 68.0], [15.6, 68.0], [15.7, 69.0], [15.8, 69.0], [15.9, 69.0], [16.0, 69.0], [16.1, 69.0], [16.2, 69.0], [16.3, 69.0], [16.4, 69.0], [16.5, 70.0], [16.6, 70.0], [16.7, 70.0], [16.8, 70.0], [16.9, 70.0], [17.0, 70.0], [17.1, 70.0], [17.2, 70.0], [17.3, 71.0], [17.4, 71.0], [17.5, 71.0], [17.6, 71.0], [17.7, 71.0], [17.8, 72.0], [17.9, 72.0], [18.0, 72.0], [18.1, 72.0], [18.2, 72.0], [18.3, 73.0], [18.4, 73.0], [18.5, 73.0], [18.6, 73.0], [18.7, 73.0], [18.8, 73.0], [18.9, 74.0], [19.0, 74.0], [19.1, 74.0], [19.2, 74.0], [19.3, 74.0], [19.4, 75.0], [19.5, 75.0], [19.6, 75.0], [19.7, 76.0], [19.8, 76.0], [19.9, 76.0], [20.0, 76.0], [20.1, 77.0], [20.2, 77.0], [20.3, 77.0], [20.4, 77.0], [20.5, 77.0], [20.6, 77.0], [20.7, 77.0], [20.8, 78.0], [20.9, 78.0], [21.0, 78.0], [21.1, 78.0], [21.2, 79.0], [21.3, 79.0], [21.4, 79.0], [21.5, 80.0], [21.6, 80.0], [21.7, 80.0], [21.8, 80.0], [21.9, 80.0], [22.0, 81.0], [22.1, 81.0], [22.2, 82.0], [22.3, 82.0], [22.4, 82.0], [22.5, 83.0], [22.6, 83.0], [22.7, 84.0], [22.8, 84.0], [22.9, 84.0], [23.0, 84.0], [23.1, 85.0], [23.2, 86.0], [23.3, 86.0], [23.4, 86.0], [23.5, 86.0], [23.6, 87.0], [23.7, 87.0], [23.8, 87.0], [23.9, 87.0], [24.0, 88.0], [24.1, 88.0], [24.2, 88.0], [24.3, 88.0], [24.4, 89.0], [24.5, 89.0], [24.6, 89.0], [24.7, 90.0], [24.8, 91.0], [24.9, 91.0], [25.0, 92.0], [25.1, 92.0], [25.2, 93.0], [25.3, 93.0], [25.4, 94.0], [25.5, 94.0], [25.6, 95.0], [25.7, 95.0], [25.8, 96.0], [25.9, 96.0], [26.0, 96.0], [26.1, 96.0], [26.2, 96.0], [26.3, 97.0], [26.4, 97.0], [26.5, 97.0], [26.6, 98.0], [26.7, 98.0], [26.8, 98.0], [26.9, 98.0], [27.0, 99.0], [27.1, 99.0], [27.2, 99.0], [27.3, 100.0], [27.4, 101.0], [27.5, 101.0], [27.6, 102.0], [27.7, 102.0], [27.8, 102.0], [27.9, 103.0], [28.0, 103.0], [28.1, 103.0], [28.2, 103.0], [28.3, 104.0], [28.4, 104.0], [28.5, 104.0], [28.6, 104.0], [28.7, 105.0], [28.8, 105.0], [28.9, 105.0], [29.0, 105.0], [29.1, 106.0], [29.2, 106.0], [29.3, 106.0], [29.4, 107.0], [29.5, 107.0], [29.6, 108.0], [29.7, 108.0], [29.8, 108.0], [29.9, 109.0], [30.0, 109.0], [30.1, 109.0], [30.2, 109.0], [30.3, 109.0], [30.4, 110.0], [30.5, 110.0], [30.6, 110.0], [30.7, 111.0], [30.8, 111.0], [30.9, 111.0], [31.0, 111.0], [31.1, 112.0], [31.2, 112.0], [31.3, 112.0], [31.4, 112.0], [31.5, 113.0], [31.6, 113.0], [31.7, 113.0], [31.8, 114.0], [31.9, 114.0], [32.0, 114.0], [32.1, 114.0], [32.2, 114.0], [32.3, 115.0], [32.4, 115.0], [32.5, 115.0], [32.6, 115.0], [32.7, 116.0], [32.8, 116.0], [32.9, 117.0], [33.0, 118.0], [33.1, 118.0], [33.2, 118.0], [33.3, 119.0], [33.4, 119.0], [33.5, 120.0], [33.6, 120.0], [33.7, 120.0], [33.8, 121.0], [33.9, 121.0], [34.0, 121.0], [34.1, 122.0], [34.2, 122.0], [34.3, 123.0], [34.4, 123.0], [34.5, 123.0], [34.6, 124.0], [34.7, 124.0], [34.8, 124.0], [34.9, 124.0], [35.0, 124.0], [35.1, 125.0], [35.2, 125.0], [35.3, 127.0], [35.4, 127.0], [35.5, 128.0], [35.6, 128.0], [35.7, 128.0], [35.8, 129.0], [35.9, 129.0], [36.0, 129.0], [36.1, 130.0], [36.2, 130.0], [36.3, 130.0], [36.4, 131.0], [36.5, 132.0], [36.6, 132.0], [36.7, 133.0], [36.8, 133.0], [36.9, 133.0], [37.0, 134.0], [37.1, 134.0], [37.2, 135.0], [37.3, 135.0], [37.4, 136.0], [37.5, 136.0], [37.6, 137.0], [37.7, 138.0], [37.8, 138.0], [37.9, 139.0], [38.0, 139.0], [38.1, 139.0], [38.2, 140.0], [38.3, 140.0], [38.4, 141.0], [38.5, 141.0], [38.6, 141.0], [38.7, 141.0], [38.8, 142.0], [38.9, 143.0], [39.0, 143.0], [39.1, 143.0], [39.2, 144.0], [39.3, 144.0], [39.4, 145.0], [39.5, 145.0], [39.6, 145.0], [39.7, 146.0], [39.8, 146.0], [39.9, 146.0], [40.0, 146.0], [40.1, 147.0], [40.2, 147.0], [40.3, 147.0], [40.4, 148.0], [40.5, 148.0], [40.6, 148.0], [40.7, 149.0], [40.8, 149.0], [40.9, 149.0], [41.0, 150.0], [41.1, 150.0], [41.2, 151.0], [41.3, 151.0], [41.4, 152.0], [41.5, 152.0], [41.6, 152.0], [41.7, 152.0], [41.8, 153.0], [41.9, 153.0], [42.0, 153.0], [42.1, 154.0], [42.2, 154.0], [42.3, 155.0], [42.4, 155.0], [42.5, 156.0], [42.6, 156.0], [42.7, 157.0], [42.8, 158.0], [42.9, 158.0], [43.0, 159.0], [43.1, 159.0], [43.2, 160.0], [43.3, 160.0], [43.4, 160.0], [43.5, 161.0], [43.6, 161.0], [43.7, 162.0], [43.8, 163.0], [43.9, 163.0], [44.0, 163.0], [44.1, 164.0], [44.2, 165.0], [44.3, 165.0], [44.4, 166.0], [44.5, 166.0], [44.6, 166.0], [44.7, 167.0], [44.8, 167.0], [44.9, 167.0], [45.0, 168.0], [45.1, 169.0], [45.2, 170.0], [45.3, 170.0], [45.4, 171.0], [45.5, 171.0], [45.6, 171.0], [45.7, 172.0], [45.8, 172.0], [45.9, 173.0], [46.0, 174.0], [46.1, 174.0], [46.2, 175.0], [46.3, 175.0], [46.4, 176.0], [46.5, 177.0], [46.6, 177.0], [46.7, 177.0], [46.8, 179.0], [46.9, 180.0], [47.0, 181.0], [47.1, 181.0], [47.2, 182.0], [47.3, 182.0], [47.4, 183.0], [47.5, 183.0], [47.6, 184.0], [47.7, 184.0], [47.8, 184.0], [47.9, 185.0], [48.0, 185.0], [48.1, 185.0], [48.2, 186.0], [48.3, 187.0], [48.4, 187.0], [48.5, 188.0], [48.6, 188.0], [48.7, 189.0], [48.8, 190.0], [48.9, 190.0], [49.0, 191.0], [49.1, 191.0], [49.2, 192.0], [49.3, 193.0], [49.4, 194.0], [49.5, 194.0], [49.6, 195.0], [49.7, 196.0], [49.8, 196.0], [49.9, 197.0], [50.0, 197.0], [50.1, 197.0], [50.2, 198.0], [50.3, 199.0], [50.4, 199.0], [50.5, 200.0], [50.6, 201.0], [50.7, 202.0], [50.8, 202.0], [50.9, 203.0], [51.0, 204.0], [51.1, 204.0], [51.2, 205.0], [51.3, 205.0], [51.4, 205.0], [51.5, 206.0], [51.6, 206.0], [51.7, 207.0], [51.8, 208.0], [51.9, 208.0], [52.0, 208.0], [52.1, 208.0], [52.2, 209.0], [52.3, 210.0], [52.4, 211.0], [52.5, 211.0], [52.6, 213.0], [52.7, 213.0], [52.8, 214.0], [52.9, 215.0], [53.0, 216.0], [53.1, 217.0], [53.2, 217.0], [53.3, 218.0], [53.4, 219.0], [53.5, 220.0], [53.6, 220.0], [53.7, 221.0], [53.8, 222.0], [53.9, 223.0], [54.0, 225.0], [54.1, 226.0], [54.2, 227.0], [54.3, 227.0], [54.4, 228.0], [54.5, 229.0], [54.6, 230.0], [54.7, 231.0], [54.8, 232.0], [54.9, 232.0], [55.0, 234.0], [55.1, 234.0], [55.2, 235.0], [55.3, 235.0], [55.4, 237.0], [55.5, 237.0], [55.6, 238.0], [55.7, 238.0], [55.8, 238.0], [55.9, 239.0], [56.0, 241.0], [56.1, 242.0], [56.2, 243.0], [56.3, 244.0], [56.4, 244.0], [56.5, 245.0], [56.6, 246.0], [56.7, 247.0], [56.8, 247.0], [56.9, 248.0], [57.0, 249.0], [57.1, 251.0], [57.2, 252.0], [57.3, 252.0], [57.4, 252.0], [57.5, 253.0], [57.6, 255.0], [57.7, 256.0], [57.8, 257.0], [57.9, 258.0], [58.0, 259.0], [58.1, 260.0], [58.2, 261.0], [58.3, 261.0], [58.4, 262.0], [58.5, 264.0], [58.6, 265.0], [58.7, 266.0], [58.8, 267.0], [58.9, 267.0], [59.0, 268.0], [59.1, 269.0], [59.2, 270.0], [59.3, 270.0], [59.4, 272.0], [59.5, 274.0], [59.6, 274.0], [59.7, 275.0], [59.8, 275.0], [59.9, 276.0], [60.0, 277.0], [60.1, 278.0], [60.2, 278.0], [60.3, 278.0], [60.4, 280.0], [60.5, 282.0], [60.6, 283.0], [60.7, 284.0], [60.8, 285.0], [60.9, 285.0], [61.0, 286.0], [61.1, 286.0], [61.2, 287.0], [61.3, 288.0], [61.4, 288.0], [61.5, 289.0], [61.6, 289.0], [61.7, 290.0], [61.8, 291.0], [61.9, 291.0], [62.0, 292.0], [62.1, 292.0], [62.2, 294.0], [62.3, 295.0], [62.4, 297.0], [62.5, 299.0], [62.6, 299.0], [62.7, 300.0], [62.8, 300.0], [62.9, 301.0], [63.0, 302.0], [63.1, 303.0], [63.2, 305.0], [63.3, 305.0], [63.4, 305.0], [63.5, 306.0], [63.6, 306.0], [63.7, 307.0], [63.8, 308.0], [63.9, 308.0], [64.0, 308.0], [64.1, 309.0], [64.2, 310.0], [64.3, 310.0], [64.4, 310.0], [64.5, 311.0], [64.6, 312.0], [64.7, 313.0], [64.8, 314.0], [64.9, 314.0], [65.0, 315.0], [65.1, 315.0], [65.2, 315.0], [65.3, 316.0], [65.4, 317.0], [65.5, 317.0], [65.6, 319.0], [65.7, 319.0], [65.8, 319.0], [65.9, 321.0], [66.0, 322.0], [66.1, 322.0], [66.2, 322.0], [66.3, 322.0], [66.4, 323.0], [66.5, 323.0], [66.6, 324.0], [66.7, 325.0], [66.8, 326.0], [66.9, 326.0], [67.0, 327.0], [67.1, 327.0], [67.2, 328.0], [67.3, 329.0], [67.4, 330.0], [67.5, 330.0], [67.6, 332.0], [67.7, 332.0], [67.8, 333.0], [67.9, 334.0], [68.0, 334.0], [68.1, 335.0], [68.2, 335.0], [68.3, 336.0], [68.4, 337.0], [68.5, 339.0], [68.6, 340.0], [68.7, 340.0], [68.8, 341.0], [68.9, 342.0], [69.0, 342.0], [69.1, 343.0], [69.2, 344.0], [69.3, 344.0], [69.4, 345.0], [69.5, 346.0], [69.6, 347.0], [69.7, 347.0], [69.8, 348.0], [69.9, 348.0], [70.0, 350.0], [70.1, 351.0], [70.2, 353.0], [70.3, 355.0], [70.4, 355.0], [70.5, 355.0], [70.6, 356.0], [70.7, 356.0], [70.8, 357.0], [70.9, 358.0], [71.0, 359.0], [71.1, 359.0], [71.2, 360.0], [71.3, 360.0], [71.4, 361.0], [71.5, 362.0], [71.6, 363.0], [71.7, 364.0], [71.8, 366.0], [71.9, 366.0], [72.0, 367.0], [72.1, 369.0], [72.2, 372.0], [72.3, 372.0], [72.4, 374.0], [72.5, 375.0], [72.6, 375.0], [72.7, 376.0], [72.8, 377.0], [72.9, 377.0], [73.0, 377.0], [73.1, 379.0], [73.2, 380.0], [73.3, 381.0], [73.4, 384.0], [73.5, 384.0], [73.6, 385.0], [73.7, 386.0], [73.8, 388.0], [73.9, 389.0], [74.0, 390.0], [74.1, 391.0], [74.2, 393.0], [74.3, 394.0], [74.4, 396.0], [74.5, 398.0], [74.6, 400.0], [74.7, 400.0], [74.8, 401.0], [74.9, 402.0], [75.0, 403.0], [75.1, 407.0], [75.2, 408.0], [75.3, 409.0], [75.4, 410.0], [75.5, 411.0], [75.6, 412.0], [75.7, 413.0], [75.8, 413.0], [75.9, 415.0], [76.0, 416.0], [76.1, 420.0], [76.2, 424.0], [76.3, 425.0], [76.4, 427.0], [76.5, 428.0], [76.6, 428.0], [76.7, 430.0], [76.8, 432.0], [76.9, 434.0], [77.0, 435.0], [77.1, 437.0], [77.2, 438.0], [77.3, 442.0], [77.4, 445.0], [77.5, 449.0], [77.6, 451.0], [77.7, 454.0], [77.8, 458.0], [77.9, 462.0], [78.0, 463.0], [78.1, 464.0], [78.2, 466.0], [78.3, 468.0], [78.4, 469.0], [78.5, 471.0], [78.6, 472.0], [78.7, 476.0], [78.8, 477.0], [78.9, 483.0], [79.0, 485.0], [79.1, 491.0], [79.2, 493.0], [79.3, 495.0], [79.4, 499.0], [79.5, 500.0], [79.6, 500.0], [79.7, 506.0], [79.8, 508.0], [79.9, 510.0], [80.0, 511.0], [80.1, 513.0], [80.2, 515.0], [80.3, 518.0], [80.4, 520.0], [80.5, 521.0], [80.6, 526.0], [80.7, 529.0], [80.8, 532.0], [80.9, 535.0], [81.0, 540.0], [81.1, 543.0], [81.2, 544.0], [81.3, 547.0], [81.4, 548.0], [81.5, 549.0], [81.6, 550.0], [81.7, 553.0], [81.8, 554.0], [81.9, 555.0], [82.0, 556.0], [82.1, 558.0], [82.2, 559.0], [82.3, 562.0], [82.4, 564.0], [82.5, 565.0], [82.6, 565.0], [82.7, 566.0], [82.8, 567.0], [82.9, 568.0], [83.0, 573.0], [83.1, 575.0], [83.2, 577.0], [83.3, 579.0], [83.4, 582.0], [83.5, 587.0], [83.6, 589.0], [83.7, 594.0], [83.8, 596.0], [83.9, 597.0], [84.0, 600.0], [84.1, 602.0], [84.2, 604.0], [84.3, 605.0], [84.4, 610.0], [84.5, 610.0], [84.6, 611.0], [84.7, 614.0], [84.8, 617.0], [84.9, 618.0], [85.0, 621.0], [85.1, 622.0], [85.2, 625.0], [85.3, 627.0], [85.4, 632.0], [85.5, 634.0], [85.6, 637.0], [85.7, 638.0], [85.8, 641.0], [85.9, 643.0], [86.0, 644.0], [86.1, 646.0], [86.2, 647.0], [86.3, 648.0], [86.4, 650.0], [86.5, 656.0], [86.6, 658.0], [86.7, 659.0], [86.8, 661.0], [86.9, 666.0], [87.0, 673.0], [87.1, 680.0], [87.2, 683.0], [87.3, 685.0], [87.4, 687.0], [87.5, 688.0], [87.6, 694.0], [87.7, 698.0], [87.8, 699.0], [87.9, 702.0], [88.0, 703.0], [88.1, 709.0], [88.2, 714.0], [88.3, 715.0], [88.4, 720.0], [88.5, 725.0], [88.6, 729.0], [88.7, 730.0], [88.8, 732.0], [88.9, 735.0], [89.0, 739.0], [89.1, 740.0], [89.2, 741.0], [89.3, 755.0], [89.4, 758.0], [89.5, 762.0], [89.6, 763.0], [89.7, 769.0], [89.8, 771.0], [89.9, 774.0], [90.0, 780.0], [90.1, 783.0], [90.2, 787.0], [90.3, 790.0], [90.4, 794.0], [90.5, 798.0], [90.6, 803.0], [90.7, 815.0], [90.8, 820.0], [90.9, 823.0], [91.0, 828.0], [91.1, 838.0], [91.2, 847.0], [91.3, 853.0], [91.4, 868.0], [91.5, 874.0], [91.6, 875.0], [91.7, 885.0], [91.8, 896.0], [91.9, 898.0], [92.0, 899.0], [92.1, 907.0], [92.2, 909.0], [92.3, 920.0], [92.4, 926.0], [92.5, 932.0], [92.6, 941.0], [92.7, 953.0], [92.8, 956.0], [92.9, 968.0], [93.0, 980.0], [93.1, 988.0], [93.2, 1021.0], [93.3, 1030.0], [93.4, 1060.0], [93.5, 1082.0], [93.6, 1090.0], [93.7, 1100.0], [93.8, 1110.0], [93.9, 1111.0], [94.0, 1118.0], [94.1, 1131.0], [94.2, 1136.0], [94.3, 1142.0], [94.4, 1147.0], [94.5, 1152.0], [94.6, 1167.0], [94.7, 1173.0], [94.8, 1181.0], [94.9, 1191.0], [95.0, 1198.0], [95.1, 1205.0], [95.2, 1211.0], [95.3, 1226.0], [95.4, 1241.0], [95.5, 1248.0], [95.6, 1257.0], [95.7, 1261.0], [95.8, 1277.0], [95.9, 1292.0], [96.0, 1318.0], [96.1, 1328.0], [96.2, 1333.0], [96.3, 1345.0], [96.4, 1356.0], [96.5, 1362.0], [96.6, 1371.0], [96.7, 1378.0], [96.8, 1385.0], [96.9, 1400.0], [97.0, 1403.0], [97.1, 1414.0], [97.2, 1426.0], [97.3, 1450.0], [97.4, 1458.0], [97.5, 1474.0], [97.6, 1488.0], [97.7, 1501.0], [97.8, 1542.0], [97.9, 1576.0], [98.0, 1591.0], [98.1, 1623.0], [98.2, 1657.0], [98.3, 1718.0], [98.4, 1730.0], [98.5, 1754.0], [98.6, 1797.0], [98.7, 1831.0], [98.8, 1842.0], [98.9, 1888.0], [99.0, 2052.0], [99.1, 2076.0], [99.2, 2152.0], [99.3, 2238.0], [99.4, 2457.0], [99.5, 2613.0], [99.6, 2674.0], [99.7, 2769.0], [99.8, 3186.0], [99.9, 5138.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1099.0, "series": [{"data": [[0.0, 1099.0], [600.0, 76.0], [700.0, 50.0], [800.0, 45.0], [900.0, 30.0], [1000.0, 21.0], [1100.0, 22.0], [1200.0, 16.0], [1300.0, 12.0], [1400.0, 14.0], [1500.0, 19.0], [100.0, 574.0], [1600.0, 13.0], [1700.0, 6.0], [1800.0, 4.0], [30600.0, 22.0], [30500.0, 5.0], [30700.0, 5.0], [30400.0, 1.0], [1900.0, 2.0], [31000.0, 1.0], [2000.0, 1.0], [2100.0, 3.0], [2200.0, 3.0], [2300.0, 1.0], [2400.0, 1.0], [200.0, 299.0], [65200.0, 1.0], [300.0, 256.0], [400.0, 137.0], [500.0, 92.0]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[600.0, 258.0], [700.0, 257.0], [800.0, 211.0], [900.0, 200.0], [1000.0, 102.0], [1100.0, 130.0], [1200.0, 93.0], [1300.0, 78.0], [1400.0, 77.0], [1500.0, 70.0], [1600.0, 80.0], [1700.0, 71.0], [1800.0, 46.0], [1900.0, 30.0], [2000.0, 21.0], [2100.0, 34.0], [2300.0, 30.0], [2200.0, 21.0], [2400.0, 15.0], [2500.0, 12.0], [2600.0, 17.0], [2700.0, 7.0], [2800.0, 10.0], [2900.0, 6.0], [3000.0, 6.0], [3100.0, 8.0], [3200.0, 4.0], [3300.0, 4.0], [3400.0, 7.0], [3500.0, 4.0], [3700.0, 2.0], [3600.0, 1.0], [3800.0, 2.0], [3900.0, 3.0], [4000.0, 3.0], [4200.0, 2.0], [4300.0, 3.0], [4100.0, 2.0], [65900.0, 1.0], [4600.0, 2.0], [4500.0, 2.0], [4700.0, 1.0], [5100.0, 1.0], [5600.0, 1.0], [5500.0, 1.0], [5400.0, 1.0], [5800.0, 2.0], [6000.0, 1.0], [5900.0, 1.0], [6500.0, 1.0], [6600.0, 1.0], [6800.0, 1.0], [7000.0, 1.0], [7400.0, 1.0], [7200.0, 1.0], [7800.0, 1.0], [8100.0, 1.0], [10600.0, 1.0], [100.0, 24.0], [27400.0, 1.0], [32300.0, 1.0], [200.0, 94.0], [64800.0, 1.0], [65100.0, 1.0], [64400.0, 1.0], [300.0, 214.0], [400.0, 260.0], [500.0, 305.0]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[0.0, 237.0], [600.0, 257.0], [700.0, 152.0], [800.0, 81.0], [900.0, 79.0], [1000.0, 60.0], [1100.0, 59.0], [1200.0, 55.0], [1300.0, 31.0], [1400.0, 32.0], [1500.0, 33.0], [1600.0, 19.0], [1700.0, 21.0], [1800.0, 11.0], [1900.0, 10.0], [2000.0, 10.0], [2100.0, 1.0], [2300.0, 7.0], [2200.0, 7.0], [2400.0, 4.0], [2500.0, 8.0], [2600.0, 9.0], [2700.0, 9.0], [2800.0, 2.0], [2900.0, 5.0], [3000.0, 3.0], [3100.0, 2.0], [3200.0, 2.0], [3300.0, 2.0], [3400.0, 1.0], [3500.0, 1.0], [4000.0, 1.0], [4100.0, 1.0], [4200.0, 1.0], [4500.0, 2.0], [4400.0, 1.0], [4900.0, 1.0], [5700.0, 1.0], [6600.0, 1.0], [8100.0, 1.0], [8300.0, 1.0], [8900.0, 1.0], [9800.0, 1.0], [100.0, 399.0], [33800.0, 1.0], [200.0, 356.0], [300.0, 356.0], [400.0, 286.0], [500.0, 220.0]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[0.0, 771.0], [600.0, 109.0], [700.0, 76.0], [800.0, 43.0], [900.0, 33.0], [1000.0, 14.0], [1100.0, 38.0], [1200.0, 25.0], [1300.0, 28.0], [1400.0, 22.0], [1500.0, 10.0], [100.0, 660.0], [1600.0, 6.0], [1700.0, 11.0], [1800.0, 8.0], [1900.0, 2.0], [2000.0, 4.0], [2100.0, 3.0], [2200.0, 3.0], [2400.0, 4.0], [2600.0, 4.0], [2700.0, 3.0], [2900.0, 1.0], [3000.0, 1.0], [3100.0, 1.0], [200.0, 344.0], [3700.0, 1.0], [64400.0, 1.0], [4500.0, 1.0], [300.0, 338.0], [5100.0, 1.0], [400.0, 140.0], [500.0, 127.0], [8000.0, 1.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 65900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 882.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 6852.0, "series": [{"data": [[0.0, 6852.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3624.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 882.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.55888784E12, "maxY": 35.0, "series": [{"data": [[1.55888808E12, 35.0], [1.55888796E12, 35.0], [1.55888814E12, 34.69324090121318], [1.55888784E12, 35.0], [1.55888802E12, 35.0], [1.5588882E12, 2.0], [1.5588879E12, 35.0]], "isOverall": false, "label": "stand-alone-test", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5588882E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 61.0, "minX": 2.0, "maxY": 64417.0, "series": [{"data": [[33.0, 78.0], [8.0, 190.0], [35.0, 670.8370607028759], [9.0, 193.0], [10.0, 88.0], [12.0, 68.0], [3.0, 615.0], [4.0, 104.0], [20.0, 61.0], [5.0, 67.0], [22.0, 80.0], [26.0, 70.0], [28.0, 70.0]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[34.909925821264586, 668.170257859414]], "isOverall": false, "label": "BuyBook-Aggregated", "isController": false}, {"data": [[33.0, 1068.5], [16.0, 509.0], [2.0, 64417.0], [35.0, 1122.4468309859183], [19.0, 668.5], [11.0, 560.0], [23.0, 706.0], [27.0, 2646.0], [7.0, 994.0], [15.0, 453.0]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[34.92706872370266, 1143.9347826086985]], "isOverall": false, "label": "SearchBooks-Aggregated", "isController": false}, {"data": [[35.0, 600.5931545518706], [34.0, 597.0], [25.0, 735.0], [13.0, 847.0], [14.0, 443.0], [29.0, 1299.0], [30.0, 919.0]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[34.976768743400214, 601.0271031327002]], "isOverall": false, "label": "GetBook-Aggregated", "isController": false}, {"data": [[35.0, 367.92226148409924], [34.0, 237.0], [17.0, 520.0], [24.0, 150.0], [30.0, 106.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[34.98764996471418, 367.7604093154555]], "isOverall": false, "label": "Login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 35.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2.55, "minX": 1.55888784E12, "maxY": 268246.0333333333, "series": [{"data": [[1.55888808E12, 264502.81666666665], [1.55888796E12, 210340.78333333333], [1.55888814E12, 163474.8], [1.55888784E12, 12987.783333333333], [1.55888802E12, 268246.0333333333], [1.5588882E12, 231.61666666666667], [1.5588879E12, 151453.26666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.55888808E12, 7270.4], [1.55888796E12, 5760.633333333333], [1.55888814E12, 4463.066666666667], [1.55888784E12, 259.65], [1.55888802E12, 7321.6], [1.5588882E12, 2.55], [1.5588879E12, 4212.116666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5588882E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 178.0, "minX": 1.55888784E12, "maxY": 64417.0, "series": [{"data": [[1.55888808E12, 225.73163841807897], [1.55888796E12, 366.8515205724506], [1.55888814E12, 357.86774941995327], [1.55888784E12, 178.0], [1.55888802E12, 213.21590909090895], [1.5588879E12, 2855.5584112149513]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[1.55888808E12, 986.7027027027027], [1.55888796E12, 1203.606060606062], [1.55888814E12, 1188.3908045977014], [1.55888784E12, 2342.857142857143], [1.55888802E12, 1021.2478991596637], [1.5588882E12, 64417.0], [1.5588879E12, 1243.3970223325064]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[1.55888808E12, 537.4957264957264], [1.55888796E12, 674.758558558558], [1.55888814E12, 529.793103448276], [1.55888784E12, 803.5142857142858], [1.55888802E12, 520.688202247191], [1.5588879E12, 811.9203980099501]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[1.55888808E12, 284.32056737588664], [1.55888796E12, 528.8243727598561], [1.55888814E12, 255.48604651162807], [1.55888784E12, 538.9142857142857], [1.55888802E12, 288.9774647887324], [1.5588879E12, 537.3939393939395]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5588882E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 178.0, "minX": 1.55888784E12, "maxY": 64347.0, "series": [{"data": [[1.55888808E12, 225.73163841807897], [1.55888796E12, 366.8479427549196], [1.55888814E12, 357.86542923433854], [1.55888784E12, 178.0], [1.55888802E12, 213.21448863636357], [1.5588879E12, 2855.4462616822448]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[1.55888808E12, 548.6714082503555], [1.55888796E12, 664.1479500891255], [1.55888814E12, 715.089655172414], [1.55888784E12, 2209.628571428571], [1.55888802E12, 444.97058823529426], [1.5588882E12, 64347.0], [1.5588879E12, 746.9751861042186]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[1.55888808E12, 333.2948717948717], [1.55888796E12, 509.24684684684627], [1.55888814E12, 317.86666666666684], [1.55888784E12, 786.3142857142857], [1.55888802E12, 303.3202247191008], [1.5588879E12, 582.1044776119403]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[1.55888808E12, 260.7574468085108], [1.55888796E12, 496.27419354838736], [1.55888814E12, 228.11395348837212], [1.55888784E12, 533.5428571428571], [1.55888802E12, 255.04225352112684], [1.5588879E12, 508.914141414141]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5588882E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.55888784E12, "maxY": 64244.0, "series": [{"data": [[1.55888808E12, 37.44915254237281], [1.55888796E12, 64.07513416815752], [1.55888814E12, 174.05568445475646], [1.55888784E12, 0.0], [1.55888802E12, 35.95596590909088], [1.5588879E12, 32.4158878504673]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[1.55888808E12, 286.556187766714], [1.55888796E12, 264.18360071301225], [1.55888814E12, 459.7080459770115], [1.55888784E12, 67.17142857142858], [1.55888802E12, 167.25350140056005], [1.5588882E12, 64244.0], [1.5588879E12, 316.3870967741935]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[1.55888808E12, 7.569800569800558], [1.55888796E12, 107.82882882882883], [1.55888814E12, 13.045977011494267], [1.55888784E12, 71.42857142857143], [1.55888802E12, 23.648876404494377], [1.5588879E12, 34.144278606965166]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[1.55888808E12, 36.314893617021276], [1.55888796E12, 186.15770609318997], [1.55888814E12, 31.23488372093024], [1.55888784E12, 68.5142857142857], [1.55888802E12, 39.90281690140844], [1.5588879E12, 128.0328282828282]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5588882E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 49.0, "minX": 1.55888784E12, "maxY": 65934.0, "series": [{"data": [[1.55888808E12, 65934.0], [1.55888796E12, 64470.0], [1.55888814E12, 65260.0], [1.55888784E12, 2836.0], [1.55888802E12, 27408.0], [1.5588882E12, 64417.0], [1.5588879E12, 31021.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.55888808E12, 49.0], [1.55888796E12, 50.0], [1.55888814E12, 49.0], [1.55888784E12, 70.0], [1.55888802E12, 50.0], [1.5588882E12, 64417.0], [1.5588879E12, 54.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.55888808E12, 1123.1], [1.55888796E12, 1426.4000000000005], [1.55888814E12, 1108.9999999999998], [1.55888784E12, 2492.2999999999997], [1.55888802E12, 1209.0], [1.5588882E12, 64417.0], [1.5588879E12, 1690.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.55888808E12, 2287.2499999999986], [1.55888796E12, 3586.2599999999984], [1.55888814E12, 2660.2800000000016], [1.55888784E12, 2827.3199999999993], [1.55888802E12, 2596.9400000000096], [1.5588882E12, 64417.0], [1.5588879E12, 30636.6]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.55888808E12, 1463.0], [1.55888796E12, 1985.6999999999975], [1.55888814E12, 1559.7999999999997], [1.55888784E12, 2621.6], [1.55888802E12, 1621.8999999999996], [1.5588882E12, 64417.0], [1.5588879E12, 2491.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5588882E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 128.0, "minX": 1.0, "maxY": 64417.0, "series": [{"data": [[2.0, 902.5], [3.0, 1858.0], [5.0, 1639.0], [6.0, 996.0], [7.0, 2097.0], [8.0, 1136.5], [9.0, 1072.0], [10.0, 1666.0], [11.0, 1334.0], [12.0, 1495.0], [13.0, 1374.0], [14.0, 1853.5], [15.0, 1746.0], [16.0, 1545.0], [17.0, 1247.0], [18.0, 1337.5], [19.0, 1112.5], [20.0, 1448.5], [21.0, 947.5], [22.0, 898.0], [23.0, 899.5], [24.0, 804.5], [25.0, 755.0], [26.0, 995.0], [27.0, 785.0], [28.0, 761.0], [29.0, 640.0], [30.0, 440.0], [31.0, 466.5], [32.0, 743.5], [33.0, 636.0], [34.0, 670.5], [35.0, 401.0], [37.0, 623.0], [36.0, 665.0], [39.0, 644.5], [38.0, 471.0], [40.0, 307.5], [41.0, 390.0], [43.0, 413.0], [42.0, 170.5], [45.0, 278.5], [44.0, 393.0], [46.0, 384.0], [47.0, 288.0], [48.0, 266.5], [49.0, 197.0], [50.0, 411.5], [51.0, 366.5], [52.0, 231.0], [53.0, 190.5], [55.0, 256.0], [54.0, 300.5], [57.0, 145.0], [56.0, 331.0], [58.0, 192.5], [59.0, 167.0], [60.0, 302.5], [61.0, 160.0], [63.0, 308.0], [62.0, 226.5], [67.0, 128.0], [66.0, 264.0], [65.0, 350.0], [64.0, 337.5], [70.0, 238.5], [68.0, 241.5], [75.0, 360.0], [73.0, 296.0], [72.0, 191.0], [74.0, 237.5], [77.0, 275.0], [79.0, 296.0], [82.0, 215.5], [87.0, 273.0], [92.0, 211.5], [1.0, 64417.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 92.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 84.0, "minX": 1.0, "maxY": 64347.0, "series": [{"data": [[2.0, 902.5], [3.0, 1770.0], [5.0, 967.0], [6.0, 753.0], [7.0, 1147.0], [8.0, 878.0], [9.0, 459.0], [10.0, 1386.5], [11.0, 887.0], [12.0, 1390.0], [13.0, 952.0], [14.0, 1766.5], [15.0, 1143.5], [16.0, 1113.5], [17.0, 1069.0], [18.0, 1093.0], [19.0, 838.5], [20.0, 1324.0], [21.0, 891.5], [22.0, 757.0], [23.0, 750.0], [24.0, 701.0], [25.0, 643.0], [26.0, 845.5], [27.0, 593.0], [28.0, 679.0], [29.0, 626.0], [30.0, 425.5], [31.0, 376.5], [32.0, 667.0], [33.0, 477.0], [34.0, 471.5], [35.0, 372.0], [37.0, 516.5], [36.0, 529.5], [39.0, 641.0], [38.0, 309.0], [40.0, 264.0], [41.0, 369.0], [43.0, 291.0], [42.0, 133.5], [45.0, 223.5], [44.0, 312.5], [46.0, 273.5], [47.0, 165.0], [48.0, 172.0], [49.0, 124.0], [50.0, 356.5], [51.0, 185.0], [52.0, 123.5], [53.0, 114.5], [55.0, 139.5], [54.0, 179.0], [57.0, 106.0], [56.0, 174.5], [58.0, 130.0], [59.0, 119.0], [60.0, 245.5], [61.0, 115.0], [63.0, 225.5], [62.0, 172.5], [67.0, 84.0], [66.0, 134.5], [65.0, 342.0], [64.0, 322.0], [70.0, 182.0], [68.0, 209.0], [75.0, 274.0], [73.0, 259.5], [72.0, 155.5], [74.0, 227.0], [77.0, 253.0], [79.0, 294.0], [82.0, 214.0], [87.0, 269.0], [92.0, 211.5], [1.0, 64347.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 92.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2.3333333333333335, "minX": 1.55888784E12, "maxY": 47.416666666666664, "series": [{"data": [[1.55888808E12, 46.95], [1.55888796E12, 37.233333333333334], [1.55888814E12, 28.416666666666668], [1.55888784E12, 2.3333333333333335], [1.55888802E12, 47.416666666666664], [1.5588879E12, 26.95]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55888814E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.55888784E12, "maxY": 35.6, "series": [{"data": [[1.55888808E12, 35.166666666666664], [1.55888796E12, 27.9], [1.55888814E12, 21.666666666666668], [1.55888784E12, 1.75], [1.55888802E12, 35.6], [1.5588882E12, 0.016666666666666666], [1.5588879E12, 20.583333333333332]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.55888808E12, 11.8], [1.55888796E12, 9.316666666666666], [1.55888814E12, 7.183333333333334], [1.55888784E12, 0.016666666666666666], [1.55888802E12, 11.733333333333333], [1.5588879E12, 6.566666666666666]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5588882E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.55888784E12, "maxY": 11.9, "series": [{"data": [[1.55888808E12, 11.7], [1.55888796E12, 9.25], [1.55888814E12, 7.25], [1.55888784E12, 0.5833333333333334], [1.55888802E12, 11.866666666666667], [1.5588879E12, 6.7]], "isOverall": false, "label": "GetBook-success", "isController": false}, {"data": [[1.55888808E12, 11.8], [1.55888796E12, 9.316666666666666], [1.55888814E12, 7.183333333333334], [1.55888784E12, 0.016666666666666666], [1.55888802E12, 11.733333333333333], [1.5588879E12, 7.133333333333334]], "isOverall": false, "label": "BuyBook-success", "isController": false}, {"data": [[1.55888808E12, 11.716666666666667], [1.55888796E12, 9.35], [1.55888814E12, 7.25], [1.55888784E12, 0.5833333333333334], [1.55888802E12, 11.9], [1.5588882E12, 0.016666666666666666], [1.5588879E12, 6.716666666666667]], "isOverall": false, "label": "SearchBooks-success", "isController": false}, {"data": [[1.55888808E12, 11.75], [1.55888796E12, 9.3], [1.55888814E12, 7.166666666666667], [1.55888784E12, 0.5833333333333334], [1.55888802E12, 11.833333333333334], [1.5588879E12, 6.6]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5588882E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.55888784E12, "maxY": 47.333333333333336, "series": [{"data": [[1.55888808E12, 46.96666666666667], [1.55888796E12, 37.21666666666667], [1.55888814E12, 28.85], [1.55888784E12, 1.7666666666666666], [1.55888802E12, 47.333333333333336], [1.5588882E12, 0.016666666666666666], [1.5588879E12, 27.15]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5588882E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

