/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 51.0, "minX": 0.0, "maxY": 65922.0, "series": [{"data": [[0.0, 87.0], [0.1, 98.0], [0.2, 112.0], [0.3, 116.0], [0.4, 118.0], [0.5, 119.0], [0.6, 121.0], [0.7, 122.0], [0.8, 124.0], [0.9, 125.0], [1.0, 126.0], [1.1, 127.0], [1.2, 128.0], [1.3, 128.0], [1.4, 130.0], [1.5, 131.0], [1.6, 132.0], [1.7, 133.0], [1.8, 134.0], [1.9, 134.0], [2.0, 136.0], [2.1, 136.0], [2.2, 138.0], [2.3, 140.0], [2.4, 141.0], [2.5, 142.0], [2.6, 142.0], [2.7, 143.0], [2.8, 144.0], [2.9, 145.0], [3.0, 145.0], [3.1, 146.0], [3.2, 147.0], [3.3, 147.0], [3.4, 148.0], [3.5, 148.0], [3.6, 149.0], [3.7, 149.0], [3.8, 150.0], [3.9, 150.0], [4.0, 150.0], [4.1, 150.0], [4.2, 151.0], [4.3, 151.0], [4.4, 152.0], [4.5, 152.0], [4.6, 153.0], [4.7, 153.0], [4.8, 153.0], [4.9, 153.0], [5.0, 154.0], [5.1, 154.0], [5.2, 154.0], [5.3, 155.0], [5.4, 155.0], [5.5, 155.0], [5.6, 156.0], [5.7, 156.0], [5.8, 157.0], [5.9, 157.0], [6.0, 157.0], [6.1, 158.0], [6.2, 158.0], [6.3, 158.0], [6.4, 159.0], [6.5, 159.0], [6.6, 159.0], [6.7, 160.0], [6.8, 160.0], [6.9, 160.0], [7.0, 161.0], [7.1, 161.0], [7.2, 161.0], [7.3, 161.0], [7.4, 161.0], [7.5, 162.0], [7.6, 162.0], [7.7, 163.0], [7.8, 163.0], [7.9, 163.0], [8.0, 164.0], [8.1, 164.0], [8.2, 164.0], [8.3, 165.0], [8.4, 165.0], [8.5, 165.0], [8.6, 165.0], [8.7, 166.0], [8.8, 166.0], [8.9, 166.0], [9.0, 167.0], [9.1, 167.0], [9.2, 167.0], [9.3, 168.0], [9.4, 168.0], [9.5, 168.0], [9.6, 169.0], [9.7, 169.0], [9.8, 169.0], [9.9, 170.0], [10.0, 170.0], [10.1, 171.0], [10.2, 171.0], [10.3, 171.0], [10.4, 172.0], [10.5, 172.0], [10.6, 172.0], [10.7, 173.0], [10.8, 173.0], [10.9, 174.0], [11.0, 174.0], [11.1, 174.0], [11.2, 174.0], [11.3, 175.0], [11.4, 175.0], [11.5, 175.0], [11.6, 176.0], [11.7, 176.0], [11.8, 176.0], [11.9, 177.0], [12.0, 177.0], [12.1, 177.0], [12.2, 178.0], [12.3, 178.0], [12.4, 179.0], [12.5, 179.0], [12.6, 179.0], [12.7, 180.0], [12.8, 180.0], [12.9, 180.0], [13.0, 181.0], [13.1, 181.0], [13.2, 182.0], [13.3, 182.0], [13.4, 183.0], [13.5, 183.0], [13.6, 184.0], [13.7, 184.0], [13.8, 184.0], [13.9, 184.0], [14.0, 184.0], [14.1, 185.0], [14.2, 185.0], [14.3, 186.0], [14.4, 186.0], [14.5, 186.0], [14.6, 187.0], [14.7, 187.0], [14.8, 188.0], [14.9, 188.0], [15.0, 188.0], [15.1, 189.0], [15.2, 189.0], [15.3, 190.0], [15.4, 191.0], [15.5, 191.0], [15.6, 191.0], [15.7, 191.0], [15.8, 192.0], [15.9, 192.0], [16.0, 192.0], [16.1, 192.0], [16.2, 193.0], [16.3, 194.0], [16.4, 194.0], [16.5, 195.0], [16.6, 195.0], [16.7, 195.0], [16.8, 196.0], [16.9, 196.0], [17.0, 196.0], [17.1, 197.0], [17.2, 198.0], [17.3, 198.0], [17.4, 199.0], [17.5, 199.0], [17.6, 199.0], [17.7, 200.0], [17.8, 201.0], [17.9, 201.0], [18.0, 202.0], [18.1, 202.0], [18.2, 202.0], [18.3, 202.0], [18.4, 203.0], [18.5, 203.0], [18.6, 204.0], [18.7, 204.0], [18.8, 205.0], [18.9, 205.0], [19.0, 205.0], [19.1, 206.0], [19.2, 206.0], [19.3, 206.0], [19.4, 206.0], [19.5, 207.0], [19.6, 207.0], [19.7, 207.0], [19.8, 208.0], [19.9, 208.0], [20.0, 209.0], [20.1, 210.0], [20.2, 210.0], [20.3, 211.0], [20.4, 211.0], [20.5, 212.0], [20.6, 213.0], [20.7, 213.0], [20.8, 214.0], [20.9, 215.0], [21.0, 215.0], [21.1, 215.0], [21.2, 216.0], [21.3, 216.0], [21.4, 216.0], [21.5, 217.0], [21.6, 217.0], [21.7, 218.0], [21.8, 218.0], [21.9, 219.0], [22.0, 219.0], [22.1, 220.0], [22.2, 220.0], [22.3, 220.0], [22.4, 221.0], [22.5, 221.0], [22.6, 222.0], [22.7, 222.0], [22.8, 223.0], [22.9, 223.0], [23.0, 223.0], [23.1, 224.0], [23.2, 224.0], [23.3, 225.0], [23.4, 226.0], [23.5, 226.0], [23.6, 227.0], [23.7, 227.0], [23.8, 228.0], [23.9, 228.0], [24.0, 229.0], [24.1, 229.0], [24.2, 230.0], [24.3, 230.0], [24.4, 230.0], [24.5, 231.0], [24.6, 231.0], [24.7, 231.0], [24.8, 232.0], [24.9, 233.0], [25.0, 233.0], [25.1, 234.0], [25.2, 234.0], [25.3, 234.0], [25.4, 235.0], [25.5, 235.0], [25.6, 235.0], [25.7, 236.0], [25.8, 237.0], [25.9, 237.0], [26.0, 238.0], [26.1, 238.0], [26.2, 239.0], [26.3, 241.0], [26.4, 242.0], [26.5, 242.0], [26.6, 242.0], [26.7, 243.0], [26.8, 244.0], [26.9, 244.0], [27.0, 245.0], [27.1, 246.0], [27.2, 247.0], [27.3, 247.0], [27.4, 247.0], [27.5, 248.0], [27.6, 248.0], [27.7, 249.0], [27.8, 250.0], [27.9, 250.0], [28.0, 251.0], [28.1, 251.0], [28.2, 252.0], [28.3, 252.0], [28.4, 253.0], [28.5, 253.0], [28.6, 254.0], [28.7, 254.0], [28.8, 254.0], [28.9, 255.0], [29.0, 256.0], [29.1, 257.0], [29.2, 257.0], [29.3, 257.0], [29.4, 258.0], [29.5, 258.0], [29.6, 259.0], [29.7, 260.0], [29.8, 261.0], [29.9, 262.0], [30.0, 263.0], [30.1, 263.0], [30.2, 263.0], [30.3, 264.0], [30.4, 265.0], [30.5, 266.0], [30.6, 267.0], [30.7, 268.0], [30.8, 269.0], [30.9, 269.0], [31.0, 269.0], [31.1, 271.0], [31.2, 271.0], [31.3, 272.0], [31.4, 274.0], [31.5, 274.0], [31.6, 276.0], [31.7, 276.0], [31.8, 277.0], [31.9, 277.0], [32.0, 277.0], [32.1, 279.0], [32.2, 280.0], [32.3, 281.0], [32.4, 282.0], [32.5, 282.0], [32.6, 283.0], [32.7, 283.0], [32.8, 284.0], [32.9, 284.0], [33.0, 285.0], [33.1, 285.0], [33.2, 286.0], [33.3, 287.0], [33.4, 288.0], [33.5, 290.0], [33.6, 290.0], [33.7, 291.0], [33.8, 292.0], [33.9, 292.0], [34.0, 293.0], [34.1, 294.0], [34.2, 295.0], [34.3, 295.0], [34.4, 296.0], [34.5, 298.0], [34.6, 299.0], [34.7, 299.0], [34.8, 300.0], [34.9, 302.0], [35.0, 302.0], [35.1, 304.0], [35.2, 304.0], [35.3, 305.0], [35.4, 305.0], [35.5, 306.0], [35.6, 306.0], [35.7, 308.0], [35.8, 309.0], [35.9, 309.0], [36.0, 310.0], [36.1, 311.0], [36.2, 312.0], [36.3, 313.0], [36.4, 313.0], [36.5, 315.0], [36.6, 315.0], [36.7, 316.0], [36.8, 316.0], [36.9, 317.0], [37.0, 318.0], [37.1, 319.0], [37.2, 319.0], [37.3, 320.0], [37.4, 320.0], [37.5, 321.0], [37.6, 322.0], [37.7, 322.0], [37.8, 323.0], [37.9, 323.0], [38.0, 324.0], [38.1, 325.0], [38.2, 326.0], [38.3, 327.0], [38.4, 327.0], [38.5, 327.0], [38.6, 328.0], [38.7, 328.0], [38.8, 329.0], [38.9, 329.0], [39.0, 330.0], [39.1, 331.0], [39.2, 331.0], [39.3, 332.0], [39.4, 332.0], [39.5, 333.0], [39.6, 334.0], [39.7, 335.0], [39.8, 335.0], [39.9, 336.0], [40.0, 336.0], [40.1, 337.0], [40.2, 339.0], [40.3, 339.0], [40.4, 341.0], [40.5, 341.0], [40.6, 341.0], [40.7, 342.0], [40.8, 343.0], [40.9, 344.0], [41.0, 345.0], [41.1, 345.0], [41.2, 346.0], [41.3, 347.0], [41.4, 347.0], [41.5, 348.0], [41.6, 348.0], [41.7, 349.0], [41.8, 350.0], [41.9, 350.0], [42.0, 351.0], [42.1, 352.0], [42.2, 353.0], [42.3, 354.0], [42.4, 354.0], [42.5, 355.0], [42.6, 356.0], [42.7, 356.0], [42.8, 357.0], [42.9, 357.0], [43.0, 359.0], [43.1, 359.0], [43.2, 360.0], [43.3, 361.0], [43.4, 361.0], [43.5, 362.0], [43.6, 363.0], [43.7, 365.0], [43.8, 365.0], [43.9, 366.0], [44.0, 366.0], [44.1, 367.0], [44.2, 368.0], [44.3, 369.0], [44.4, 370.0], [44.5, 370.0], [44.6, 372.0], [44.7, 373.0], [44.8, 374.0], [44.9, 376.0], [45.0, 377.0], [45.1, 377.0], [45.2, 378.0], [45.3, 379.0], [45.4, 379.0], [45.5, 379.0], [45.6, 381.0], [45.7, 382.0], [45.8, 384.0], [45.9, 385.0], [46.0, 385.0], [46.1, 386.0], [46.2, 389.0], [46.3, 390.0], [46.4, 391.0], [46.5, 392.0], [46.6, 392.0], [46.7, 393.0], [46.8, 394.0], [46.9, 395.0], [47.0, 396.0], [47.1, 397.0], [47.2, 399.0], [47.3, 400.0], [47.4, 402.0], [47.5, 403.0], [47.6, 404.0], [47.7, 405.0], [47.8, 406.0], [47.9, 407.0], [48.0, 407.0], [48.1, 407.0], [48.2, 408.0], [48.3, 408.0], [48.4, 409.0], [48.5, 410.0], [48.6, 410.0], [48.7, 412.0], [48.8, 412.0], [48.9, 413.0], [49.0, 414.0], [49.1, 415.0], [49.2, 416.0], [49.3, 416.0], [49.4, 417.0], [49.5, 418.0], [49.6, 419.0], [49.7, 419.0], [49.8, 421.0], [49.9, 421.0], [50.0, 422.0], [50.1, 423.0], [50.2, 425.0], [50.3, 426.0], [50.4, 427.0], [50.5, 428.0], [50.6, 429.0], [50.7, 430.0], [50.8, 430.0], [50.9, 431.0], [51.0, 431.0], [51.1, 432.0], [51.2, 433.0], [51.3, 434.0], [51.4, 435.0], [51.5, 436.0], [51.6, 437.0], [51.7, 437.0], [51.8, 438.0], [51.9, 438.0], [52.0, 439.0], [52.1, 440.0], [52.2, 440.0], [52.3, 441.0], [52.4, 442.0], [52.5, 443.0], [52.6, 444.0], [52.7, 445.0], [52.8, 446.0], [52.9, 447.0], [53.0, 448.0], [53.1, 449.0], [53.2, 449.0], [53.3, 450.0], [53.4, 450.0], [53.5, 451.0], [53.6, 452.0], [53.7, 454.0], [53.8, 454.0], [53.9, 456.0], [54.0, 457.0], [54.1, 457.0], [54.2, 458.0], [54.3, 459.0], [54.4, 460.0], [54.5, 460.0], [54.6, 461.0], [54.7, 462.0], [54.8, 463.0], [54.9, 463.0], [55.0, 464.0], [55.1, 464.0], [55.2, 466.0], [55.3, 467.0], [55.4, 468.0], [55.5, 468.0], [55.6, 469.0], [55.7, 469.0], [55.8, 470.0], [55.9, 471.0], [56.0, 472.0], [56.1, 473.0], [56.2, 475.0], [56.3, 475.0], [56.4, 476.0], [56.5, 477.0], [56.6, 479.0], [56.7, 480.0], [56.8, 480.0], [56.9, 482.0], [57.0, 482.0], [57.1, 484.0], [57.2, 485.0], [57.3, 486.0], [57.4, 487.0], [57.5, 488.0], [57.6, 489.0], [57.7, 491.0], [57.8, 492.0], [57.9, 493.0], [58.0, 494.0], [58.1, 494.0], [58.2, 496.0], [58.3, 498.0], [58.4, 500.0], [58.5, 502.0], [58.6, 505.0], [58.7, 506.0], [58.8, 507.0], [58.9, 507.0], [59.0, 508.0], [59.1, 509.0], [59.2, 510.0], [59.3, 511.0], [59.4, 512.0], [59.5, 512.0], [59.6, 513.0], [59.7, 514.0], [59.8, 514.0], [59.9, 515.0], [60.0, 516.0], [60.1, 517.0], [60.2, 517.0], [60.3, 519.0], [60.4, 520.0], [60.5, 522.0], [60.6, 523.0], [60.7, 525.0], [60.8, 527.0], [60.9, 529.0], [61.0, 530.0], [61.1, 531.0], [61.2, 533.0], [61.3, 534.0], [61.4, 536.0], [61.5, 536.0], [61.6, 537.0], [61.7, 538.0], [61.8, 538.0], [61.9, 539.0], [62.0, 540.0], [62.1, 541.0], [62.2, 542.0], [62.3, 542.0], [62.4, 544.0], [62.5, 545.0], [62.6, 547.0], [62.7, 549.0], [62.8, 551.0], [62.9, 552.0], [63.0, 554.0], [63.1, 555.0], [63.2, 556.0], [63.3, 557.0], [63.4, 559.0], [63.5, 560.0], [63.6, 561.0], [63.7, 564.0], [63.8, 566.0], [63.9, 566.0], [64.0, 567.0], [64.1, 568.0], [64.2, 569.0], [64.3, 570.0], [64.4, 571.0], [64.5, 572.0], [64.6, 573.0], [64.7, 573.0], [64.8, 574.0], [64.9, 575.0], [65.0, 576.0], [65.1, 577.0], [65.2, 578.0], [65.3, 578.0], [65.4, 579.0], [65.5, 581.0], [65.6, 582.0], [65.7, 584.0], [65.8, 585.0], [65.9, 586.0], [66.0, 588.0], [66.1, 588.0], [66.2, 590.0], [66.3, 593.0], [66.4, 593.0], [66.5, 596.0], [66.6, 600.0], [66.7, 601.0], [66.8, 602.0], [66.9, 604.0], [67.0, 605.0], [67.1, 607.0], [67.2, 608.0], [67.3, 608.0], [67.4, 609.0], [67.5, 610.0], [67.6, 612.0], [67.7, 612.0], [67.8, 614.0], [67.9, 615.0], [68.0, 615.0], [68.1, 616.0], [68.2, 618.0], [68.3, 619.0], [68.4, 621.0], [68.5, 623.0], [68.6, 624.0], [68.7, 625.0], [68.8, 626.0], [68.9, 627.0], [69.0, 629.0], [69.1, 630.0], [69.2, 631.0], [69.3, 631.0], [69.4, 632.0], [69.5, 634.0], [69.6, 635.0], [69.7, 636.0], [69.8, 638.0], [69.9, 638.0], [70.0, 640.0], [70.1, 641.0], [70.2, 642.0], [70.3, 643.0], [70.4, 646.0], [70.5, 648.0], [70.6, 653.0], [70.7, 653.0], [70.8, 655.0], [70.9, 656.0], [71.0, 656.0], [71.1, 657.0], [71.2, 658.0], [71.3, 659.0], [71.4, 660.0], [71.5, 660.0], [71.6, 665.0], [71.7, 666.0], [71.8, 669.0], [71.9, 671.0], [72.0, 672.0], [72.1, 673.0], [72.2, 676.0], [72.3, 679.0], [72.4, 681.0], [72.5, 685.0], [72.6, 686.0], [72.7, 692.0], [72.8, 695.0], [72.9, 697.0], [73.0, 698.0], [73.1, 701.0], [73.2, 705.0], [73.3, 706.0], [73.4, 711.0], [73.5, 715.0], [73.6, 717.0], [73.7, 720.0], [73.8, 727.0], [73.9, 730.0], [74.0, 732.0], [74.1, 734.0], [74.2, 737.0], [74.3, 740.0], [74.4, 742.0], [74.5, 751.0], [74.6, 753.0], [74.7, 755.0], [74.8, 761.0], [74.9, 762.0], [75.0, 767.0], [75.1, 767.0], [75.2, 775.0], [75.3, 778.0], [75.4, 780.0], [75.5, 783.0], [75.6, 784.0], [75.7, 787.0], [75.8, 789.0], [75.9, 795.0], [76.0, 796.0], [76.1, 805.0], [76.2, 808.0], [76.3, 814.0], [76.4, 817.0], [76.5, 820.0], [76.6, 823.0], [76.7, 825.0], [76.8, 829.0], [76.9, 832.0], [77.0, 835.0], [77.1, 840.0], [77.2, 842.0], [77.3, 848.0], [77.4, 853.0], [77.5, 857.0], [77.6, 863.0], [77.7, 870.0], [77.8, 874.0], [77.9, 878.0], [78.0, 878.0], [78.1, 882.0], [78.2, 885.0], [78.3, 886.0], [78.4, 889.0], [78.5, 891.0], [78.6, 894.0], [78.7, 899.0], [78.8, 906.0], [78.9, 915.0], [79.0, 917.0], [79.1, 918.0], [79.2, 920.0], [79.3, 925.0], [79.4, 928.0], [79.5, 931.0], [79.6, 932.0], [79.7, 936.0], [79.8, 938.0], [79.9, 940.0], [80.0, 945.0], [80.1, 948.0], [80.2, 951.0], [80.3, 952.0], [80.4, 955.0], [80.5, 957.0], [80.6, 962.0], [80.7, 968.0], [80.8, 972.0], [80.9, 976.0], [81.0, 979.0], [81.1, 987.0], [81.2, 994.0], [81.3, 997.0], [81.4, 1005.0], [81.5, 1008.0], [81.6, 1012.0], [81.7, 1015.0], [81.8, 1018.0], [81.9, 1023.0], [82.0, 1028.0], [82.1, 1035.0], [82.2, 1038.0], [82.3, 1045.0], [82.4, 1051.0], [82.5, 1057.0], [82.6, 1060.0], [82.7, 1064.0], [82.8, 1067.0], [82.9, 1072.0], [83.0, 1078.0], [83.1, 1081.0], [83.2, 1085.0], [83.3, 1089.0], [83.4, 1092.0], [83.5, 1098.0], [83.6, 1104.0], [83.7, 1109.0], [83.8, 1118.0], [83.9, 1122.0], [84.0, 1127.0], [84.1, 1137.0], [84.2, 1142.0], [84.3, 1152.0], [84.4, 1158.0], [84.5, 1161.0], [84.6, 1164.0], [84.7, 1173.0], [84.8, 1177.0], [84.9, 1180.0], [85.0, 1182.0], [85.1, 1186.0], [85.2, 1197.0], [85.3, 1202.0], [85.4, 1210.0], [85.5, 1214.0], [85.6, 1218.0], [85.7, 1222.0], [85.8, 1226.0], [85.9, 1229.0], [86.0, 1231.0], [86.1, 1232.0], [86.2, 1234.0], [86.3, 1241.0], [86.4, 1244.0], [86.5, 1245.0], [86.6, 1254.0], [86.7, 1260.0], [86.8, 1264.0], [86.9, 1268.0], [87.0, 1280.0], [87.1, 1291.0], [87.2, 1293.0], [87.3, 1308.0], [87.4, 1316.0], [87.5, 1322.0], [87.6, 1334.0], [87.7, 1344.0], [87.8, 1350.0], [87.9, 1353.0], [88.0, 1359.0], [88.1, 1362.0], [88.2, 1369.0], [88.3, 1381.0], [88.4, 1382.0], [88.5, 1387.0], [88.6, 1391.0], [88.7, 1392.0], [88.8, 1396.0], [88.9, 1403.0], [89.0, 1404.0], [89.1, 1413.0], [89.2, 1418.0], [89.3, 1424.0], [89.4, 1431.0], [89.5, 1443.0], [89.6, 1449.0], [89.7, 1462.0], [89.8, 1476.0], [89.9, 1488.0], [90.0, 1502.0], [90.1, 1511.0], [90.2, 1516.0], [90.3, 1523.0], [90.4, 1533.0], [90.5, 1538.0], [90.6, 1549.0], [90.7, 1565.0], [90.8, 1574.0], [90.9, 1586.0], [91.0, 1595.0], [91.1, 1606.0], [91.2, 1613.0], [91.3, 1630.0], [91.4, 1652.0], [91.5, 1656.0], [91.6, 1665.0], [91.7, 1677.0], [91.8, 1690.0], [91.9, 1698.0], [92.0, 1729.0], [92.1, 1734.0], [92.2, 1739.0], [92.3, 1751.0], [92.4, 1764.0], [92.5, 1768.0], [92.6, 1780.0], [92.7, 1796.0], [92.8, 1812.0], [92.9, 1835.0], [93.0, 1842.0], [93.1, 1847.0], [93.2, 1864.0], [93.3, 1882.0], [93.4, 1914.0], [93.5, 1961.0], [93.6, 1988.0], [93.7, 1996.0], [93.8, 2006.0], [93.9, 2032.0], [94.0, 2047.0], [94.1, 2092.0], [94.2, 2118.0], [94.3, 2140.0], [94.4, 2153.0], [94.5, 2179.0], [94.6, 2204.0], [94.7, 2235.0], [94.8, 2284.0], [94.9, 2310.0], [95.0, 2332.0], [95.1, 2350.0], [95.2, 2376.0], [95.3, 2407.0], [95.4, 2439.0], [95.5, 2482.0], [95.6, 2550.0], [95.7, 2561.0], [95.8, 2580.0], [95.9, 2609.0], [96.0, 2616.0], [96.1, 2625.0], [96.2, 2637.0], [96.3, 2654.0], [96.4, 2658.0], [96.5, 2680.0], [96.6, 2684.0], [96.7, 2686.0], [96.8, 2709.0], [96.9, 2767.0], [97.0, 2792.0], [97.1, 2828.0], [97.2, 2909.0], [97.3, 2938.0], [97.4, 2965.0], [97.5, 3044.0], [97.6, 3107.0], [97.7, 3257.0], [97.8, 3269.0], [97.9, 3373.0], [98.0, 3427.0], [98.1, 3594.0], [98.2, 3698.0], [98.3, 3917.0], [98.4, 4103.0], [98.5, 4566.0], [98.6, 4593.0], [98.7, 4948.0], [98.8, 5045.0], [98.9, 5276.0], [99.0, 5317.0], [99.1, 5330.0], [99.2, 5381.0], [99.3, 5591.0], [99.4, 5653.0], [99.5, 5733.0], [99.6, 7248.0], [99.7, 7825.0], [99.8, 9575.0], [99.9, 13335.0], [100.0, 58711.0]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[0.0, 179.0], [0.1, 206.0], [0.2, 219.0], [0.3, 231.0], [0.4, 234.0], [0.5, 248.0], [0.6, 261.0], [0.7, 270.0], [0.8, 273.0], [0.9, 296.0], [1.0, 302.0], [1.1, 317.0], [1.2, 323.0], [1.3, 333.0], [1.4, 344.0], [1.5, 351.0], [1.6, 360.0], [1.7, 365.0], [1.8, 379.0], [1.9, 381.0], [2.0, 392.0], [2.1, 405.0], [2.2, 412.0], [2.3, 413.0], [2.4, 423.0], [2.5, 426.0], [2.6, 435.0], [2.7, 437.0], [2.8, 440.0], [2.9, 446.0], [3.0, 457.0], [3.1, 459.0], [3.2, 461.0], [3.3, 466.0], [3.4, 469.0], [3.5, 476.0], [3.6, 477.0], [3.7, 479.0], [3.8, 480.0], [3.9, 484.0], [4.0, 485.0], [4.1, 487.0], [4.2, 489.0], [4.3, 490.0], [4.4, 491.0], [4.5, 494.0], [4.6, 498.0], [4.7, 501.0], [4.8, 506.0], [4.9, 507.0], [5.0, 510.0], [5.1, 512.0], [5.2, 513.0], [5.3, 514.0], [5.4, 516.0], [5.5, 524.0], [5.6, 526.0], [5.7, 527.0], [5.8, 529.0], [5.9, 534.0], [6.0, 537.0], [6.1, 537.0], [6.2, 539.0], [6.3, 543.0], [6.4, 546.0], [6.5, 547.0], [6.6, 552.0], [6.7, 555.0], [6.8, 556.0], [6.9, 562.0], [7.0, 564.0], [7.1, 567.0], [7.2, 569.0], [7.3, 573.0], [7.4, 575.0], [7.5, 579.0], [7.6, 583.0], [7.7, 586.0], [7.8, 587.0], [7.9, 588.0], [8.0, 590.0], [8.1, 591.0], [8.2, 592.0], [8.3, 599.0], [8.4, 600.0], [8.5, 602.0], [8.6, 607.0], [8.7, 607.0], [8.8, 610.0], [8.9, 613.0], [9.0, 617.0], [9.1, 619.0], [9.2, 622.0], [9.3, 623.0], [9.4, 624.0], [9.5, 626.0], [9.6, 627.0], [9.7, 628.0], [9.8, 630.0], [9.9, 630.0], [10.0, 631.0], [10.1, 632.0], [10.2, 633.0], [10.3, 636.0], [10.4, 638.0], [10.5, 639.0], [10.6, 640.0], [10.7, 643.0], [10.8, 643.0], [10.9, 645.0], [11.0, 645.0], [11.1, 647.0], [11.2, 649.0], [11.3, 653.0], [11.4, 654.0], [11.5, 656.0], [11.6, 660.0], [11.7, 662.0], [11.8, 664.0], [11.9, 667.0], [12.0, 668.0], [12.1, 670.0], [12.2, 674.0], [12.3, 676.0], [12.4, 677.0], [12.5, 679.0], [12.6, 681.0], [12.7, 683.0], [12.8, 684.0], [12.9, 685.0], [13.0, 687.0], [13.1, 688.0], [13.2, 691.0], [13.3, 694.0], [13.4, 696.0], [13.5, 696.0], [13.6, 697.0], [13.7, 698.0], [13.8, 701.0], [13.9, 703.0], [14.0, 704.0], [14.1, 705.0], [14.2, 707.0], [14.3, 709.0], [14.4, 712.0], [14.5, 713.0], [14.6, 713.0], [14.7, 715.0], [14.8, 715.0], [14.9, 717.0], [15.0, 718.0], [15.1, 719.0], [15.2, 721.0], [15.3, 722.0], [15.4, 725.0], [15.5, 727.0], [15.6, 730.0], [15.7, 731.0], [15.8, 734.0], [15.9, 735.0], [16.0, 738.0], [16.1, 740.0], [16.2, 743.0], [16.3, 744.0], [16.4, 745.0], [16.5, 747.0], [16.6, 748.0], [16.7, 749.0], [16.8, 753.0], [16.9, 757.0], [17.0, 758.0], [17.1, 759.0], [17.2, 762.0], [17.3, 765.0], [17.4, 766.0], [17.5, 769.0], [17.6, 770.0], [17.7, 771.0], [17.8, 772.0], [17.9, 773.0], [18.0, 774.0], [18.1, 775.0], [18.2, 776.0], [18.3, 778.0], [18.4, 781.0], [18.5, 783.0], [18.6, 785.0], [18.7, 786.0], [18.8, 791.0], [18.9, 793.0], [19.0, 795.0], [19.1, 796.0], [19.2, 798.0], [19.3, 799.0], [19.4, 800.0], [19.5, 801.0], [19.6, 802.0], [19.7, 806.0], [19.8, 808.0], [19.9, 812.0], [20.0, 813.0], [20.1, 814.0], [20.2, 817.0], [20.3, 818.0], [20.4, 821.0], [20.5, 823.0], [20.6, 825.0], [20.7, 826.0], [20.8, 827.0], [20.9, 828.0], [21.0, 830.0], [21.1, 833.0], [21.2, 834.0], [21.3, 836.0], [21.4, 838.0], [21.5, 839.0], [21.6, 840.0], [21.7, 841.0], [21.8, 843.0], [21.9, 843.0], [22.0, 844.0], [22.1, 846.0], [22.2, 847.0], [22.3, 848.0], [22.4, 849.0], [22.5, 851.0], [22.6, 851.0], [22.7, 852.0], [22.8, 853.0], [22.9, 853.0], [23.0, 856.0], [23.1, 858.0], [23.2, 859.0], [23.3, 860.0], [23.4, 861.0], [23.5, 863.0], [23.6, 865.0], [23.7, 866.0], [23.8, 868.0], [23.9, 868.0], [24.0, 869.0], [24.1, 869.0], [24.2, 871.0], [24.3, 871.0], [24.4, 873.0], [24.5, 873.0], [24.6, 875.0], [24.7, 876.0], [24.8, 879.0], [24.9, 881.0], [25.0, 882.0], [25.1, 884.0], [25.2, 884.0], [25.3, 885.0], [25.4, 886.0], [25.5, 887.0], [25.6, 888.0], [25.7, 890.0], [25.8, 893.0], [25.9, 894.0], [26.0, 896.0], [26.1, 898.0], [26.2, 899.0], [26.3, 900.0], [26.4, 901.0], [26.5, 902.0], [26.6, 904.0], [26.7, 908.0], [26.8, 909.0], [26.9, 910.0], [27.0, 912.0], [27.1, 914.0], [27.2, 915.0], [27.3, 915.0], [27.4, 918.0], [27.5, 921.0], [27.6, 923.0], [27.7, 926.0], [27.8, 927.0], [27.9, 928.0], [28.0, 929.0], [28.1, 933.0], [28.2, 935.0], [28.3, 935.0], [28.4, 937.0], [28.5, 938.0], [28.6, 941.0], [28.7, 946.0], [28.8, 947.0], [28.9, 951.0], [29.0, 956.0], [29.1, 957.0], [29.2, 958.0], [29.3, 962.0], [29.4, 964.0], [29.5, 965.0], [29.6, 967.0], [29.7, 969.0], [29.8, 970.0], [29.9, 973.0], [30.0, 973.0], [30.1, 975.0], [30.2, 976.0], [30.3, 978.0], [30.4, 979.0], [30.5, 979.0], [30.6, 980.0], [30.7, 983.0], [30.8, 985.0], [30.9, 990.0], [31.0, 991.0], [31.1, 992.0], [31.2, 993.0], [31.3, 995.0], [31.4, 997.0], [31.5, 1000.0], [31.6, 1001.0], [31.7, 1003.0], [31.8, 1006.0], [31.9, 1009.0], [32.0, 1010.0], [32.1, 1011.0], [32.2, 1014.0], [32.3, 1017.0], [32.4, 1018.0], [32.5, 1020.0], [32.6, 1022.0], [32.7, 1025.0], [32.8, 1028.0], [32.9, 1029.0], [33.0, 1030.0], [33.1, 1031.0], [33.2, 1033.0], [33.3, 1035.0], [33.4, 1036.0], [33.5, 1037.0], [33.6, 1039.0], [33.7, 1042.0], [33.8, 1044.0], [33.9, 1045.0], [34.0, 1046.0], [34.1, 1047.0], [34.2, 1048.0], [34.3, 1051.0], [34.4, 1051.0], [34.5, 1054.0], [34.6, 1056.0], [34.7, 1058.0], [34.8, 1059.0], [34.9, 1060.0], [35.0, 1062.0], [35.1, 1062.0], [35.2, 1064.0], [35.3, 1066.0], [35.4, 1070.0], [35.5, 1074.0], [35.6, 1076.0], [35.7, 1077.0], [35.8, 1079.0], [35.9, 1082.0], [36.0, 1085.0], [36.1, 1088.0], [36.2, 1089.0], [36.3, 1090.0], [36.4, 1093.0], [36.5, 1095.0], [36.6, 1099.0], [36.7, 1100.0], [36.8, 1101.0], [36.9, 1103.0], [37.0, 1104.0], [37.1, 1107.0], [37.2, 1109.0], [37.3, 1113.0], [37.4, 1114.0], [37.5, 1116.0], [37.6, 1118.0], [37.7, 1121.0], [37.8, 1124.0], [37.9, 1126.0], [38.0, 1128.0], [38.1, 1130.0], [38.2, 1131.0], [38.3, 1134.0], [38.4, 1136.0], [38.5, 1136.0], [38.6, 1139.0], [38.7, 1140.0], [38.8, 1144.0], [38.9, 1146.0], [39.0, 1149.0], [39.1, 1150.0], [39.2, 1153.0], [39.3, 1155.0], [39.4, 1156.0], [39.5, 1159.0], [39.6, 1161.0], [39.7, 1162.0], [39.8, 1164.0], [39.9, 1165.0], [40.0, 1167.0], [40.1, 1171.0], [40.2, 1174.0], [40.3, 1178.0], [40.4, 1179.0], [40.5, 1180.0], [40.6, 1182.0], [40.7, 1185.0], [40.8, 1186.0], [40.9, 1189.0], [41.0, 1190.0], [41.1, 1193.0], [41.2, 1195.0], [41.3, 1199.0], [41.4, 1203.0], [41.5, 1205.0], [41.6, 1206.0], [41.7, 1207.0], [41.8, 1210.0], [41.9, 1212.0], [42.0, 1217.0], [42.1, 1218.0], [42.2, 1220.0], [42.3, 1226.0], [42.4, 1227.0], [42.5, 1228.0], [42.6, 1230.0], [42.7, 1231.0], [42.8, 1235.0], [42.9, 1236.0], [43.0, 1238.0], [43.1, 1239.0], [43.2, 1242.0], [43.3, 1245.0], [43.4, 1246.0], [43.5, 1248.0], [43.6, 1249.0], [43.7, 1250.0], [43.8, 1251.0], [43.9, 1254.0], [44.0, 1258.0], [44.1, 1261.0], [44.2, 1265.0], [44.3, 1269.0], [44.4, 1271.0], [44.5, 1273.0], [44.6, 1274.0], [44.7, 1278.0], [44.8, 1281.0], [44.9, 1282.0], [45.0, 1288.0], [45.1, 1290.0], [45.2, 1292.0], [45.3, 1293.0], [45.4, 1299.0], [45.5, 1301.0], [45.6, 1302.0], [45.7, 1302.0], [45.8, 1306.0], [45.9, 1307.0], [46.0, 1310.0], [46.1, 1311.0], [46.2, 1315.0], [46.3, 1318.0], [46.4, 1321.0], [46.5, 1323.0], [46.6, 1326.0], [46.7, 1327.0], [46.8, 1328.0], [46.9, 1329.0], [47.0, 1333.0], [47.1, 1337.0], [47.2, 1338.0], [47.3, 1340.0], [47.4, 1341.0], [47.5, 1344.0], [47.6, 1346.0], [47.7, 1348.0], [47.8, 1353.0], [47.9, 1358.0], [48.0, 1359.0], [48.1, 1360.0], [48.2, 1361.0], [48.3, 1363.0], [48.4, 1366.0], [48.5, 1371.0], [48.6, 1373.0], [48.7, 1375.0], [48.8, 1380.0], [48.9, 1384.0], [49.0, 1386.0], [49.1, 1390.0], [49.2, 1391.0], [49.3, 1396.0], [49.4, 1402.0], [49.5, 1407.0], [49.6, 1408.0], [49.7, 1410.0], [49.8, 1413.0], [49.9, 1415.0], [50.0, 1417.0], [50.1, 1420.0], [50.2, 1422.0], [50.3, 1423.0], [50.4, 1426.0], [50.5, 1426.0], [50.6, 1430.0], [50.7, 1434.0], [50.8, 1435.0], [50.9, 1437.0], [51.0, 1437.0], [51.1, 1440.0], [51.2, 1441.0], [51.3, 1444.0], [51.4, 1448.0], [51.5, 1449.0], [51.6, 1452.0], [51.7, 1452.0], [51.8, 1455.0], [51.9, 1457.0], [52.0, 1459.0], [52.1, 1461.0], [52.2, 1464.0], [52.3, 1468.0], [52.4, 1472.0], [52.5, 1474.0], [52.6, 1478.0], [52.7, 1483.0], [52.8, 1484.0], [52.9, 1486.0], [53.0, 1489.0], [53.1, 1495.0], [53.2, 1497.0], [53.3, 1499.0], [53.4, 1501.0], [53.5, 1502.0], [53.6, 1506.0], [53.7, 1510.0], [53.8, 1512.0], [53.9, 1516.0], [54.0, 1518.0], [54.1, 1523.0], [54.2, 1527.0], [54.3, 1528.0], [54.4, 1532.0], [54.5, 1536.0], [54.6, 1541.0], [54.7, 1543.0], [54.8, 1544.0], [54.9, 1547.0], [55.0, 1549.0], [55.1, 1552.0], [55.2, 1554.0], [55.3, 1559.0], [55.4, 1563.0], [55.5, 1566.0], [55.6, 1567.0], [55.7, 1571.0], [55.8, 1575.0], [55.9, 1577.0], [56.0, 1584.0], [56.1, 1588.0], [56.2, 1593.0], [56.3, 1594.0], [56.4, 1600.0], [56.5, 1604.0], [56.6, 1606.0], [56.7, 1609.0], [56.8, 1611.0], [56.9, 1617.0], [57.0, 1620.0], [57.1, 1629.0], [57.2, 1634.0], [57.3, 1637.0], [57.4, 1639.0], [57.5, 1648.0], [57.6, 1652.0], [57.7, 1656.0], [57.8, 1658.0], [57.9, 1662.0], [58.0, 1665.0], [58.1, 1670.0], [58.2, 1675.0], [58.3, 1681.0], [58.4, 1685.0], [58.5, 1687.0], [58.6, 1689.0], [58.7, 1700.0], [58.8, 1702.0], [58.9, 1705.0], [59.0, 1711.0], [59.1, 1714.0], [59.2, 1717.0], [59.3, 1718.0], [59.4, 1729.0], [59.5, 1732.0], [59.6, 1737.0], [59.7, 1740.0], [59.8, 1744.0], [59.9, 1748.0], [60.0, 1755.0], [60.1, 1759.0], [60.2, 1762.0], [60.3, 1765.0], [60.4, 1770.0], [60.5, 1773.0], [60.6, 1775.0], [60.7, 1777.0], [60.8, 1783.0], [60.9, 1787.0], [61.0, 1796.0], [61.1, 1800.0], [61.2, 1804.0], [61.3, 1806.0], [61.4, 1813.0], [61.5, 1819.0], [61.6, 1823.0], [61.7, 1826.0], [61.8, 1837.0], [61.9, 1841.0], [62.0, 1843.0], [62.1, 1846.0], [62.2, 1852.0], [62.3, 1853.0], [62.4, 1857.0], [62.5, 1861.0], [62.6, 1866.0], [62.7, 1871.0], [62.8, 1874.0], [62.9, 1876.0], [63.0, 1883.0], [63.1, 1891.0], [63.2, 1897.0], [63.3, 1906.0], [63.4, 1908.0], [63.5, 1916.0], [63.6, 1919.0], [63.7, 1925.0], [63.8, 1931.0], [63.9, 1939.0], [64.0, 1949.0], [64.1, 1958.0], [64.2, 1965.0], [64.3, 1970.0], [64.4, 1976.0], [64.5, 1984.0], [64.6, 1987.0], [64.7, 1991.0], [64.8, 1999.0], [64.9, 2005.0], [65.0, 2009.0], [65.1, 2016.0], [65.2, 2023.0], [65.3, 2026.0], [65.4, 2033.0], [65.5, 2034.0], [65.6, 2040.0], [65.7, 2043.0], [65.8, 2045.0], [65.9, 2048.0], [66.0, 2056.0], [66.1, 2059.0], [66.2, 2065.0], [66.3, 2068.0], [66.4, 2077.0], [66.5, 2083.0], [66.6, 2089.0], [66.7, 2095.0], [66.8, 2098.0], [66.9, 2104.0], [67.0, 2115.0], [67.1, 2121.0], [67.2, 2123.0], [67.3, 2127.0], [67.4, 2132.0], [67.5, 2137.0], [67.6, 2139.0], [67.7, 2141.0], [67.8, 2145.0], [67.9, 2154.0], [68.0, 2159.0], [68.1, 2165.0], [68.2, 2169.0], [68.3, 2179.0], [68.4, 2181.0], [68.5, 2187.0], [68.6, 2198.0], [68.7, 2200.0], [68.8, 2203.0], [68.9, 2214.0], [69.0, 2218.0], [69.1, 2225.0], [69.2, 2234.0], [69.3, 2241.0], [69.4, 2246.0], [69.5, 2250.0], [69.6, 2259.0], [69.7, 2267.0], [69.8, 2269.0], [69.9, 2277.0], [70.0, 2284.0], [70.1, 2294.0], [70.2, 2297.0], [70.3, 2303.0], [70.4, 2312.0], [70.5, 2318.0], [70.6, 2323.0], [70.7, 2326.0], [70.8, 2343.0], [70.9, 2345.0], [71.0, 2346.0], [71.1, 2355.0], [71.2, 2360.0], [71.3, 2365.0], [71.4, 2368.0], [71.5, 2374.0], [71.6, 2380.0], [71.7, 2383.0], [71.8, 2384.0], [71.9, 2392.0], [72.0, 2395.0], [72.1, 2399.0], [72.2, 2402.0], [72.3, 2409.0], [72.4, 2411.0], [72.5, 2419.0], [72.6, 2427.0], [72.7, 2445.0], [72.8, 2454.0], [72.9, 2457.0], [73.0, 2465.0], [73.1, 2471.0], [73.2, 2477.0], [73.3, 2478.0], [73.4, 2487.0], [73.5, 2493.0], [73.6, 2497.0], [73.7, 2506.0], [73.8, 2510.0], [73.9, 2530.0], [74.0, 2533.0], [74.1, 2542.0], [74.2, 2557.0], [74.3, 2565.0], [74.4, 2576.0], [74.5, 2582.0], [74.6, 2583.0], [74.7, 2597.0], [74.8, 2599.0], [74.9, 2611.0], [75.0, 2623.0], [75.1, 2632.0], [75.2, 2641.0], [75.3, 2647.0], [75.4, 2651.0], [75.5, 2655.0], [75.6, 2661.0], [75.7, 2673.0], [75.8, 2676.0], [75.9, 2683.0], [76.0, 2697.0], [76.1, 2705.0], [76.2, 2710.0], [76.3, 2717.0], [76.4, 2723.0], [76.5, 2734.0], [76.6, 2738.0], [76.7, 2747.0], [76.8, 2754.0], [76.9, 2768.0], [77.0, 2775.0], [77.1, 2780.0], [77.2, 2790.0], [77.3, 2793.0], [77.4, 2812.0], [77.5, 2818.0], [77.6, 2827.0], [77.7, 2836.0], [77.8, 2848.0], [77.9, 2857.0], [78.0, 2866.0], [78.1, 2871.0], [78.2, 2881.0], [78.3, 2893.0], [78.4, 2905.0], [78.5, 2920.0], [78.6, 2927.0], [78.7, 2936.0], [78.8, 2945.0], [78.9, 2951.0], [79.0, 2966.0], [79.1, 2972.0], [79.2, 2985.0], [79.3, 2988.0], [79.4, 2995.0], [79.5, 2997.0], [79.6, 3007.0], [79.7, 3017.0], [79.8, 3024.0], [79.9, 3035.0], [80.0, 3042.0], [80.1, 3048.0], [80.2, 3056.0], [80.3, 3062.0], [80.4, 3067.0], [80.5, 3084.0], [80.6, 3095.0], [80.7, 3100.0], [80.8, 3106.0], [80.9, 3116.0], [81.0, 3126.0], [81.1, 3134.0], [81.2, 3141.0], [81.3, 3151.0], [81.4, 3159.0], [81.5, 3167.0], [81.6, 3175.0], [81.7, 3179.0], [81.8, 3192.0], [81.9, 3199.0], [82.0, 3213.0], [82.1, 3221.0], [82.2, 3235.0], [82.3, 3257.0], [82.4, 3284.0], [82.5, 3294.0], [82.6, 3300.0], [82.7, 3309.0], [82.8, 3319.0], [82.9, 3336.0], [83.0, 3349.0], [83.1, 3352.0], [83.2, 3364.0], [83.3, 3382.0], [83.4, 3394.0], [83.5, 3400.0], [83.6, 3403.0], [83.7, 3415.0], [83.8, 3425.0], [83.9, 3447.0], [84.0, 3454.0], [84.1, 3459.0], [84.2, 3462.0], [84.3, 3481.0], [84.4, 3497.0], [84.5, 3500.0], [84.6, 3508.0], [84.7, 3511.0], [84.8, 3537.0], [84.9, 3566.0], [85.0, 3579.0], [85.1, 3594.0], [85.2, 3598.0], [85.3, 3609.0], [85.4, 3627.0], [85.5, 3655.0], [85.6, 3664.0], [85.7, 3675.0], [85.8, 3686.0], [85.9, 3700.0], [86.0, 3715.0], [86.1, 3734.0], [86.2, 3742.0], [86.3, 3762.0], [86.4, 3792.0], [86.5, 3793.0], [86.6, 3838.0], [86.7, 3850.0], [86.8, 3883.0], [86.9, 3895.0], [87.0, 3915.0], [87.1, 3923.0], [87.2, 3933.0], [87.3, 3944.0], [87.4, 3955.0], [87.5, 3963.0], [87.6, 3982.0], [87.7, 3996.0], [87.8, 4007.0], [87.9, 4023.0], [88.0, 4040.0], [88.1, 4072.0], [88.2, 4108.0], [88.3, 4148.0], [88.4, 4160.0], [88.5, 4181.0], [88.6, 4223.0], [88.7, 4228.0], [88.8, 4263.0], [88.9, 4276.0], [89.0, 4316.0], [89.1, 4327.0], [89.2, 4343.0], [89.3, 4349.0], [89.4, 4360.0], [89.5, 4378.0], [89.6, 4397.0], [89.7, 4420.0], [89.8, 4462.0], [89.9, 4493.0], [90.0, 4501.0], [90.1, 4530.0], [90.2, 4566.0], [90.3, 4601.0], [90.4, 4634.0], [90.5, 4654.0], [90.6, 4672.0], [90.7, 4735.0], [90.8, 4759.0], [90.9, 4796.0], [91.0, 4803.0], [91.1, 4894.0], [91.2, 4936.0], [91.3, 5014.0], [91.4, 5036.0], [91.5, 5078.0], [91.6, 5095.0], [91.7, 5107.0], [91.8, 5142.0], [91.9, 5194.0], [92.0, 5240.0], [92.1, 5247.0], [92.2, 5260.0], [92.3, 5296.0], [92.4, 5346.0], [92.5, 5367.0], [92.6, 5392.0], [92.7, 5490.0], [92.8, 5527.0], [92.9, 5551.0], [93.0, 5602.0], [93.1, 5628.0], [93.2, 5674.0], [93.3, 5684.0], [93.4, 5720.0], [93.5, 5779.0], [93.6, 5804.0], [93.7, 5886.0], [93.8, 5892.0], [93.9, 6043.0], [94.0, 6071.0], [94.1, 6097.0], [94.2, 6124.0], [94.3, 6140.0], [94.4, 6177.0], [94.5, 6216.0], [94.6, 6248.0], [94.7, 6336.0], [94.8, 6373.0], [94.9, 6428.0], [95.0, 6463.0], [95.1, 6489.0], [95.2, 6542.0], [95.3, 6605.0], [95.4, 6627.0], [95.5, 6679.0], [95.6, 6712.0], [95.7, 6749.0], [95.8, 6859.0], [95.9, 6959.0], [96.0, 6968.0], [96.1, 6998.0], [96.2, 7056.0], [96.3, 7115.0], [96.4, 7159.0], [96.5, 7322.0], [96.6, 7385.0], [96.7, 7500.0], [96.8, 7580.0], [96.9, 7606.0], [97.0, 7717.0], [97.1, 7911.0], [97.2, 7937.0], [97.3, 8169.0], [97.4, 8256.0], [97.5, 8517.0], [97.6, 8811.0], [97.7, 9115.0], [97.8, 9330.0], [97.9, 9566.0], [98.0, 9727.0], [98.1, 9871.0], [98.2, 10097.0], [98.3, 10218.0], [98.4, 10540.0], [98.5, 10569.0], [98.6, 10942.0], [98.7, 11405.0], [98.8, 11650.0], [98.9, 12044.0], [99.0, 12535.0], [99.1, 13723.0], [99.2, 14757.0], [99.3, 15620.0], [99.4, 17947.0], [99.5, 18463.0], [99.6, 20006.0], [99.7, 27662.0], [99.8, 34725.0], [99.9, 60121.0]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[0.0, 64.0], [0.1, 67.0], [0.2, 68.0], [0.3, 70.0], [0.4, 71.0], [0.5, 73.0], [0.6, 75.0], [0.7, 76.0], [0.8, 77.0], [0.9, 78.0], [1.0, 80.0], [1.1, 80.0], [1.2, 80.0], [1.3, 81.0], [1.4, 82.0], [1.5, 84.0], [1.6, 85.0], [1.7, 87.0], [1.8, 87.0], [1.9, 88.0], [2.0, 91.0], [2.1, 94.0], [2.2, 95.0], [2.3, 97.0], [2.4, 97.0], [2.5, 101.0], [2.6, 102.0], [2.7, 103.0], [2.8, 106.0], [2.9, 110.0], [3.0, 114.0], [3.1, 115.0], [3.2, 118.0], [3.3, 120.0], [3.4, 121.0], [3.5, 122.0], [3.6, 124.0], [3.7, 125.0], [3.8, 126.0], [3.9, 127.0], [4.0, 128.0], [4.1, 129.0], [4.2, 130.0], [4.3, 132.0], [4.4, 132.0], [4.5, 134.0], [4.6, 135.0], [4.7, 136.0], [4.8, 137.0], [4.9, 138.0], [5.0, 139.0], [5.1, 140.0], [5.2, 142.0], [5.3, 143.0], [5.4, 144.0], [5.5, 145.0], [5.6, 146.0], [5.7, 149.0], [5.8, 149.0], [5.9, 151.0], [6.0, 152.0], [6.1, 153.0], [6.2, 154.0], [6.3, 155.0], [6.4, 158.0], [6.5, 159.0], [6.6, 160.0], [6.7, 162.0], [6.8, 163.0], [6.9, 164.0], [7.0, 165.0], [7.1, 166.0], [7.2, 167.0], [7.3, 168.0], [7.4, 169.0], [7.5, 170.0], [7.6, 171.0], [7.7, 171.0], [7.8, 173.0], [7.9, 174.0], [8.0, 176.0], [8.1, 179.0], [8.2, 179.0], [8.3, 181.0], [8.4, 182.0], [8.5, 183.0], [8.6, 184.0], [8.7, 184.0], [8.8, 187.0], [8.9, 187.0], [9.0, 188.0], [9.1, 190.0], [9.2, 190.0], [9.3, 192.0], [9.4, 193.0], [9.5, 194.0], [9.6, 194.0], [9.7, 196.0], [9.8, 197.0], [9.9, 197.0], [10.0, 198.0], [10.1, 200.0], [10.2, 202.0], [10.3, 203.0], [10.4, 204.0], [10.5, 206.0], [10.6, 206.0], [10.7, 207.0], [10.8, 208.0], [10.9, 209.0], [11.0, 210.0], [11.1, 211.0], [11.2, 212.0], [11.3, 213.0], [11.4, 213.0], [11.5, 215.0], [11.6, 216.0], [11.7, 216.0], [11.8, 217.0], [11.9, 218.0], [12.0, 220.0], [12.1, 221.0], [12.2, 222.0], [12.3, 224.0], [12.4, 225.0], [12.5, 227.0], [12.6, 228.0], [12.7, 229.0], [12.8, 230.0], [12.9, 231.0], [13.0, 232.0], [13.1, 234.0], [13.2, 235.0], [13.3, 236.0], [13.4, 237.0], [13.5, 239.0], [13.6, 241.0], [13.7, 242.0], [13.8, 243.0], [13.9, 246.0], [14.0, 247.0], [14.1, 247.0], [14.2, 249.0], [14.3, 250.0], [14.4, 252.0], [14.5, 252.0], [14.6, 253.0], [14.7, 254.0], [14.8, 256.0], [14.9, 256.0], [15.0, 257.0], [15.1, 259.0], [15.2, 260.0], [15.3, 261.0], [15.4, 263.0], [15.5, 263.0], [15.6, 264.0], [15.7, 265.0], [15.8, 266.0], [15.9, 267.0], [16.0, 268.0], [16.1, 269.0], [16.2, 271.0], [16.3, 271.0], [16.4, 272.0], [16.5, 273.0], [16.6, 274.0], [16.7, 274.0], [16.8, 276.0], [16.9, 277.0], [17.0, 277.0], [17.1, 278.0], [17.2, 279.0], [17.3, 280.0], [17.4, 280.0], [17.5, 281.0], [17.6, 282.0], [17.7, 283.0], [17.8, 284.0], [17.9, 284.0], [18.0, 285.0], [18.1, 285.0], [18.2, 287.0], [18.3, 289.0], [18.4, 289.0], [18.5, 290.0], [18.6, 291.0], [18.7, 291.0], [18.8, 292.0], [18.9, 292.0], [19.0, 293.0], [19.1, 294.0], [19.2, 295.0], [19.3, 297.0], [19.4, 297.0], [19.5, 299.0], [19.6, 299.0], [19.7, 300.0], [19.8, 301.0], [19.9, 302.0], [20.0, 303.0], [20.1, 304.0], [20.2, 305.0], [20.3, 306.0], [20.4, 308.0], [20.5, 308.0], [20.6, 309.0], [20.7, 310.0], [20.8, 311.0], [20.9, 312.0], [21.0, 313.0], [21.1, 313.0], [21.2, 314.0], [21.3, 315.0], [21.4, 315.0], [21.5, 316.0], [21.6, 317.0], [21.7, 319.0], [21.8, 320.0], [21.9, 321.0], [22.0, 322.0], [22.1, 324.0], [22.2, 324.0], [22.3, 325.0], [22.4, 326.0], [22.5, 327.0], [22.6, 328.0], [22.7, 329.0], [22.8, 330.0], [22.9, 331.0], [23.0, 332.0], [23.1, 334.0], [23.2, 335.0], [23.3, 337.0], [23.4, 338.0], [23.5, 339.0], [23.6, 341.0], [23.7, 342.0], [23.8, 342.0], [23.9, 344.0], [24.0, 345.0], [24.1, 346.0], [24.2, 347.0], [24.3, 348.0], [24.4, 351.0], [24.5, 351.0], [24.6, 352.0], [24.7, 353.0], [24.8, 355.0], [24.9, 355.0], [25.0, 356.0], [25.1, 357.0], [25.2, 357.0], [25.3, 358.0], [25.4, 360.0], [25.5, 361.0], [25.6, 362.0], [25.7, 365.0], [25.8, 365.0], [25.9, 366.0], [26.0, 366.0], [26.1, 367.0], [26.2, 368.0], [26.3, 371.0], [26.4, 372.0], [26.5, 373.0], [26.6, 373.0], [26.7, 374.0], [26.8, 377.0], [26.9, 378.0], [27.0, 378.0], [27.1, 379.0], [27.2, 380.0], [27.3, 381.0], [27.4, 384.0], [27.5, 384.0], [27.6, 385.0], [27.7, 386.0], [27.8, 386.0], [27.9, 387.0], [28.0, 388.0], [28.1, 389.0], [28.2, 390.0], [28.3, 390.0], [28.4, 391.0], [28.5, 393.0], [28.6, 393.0], [28.7, 394.0], [28.8, 395.0], [28.9, 396.0], [29.0, 398.0], [29.1, 399.0], [29.2, 400.0], [29.3, 400.0], [29.4, 401.0], [29.5, 403.0], [29.6, 403.0], [29.7, 405.0], [29.8, 406.0], [29.9, 407.0], [30.0, 408.0], [30.1, 409.0], [30.2, 410.0], [30.3, 411.0], [30.4, 412.0], [30.5, 412.0], [30.6, 413.0], [30.7, 414.0], [30.8, 415.0], [30.9, 416.0], [31.0, 416.0], [31.1, 417.0], [31.2, 419.0], [31.3, 420.0], [31.4, 422.0], [31.5, 423.0], [31.6, 424.0], [31.7, 427.0], [31.8, 428.0], [31.9, 429.0], [32.0, 429.0], [32.1, 431.0], [32.2, 432.0], [32.3, 432.0], [32.4, 433.0], [32.5, 434.0], [32.6, 435.0], [32.7, 435.0], [32.8, 437.0], [32.9, 437.0], [33.0, 439.0], [33.1, 441.0], [33.2, 442.0], [33.3, 444.0], [33.4, 444.0], [33.5, 447.0], [33.6, 447.0], [33.7, 448.0], [33.8, 449.0], [33.9, 451.0], [34.0, 453.0], [34.1, 453.0], [34.2, 454.0], [34.3, 456.0], [34.4, 457.0], [34.5, 458.0], [34.6, 459.0], [34.7, 461.0], [34.8, 461.0], [34.9, 462.0], [35.0, 464.0], [35.1, 465.0], [35.2, 466.0], [35.3, 467.0], [35.4, 467.0], [35.5, 468.0], [35.6, 469.0], [35.7, 470.0], [35.8, 471.0], [35.9, 472.0], [36.0, 473.0], [36.1, 473.0], [36.2, 476.0], [36.3, 477.0], [36.4, 479.0], [36.5, 480.0], [36.6, 481.0], [36.7, 482.0], [36.8, 484.0], [36.9, 484.0], [37.0, 485.0], [37.1, 486.0], [37.2, 488.0], [37.3, 489.0], [37.4, 489.0], [37.5, 490.0], [37.6, 495.0], [37.7, 496.0], [37.8, 497.0], [37.9, 497.0], [38.0, 498.0], [38.1, 499.0], [38.2, 500.0], [38.3, 502.0], [38.4, 503.0], [38.5, 504.0], [38.6, 505.0], [38.7, 507.0], [38.8, 508.0], [38.9, 508.0], [39.0, 509.0], [39.1, 511.0], [39.2, 512.0], [39.3, 513.0], [39.4, 514.0], [39.5, 515.0], [39.6, 517.0], [39.7, 519.0], [39.8, 520.0], [39.9, 522.0], [40.0, 524.0], [40.1, 527.0], [40.2, 528.0], [40.3, 529.0], [40.4, 531.0], [40.5, 531.0], [40.6, 534.0], [40.7, 535.0], [40.8, 536.0], [40.9, 537.0], [41.0, 537.0], [41.1, 539.0], [41.2, 541.0], [41.3, 541.0], [41.4, 543.0], [41.5, 544.0], [41.6, 546.0], [41.7, 547.0], [41.8, 548.0], [41.9, 550.0], [42.0, 552.0], [42.1, 553.0], [42.2, 554.0], [42.3, 557.0], [42.4, 559.0], [42.5, 560.0], [42.6, 562.0], [42.7, 562.0], [42.8, 565.0], [42.9, 566.0], [43.0, 567.0], [43.1, 568.0], [43.2, 569.0], [43.3, 572.0], [43.4, 575.0], [43.5, 576.0], [43.6, 578.0], [43.7, 580.0], [43.8, 581.0], [43.9, 583.0], [44.0, 585.0], [44.1, 586.0], [44.2, 587.0], [44.3, 587.0], [44.4, 589.0], [44.5, 591.0], [44.6, 592.0], [44.7, 592.0], [44.8, 594.0], [44.9, 597.0], [45.0, 599.0], [45.1, 601.0], [45.2, 602.0], [45.3, 603.0], [45.4, 604.0], [45.5, 604.0], [45.6, 605.0], [45.7, 606.0], [45.8, 607.0], [45.9, 611.0], [46.0, 613.0], [46.1, 614.0], [46.2, 614.0], [46.3, 616.0], [46.4, 617.0], [46.5, 618.0], [46.6, 622.0], [46.7, 626.0], [46.8, 628.0], [46.9, 631.0], [47.0, 634.0], [47.1, 636.0], [47.2, 638.0], [47.3, 640.0], [47.4, 641.0], [47.5, 642.0], [47.6, 643.0], [47.7, 644.0], [47.8, 647.0], [47.9, 648.0], [48.0, 651.0], [48.1, 653.0], [48.2, 657.0], [48.3, 658.0], [48.4, 659.0], [48.5, 661.0], [48.6, 662.0], [48.7, 663.0], [48.8, 664.0], [48.9, 667.0], [49.0, 669.0], [49.1, 672.0], [49.2, 675.0], [49.3, 677.0], [49.4, 678.0], [49.5, 678.0], [49.6, 679.0], [49.7, 680.0], [49.8, 681.0], [49.9, 681.0], [50.0, 682.0], [50.1, 686.0], [50.2, 687.0], [50.3, 689.0], [50.4, 692.0], [50.5, 694.0], [50.6, 697.0], [50.7, 698.0], [50.8, 699.0], [50.9, 702.0], [51.0, 705.0], [51.1, 707.0], [51.2, 709.0], [51.3, 712.0], [51.4, 713.0], [51.5, 713.0], [51.6, 715.0], [51.7, 716.0], [51.8, 717.0], [51.9, 719.0], [52.0, 720.0], [52.1, 721.0], [52.2, 722.0], [52.3, 723.0], [52.4, 724.0], [52.5, 728.0], [52.6, 730.0], [52.7, 732.0], [52.8, 734.0], [52.9, 735.0], [53.0, 738.0], [53.1, 739.0], [53.2, 740.0], [53.3, 742.0], [53.4, 743.0], [53.5, 743.0], [53.6, 747.0], [53.7, 750.0], [53.8, 752.0], [53.9, 754.0], [54.0, 757.0], [54.1, 758.0], [54.2, 758.0], [54.3, 759.0], [54.4, 762.0], [54.5, 763.0], [54.6, 766.0], [54.7, 767.0], [54.8, 768.0], [54.9, 771.0], [55.0, 773.0], [55.1, 774.0], [55.2, 776.0], [55.3, 779.0], [55.4, 780.0], [55.5, 783.0], [55.6, 784.0], [55.7, 787.0], [55.8, 788.0], [55.9, 790.0], [56.0, 791.0], [56.1, 793.0], [56.2, 794.0], [56.3, 796.0], [56.4, 801.0], [56.5, 801.0], [56.6, 803.0], [56.7, 805.0], [56.8, 806.0], [56.9, 809.0], [57.0, 810.0], [57.1, 815.0], [57.2, 816.0], [57.3, 818.0], [57.4, 820.0], [57.5, 821.0], [57.6, 822.0], [57.7, 825.0], [57.8, 828.0], [57.9, 830.0], [58.0, 831.0], [58.1, 833.0], [58.2, 834.0], [58.3, 835.0], [58.4, 837.0], [58.5, 840.0], [58.6, 842.0], [58.7, 843.0], [58.8, 844.0], [58.9, 845.0], [59.0, 848.0], [59.1, 852.0], [59.2, 855.0], [59.3, 859.0], [59.4, 861.0], [59.5, 862.0], [59.6, 866.0], [59.7, 868.0], [59.8, 871.0], [59.9, 873.0], [60.0, 876.0], [60.1, 878.0], [60.2, 880.0], [60.3, 883.0], [60.4, 887.0], [60.5, 890.0], [60.6, 892.0], [60.7, 896.0], [60.8, 900.0], [60.9, 901.0], [61.0, 904.0], [61.1, 908.0], [61.2, 911.0], [61.3, 914.0], [61.4, 918.0], [61.5, 923.0], [61.6, 927.0], [61.7, 930.0], [61.8, 930.0], [61.9, 932.0], [62.0, 933.0], [62.1, 937.0], [62.2, 939.0], [62.3, 941.0], [62.4, 944.0], [62.5, 946.0], [62.6, 948.0], [62.7, 950.0], [62.8, 951.0], [62.9, 954.0], [63.0, 956.0], [63.1, 958.0], [63.2, 962.0], [63.3, 963.0], [63.4, 966.0], [63.5, 968.0], [63.6, 971.0], [63.7, 975.0], [63.8, 976.0], [63.9, 980.0], [64.0, 981.0], [64.1, 985.0], [64.2, 991.0], [64.3, 993.0], [64.4, 997.0], [64.5, 1002.0], [64.6, 1003.0], [64.7, 1007.0], [64.8, 1011.0], [64.9, 1016.0], [65.0, 1021.0], [65.1, 1028.0], [65.2, 1030.0], [65.3, 1036.0], [65.4, 1038.0], [65.5, 1041.0], [65.6, 1044.0], [65.7, 1048.0], [65.8, 1053.0], [65.9, 1057.0], [66.0, 1066.0], [66.1, 1069.0], [66.2, 1074.0], [66.3, 1076.0], [66.4, 1080.0], [66.5, 1088.0], [66.6, 1094.0], [66.7, 1098.0], [66.8, 1101.0], [66.9, 1102.0], [67.0, 1107.0], [67.1, 1108.0], [67.2, 1111.0], [67.3, 1116.0], [67.4, 1120.0], [67.5, 1123.0], [67.6, 1126.0], [67.7, 1126.0], [67.8, 1132.0], [67.9, 1136.0], [68.0, 1144.0], [68.1, 1152.0], [68.2, 1156.0], [68.3, 1160.0], [68.4, 1167.0], [68.5, 1176.0], [68.6, 1180.0], [68.7, 1187.0], [68.8, 1189.0], [68.9, 1192.0], [69.0, 1193.0], [69.1, 1195.0], [69.2, 1196.0], [69.3, 1203.0], [69.4, 1207.0], [69.5, 1209.0], [69.6, 1212.0], [69.7, 1214.0], [69.8, 1218.0], [69.9, 1221.0], [70.0, 1226.0], [70.1, 1229.0], [70.2, 1234.0], [70.3, 1238.0], [70.4, 1241.0], [70.5, 1247.0], [70.6, 1252.0], [70.7, 1260.0], [70.8, 1263.0], [70.9, 1267.0], [71.0, 1270.0], [71.1, 1275.0], [71.2, 1279.0], [71.3, 1281.0], [71.4, 1286.0], [71.5, 1290.0], [71.6, 1299.0], [71.7, 1313.0], [71.8, 1317.0], [71.9, 1330.0], [72.0, 1336.0], [72.1, 1339.0], [72.2, 1341.0], [72.3, 1358.0], [72.4, 1361.0], [72.5, 1367.0], [72.6, 1369.0], [72.7, 1375.0], [72.8, 1380.0], [72.9, 1384.0], [73.0, 1386.0], [73.1, 1398.0], [73.2, 1399.0], [73.3, 1404.0], [73.4, 1411.0], [73.5, 1413.0], [73.6, 1421.0], [73.7, 1426.0], [73.8, 1440.0], [73.9, 1445.0], [74.0, 1450.0], [74.1, 1463.0], [74.2, 1466.0], [74.3, 1467.0], [74.4, 1471.0], [74.5, 1487.0], [74.6, 1494.0], [74.7, 1502.0], [74.8, 1506.0], [74.9, 1509.0], [75.0, 1518.0], [75.1, 1526.0], [75.2, 1535.0], [75.3, 1541.0], [75.4, 1555.0], [75.5, 1556.0], [75.6, 1559.0], [75.7, 1561.0], [75.8, 1564.0], [75.9, 1574.0], [76.0, 1580.0], [76.1, 1583.0], [76.2, 1593.0], [76.3, 1600.0], [76.4, 1612.0], [76.5, 1616.0], [76.6, 1620.0], [76.7, 1623.0], [76.8, 1633.0], [76.9, 1640.0], [77.0, 1658.0], [77.1, 1664.0], [77.2, 1672.0], [77.3, 1683.0], [77.4, 1693.0], [77.5, 1699.0], [77.6, 1701.0], [77.7, 1713.0], [77.8, 1715.0], [77.9, 1720.0], [78.0, 1733.0], [78.1, 1739.0], [78.2, 1749.0], [78.3, 1753.0], [78.4, 1771.0], [78.5, 1776.0], [78.6, 1781.0], [78.7, 1784.0], [78.8, 1797.0], [78.9, 1812.0], [79.0, 1818.0], [79.1, 1836.0], [79.2, 1842.0], [79.3, 1847.0], [79.4, 1852.0], [79.5, 1860.0], [79.6, 1866.0], [79.7, 1887.0], [79.8, 1912.0], [79.9, 1921.0], [80.0, 1932.0], [80.1, 1941.0], [80.2, 1947.0], [80.3, 1954.0], [80.4, 1957.0], [80.5, 1962.0], [80.6, 1970.0], [80.7, 1981.0], [80.8, 1989.0], [80.9, 2003.0], [81.0, 2015.0], [81.1, 2024.0], [81.2, 2029.0], [81.3, 2037.0], [81.4, 2047.0], [81.5, 2068.0], [81.6, 2073.0], [81.7, 2079.0], [81.8, 2085.0], [81.9, 2096.0], [82.0, 2102.0], [82.1, 2114.0], [82.2, 2126.0], [82.3, 2134.0], [82.4, 2140.0], [82.5, 2146.0], [82.6, 2151.0], [82.7, 2156.0], [82.8, 2161.0], [82.9, 2174.0], [83.0, 2183.0], [83.1, 2194.0], [83.2, 2206.0], [83.3, 2229.0], [83.4, 2234.0], [83.5, 2243.0], [83.6, 2258.0], [83.7, 2273.0], [83.8, 2284.0], [83.9, 2298.0], [84.0, 2314.0], [84.1, 2331.0], [84.2, 2349.0], [84.3, 2354.0], [84.4, 2357.0], [84.5, 2371.0], [84.6, 2385.0], [84.7, 2397.0], [84.8, 2406.0], [84.9, 2413.0], [85.0, 2431.0], [85.1, 2445.0], [85.2, 2459.0], [85.3, 2474.0], [85.4, 2483.0], [85.5, 2493.0], [85.6, 2499.0], [85.7, 2510.0], [85.8, 2528.0], [85.9, 2546.0], [86.0, 2552.0], [86.1, 2562.0], [86.2, 2577.0], [86.3, 2597.0], [86.4, 2603.0], [86.5, 2610.0], [86.6, 2625.0], [86.7, 2639.0], [86.8, 2663.0], [86.9, 2699.0], [87.0, 2720.0], [87.1, 2726.0], [87.2, 2737.0], [87.3, 2757.0], [87.4, 2790.0], [87.5, 2810.0], [87.6, 2833.0], [87.7, 2838.0], [87.8, 2847.0], [87.9, 2866.0], [88.0, 2894.0], [88.1, 2898.0], [88.2, 2915.0], [88.3, 2945.0], [88.4, 2953.0], [88.5, 2965.0], [88.6, 2985.0], [88.7, 2998.0], [88.8, 3014.0], [88.9, 3061.0], [89.0, 3068.0], [89.1, 3085.0], [89.2, 3100.0], [89.3, 3117.0], [89.4, 3142.0], [89.5, 3150.0], [89.6, 3178.0], [89.7, 3187.0], [89.8, 3211.0], [89.9, 3258.0], [90.0, 3272.0], [90.1, 3299.0], [90.2, 3306.0], [90.3, 3316.0], [90.4, 3326.0], [90.5, 3351.0], [90.6, 3364.0], [90.7, 3382.0], [90.8, 3409.0], [90.9, 3426.0], [91.0, 3472.0], [91.1, 3500.0], [91.2, 3532.0], [91.3, 3568.0], [91.4, 3630.0], [91.5, 3647.0], [91.6, 3692.0], [91.7, 3735.0], [91.8, 3769.0], [91.9, 3778.0], [92.0, 3833.0], [92.1, 3845.0], [92.2, 3871.0], [92.3, 3950.0], [92.4, 3981.0], [92.5, 4084.0], [92.6, 4108.0], [92.7, 4156.0], [92.8, 4167.0], [92.9, 4214.0], [93.0, 4230.0], [93.1, 4289.0], [93.2, 4302.0], [93.3, 4326.0], [93.4, 4374.0], [93.5, 4387.0], [93.6, 4413.0], [93.7, 4516.0], [93.8, 4569.0], [93.9, 4603.0], [94.0, 4633.0], [94.1, 4659.0], [94.2, 4705.0], [94.3, 4737.0], [94.4, 4809.0], [94.5, 4819.0], [94.6, 4855.0], [94.7, 4902.0], [94.8, 4933.0], [94.9, 4998.0], [95.0, 5077.0], [95.1, 5120.0], [95.2, 5251.0], [95.3, 5289.0], [95.4, 5337.0], [95.5, 5399.0], [95.6, 5467.0], [95.7, 5523.0], [95.8, 5548.0], [95.9, 5626.0], [96.0, 5652.0], [96.1, 5738.0], [96.2, 5771.0], [96.3, 5789.0], [96.4, 5845.0], [96.5, 5870.0], [96.6, 5878.0], [96.7, 5899.0], [96.8, 5994.0], [96.9, 6081.0], [97.0, 6134.0], [97.1, 6199.0], [97.2, 6327.0], [97.3, 6474.0], [97.4, 6669.0], [97.5, 6737.0], [97.6, 6828.0], [97.7, 6974.0], [97.8, 7089.0], [97.9, 7213.0], [98.0, 7406.0], [98.1, 7547.0], [98.2, 7695.0], [98.3, 7814.0], [98.4, 7911.0], [98.5, 8001.0], [98.6, 8294.0], [98.7, 8503.0], [98.8, 8610.0], [98.9, 8858.0], [99.0, 9002.0], [99.1, 9161.0], [99.2, 9218.0], [99.3, 9494.0], [99.4, 9569.0], [99.5, 10976.0], [99.6, 12891.0], [99.7, 17504.0], [99.8, 20090.0], [99.9, 34500.0], [100.0, 65264.0]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[0.0, 51.0], [0.1, 52.0], [0.2, 54.0], [0.3, 55.0], [0.4, 56.0], [0.5, 56.0], [0.6, 57.0], [0.7, 57.0], [0.8, 57.0], [0.9, 58.0], [1.0, 58.0], [1.1, 59.0], [1.2, 59.0], [1.3, 60.0], [1.4, 60.0], [1.5, 60.0], [1.6, 61.0], [1.7, 61.0], [1.8, 61.0], [1.9, 61.0], [2.0, 62.0], [2.1, 62.0], [2.2, 62.0], [2.3, 63.0], [2.4, 63.0], [2.5, 63.0], [2.6, 64.0], [2.7, 64.0], [2.8, 64.0], [2.9, 65.0], [3.0, 65.0], [3.1, 65.0], [3.2, 66.0], [3.3, 66.0], [3.4, 66.0], [3.5, 67.0], [3.6, 67.0], [3.7, 68.0], [3.8, 68.0], [3.9, 69.0], [4.0, 69.0], [4.1, 70.0], [4.2, 70.0], [4.3, 70.0], [4.4, 71.0], [4.5, 71.0], [4.6, 72.0], [4.7, 72.0], [4.8, 72.0], [4.9, 73.0], [5.0, 74.0], [5.1, 74.0], [5.2, 74.0], [5.3, 75.0], [5.4, 75.0], [5.5, 76.0], [5.6, 76.0], [5.7, 76.0], [5.8, 76.0], [5.9, 77.0], [6.0, 78.0], [6.1, 78.0], [6.2, 78.0], [6.3, 78.0], [6.4, 79.0], [6.5, 80.0], [6.6, 80.0], [6.7, 81.0], [6.8, 81.0], [6.9, 81.0], [7.0, 82.0], [7.1, 83.0], [7.2, 83.0], [7.3, 84.0], [7.4, 84.0], [7.5, 85.0], [7.6, 85.0], [7.7, 86.0], [7.8, 86.0], [7.9, 88.0], [8.0, 89.0], [8.1, 89.0], [8.2, 90.0], [8.3, 90.0], [8.4, 91.0], [8.5, 92.0], [8.6, 93.0], [8.7, 93.0], [8.8, 94.0], [8.9, 94.0], [9.0, 95.0], [9.1, 95.0], [9.2, 96.0], [9.3, 97.0], [9.4, 97.0], [9.5, 98.0], [9.6, 99.0], [9.7, 100.0], [9.8, 100.0], [9.9, 101.0], [10.0, 102.0], [10.1, 103.0], [10.2, 103.0], [10.3, 105.0], [10.4, 106.0], [10.5, 107.0], [10.6, 108.0], [10.7, 109.0], [10.8, 109.0], [10.9, 110.0], [11.0, 111.0], [11.1, 112.0], [11.2, 112.0], [11.3, 113.0], [11.4, 114.0], [11.5, 115.0], [11.6, 115.0], [11.7, 116.0], [11.8, 117.0], [11.9, 117.0], [12.0, 118.0], [12.1, 118.0], [12.2, 118.0], [12.3, 120.0], [12.4, 121.0], [12.5, 122.0], [12.6, 122.0], [12.7, 122.0], [12.8, 124.0], [12.9, 125.0], [13.0, 126.0], [13.1, 126.0], [13.2, 126.0], [13.3, 127.0], [13.4, 127.0], [13.5, 129.0], [13.6, 129.0], [13.7, 129.0], [13.8, 130.0], [13.9, 132.0], [14.0, 132.0], [14.1, 133.0], [14.2, 135.0], [14.3, 136.0], [14.4, 136.0], [14.5, 137.0], [14.6, 138.0], [14.7, 138.0], [14.8, 140.0], [14.9, 140.0], [15.0, 141.0], [15.1, 141.0], [15.2, 142.0], [15.3, 143.0], [15.4, 144.0], [15.5, 145.0], [15.6, 145.0], [15.7, 146.0], [15.8, 146.0], [15.9, 147.0], [16.0, 147.0], [16.1, 148.0], [16.2, 149.0], [16.3, 149.0], [16.4, 151.0], [16.5, 151.0], [16.6, 152.0], [16.7, 152.0], [16.8, 153.0], [16.9, 153.0], [17.0, 153.0], [17.1, 154.0], [17.2, 154.0], [17.3, 155.0], [17.4, 156.0], [17.5, 156.0], [17.6, 156.0], [17.7, 157.0], [17.8, 158.0], [17.9, 159.0], [18.0, 159.0], [18.1, 160.0], [18.2, 160.0], [18.3, 161.0], [18.4, 162.0], [18.5, 163.0], [18.6, 163.0], [18.7, 164.0], [18.8, 165.0], [18.9, 165.0], [19.0, 166.0], [19.1, 166.0], [19.2, 167.0], [19.3, 167.0], [19.4, 168.0], [19.5, 168.0], [19.6, 170.0], [19.7, 171.0], [19.8, 172.0], [19.9, 172.0], [20.0, 172.0], [20.1, 173.0], [20.2, 173.0], [20.3, 174.0], [20.4, 174.0], [20.5, 175.0], [20.6, 175.0], [20.7, 176.0], [20.8, 176.0], [20.9, 177.0], [21.0, 177.0], [21.1, 178.0], [21.2, 178.0], [21.3, 178.0], [21.4, 179.0], [21.5, 179.0], [21.6, 180.0], [21.7, 181.0], [21.8, 181.0], [21.9, 183.0], [22.0, 183.0], [22.1, 184.0], [22.2, 184.0], [22.3, 185.0], [22.4, 186.0], [22.5, 186.0], [22.6, 187.0], [22.7, 188.0], [22.8, 188.0], [22.9, 189.0], [23.0, 190.0], [23.1, 190.0], [23.2, 190.0], [23.3, 192.0], [23.4, 192.0], [23.5, 193.0], [23.6, 194.0], [23.7, 195.0], [23.8, 196.0], [23.9, 197.0], [24.0, 198.0], [24.1, 198.0], [24.2, 199.0], [24.3, 199.0], [24.4, 200.0], [24.5, 202.0], [24.6, 202.0], [24.7, 203.0], [24.8, 203.0], [24.9, 205.0], [25.0, 205.0], [25.1, 206.0], [25.2, 207.0], [25.3, 208.0], [25.4, 208.0], [25.5, 209.0], [25.6, 210.0], [25.7, 211.0], [25.8, 211.0], [25.9, 211.0], [26.0, 212.0], [26.1, 213.0], [26.2, 214.0], [26.3, 214.0], [26.4, 215.0], [26.5, 216.0], [26.6, 218.0], [26.7, 218.0], [26.8, 219.0], [26.9, 220.0], [27.0, 220.0], [27.1, 221.0], [27.2, 222.0], [27.3, 223.0], [27.4, 224.0], [27.5, 226.0], [27.6, 227.0], [27.7, 227.0], [27.8, 228.0], [27.9, 229.0], [28.0, 229.0], [28.1, 230.0], [28.2, 230.0], [28.3, 231.0], [28.4, 231.0], [28.5, 232.0], [28.6, 232.0], [28.7, 233.0], [28.8, 233.0], [28.9, 234.0], [29.0, 235.0], [29.1, 236.0], [29.2, 236.0], [29.3, 236.0], [29.4, 237.0], [29.5, 237.0], [29.6, 238.0], [29.7, 239.0], [29.8, 239.0], [29.9, 240.0], [30.0, 241.0], [30.1, 242.0], [30.2, 243.0], [30.3, 244.0], [30.4, 245.0], [30.5, 246.0], [30.6, 246.0], [30.7, 247.0], [30.8, 248.0], [30.9, 249.0], [31.0, 250.0], [31.1, 251.0], [31.2, 252.0], [31.3, 253.0], [31.4, 253.0], [31.5, 254.0], [31.6, 255.0], [31.7, 255.0], [31.8, 255.0], [31.9, 256.0], [32.0, 256.0], [32.1, 257.0], [32.2, 257.0], [32.3, 257.0], [32.4, 258.0], [32.5, 259.0], [32.6, 259.0], [32.7, 260.0], [32.8, 261.0], [32.9, 261.0], [33.0, 262.0], [33.1, 262.0], [33.2, 262.0], [33.3, 263.0], [33.4, 264.0], [33.5, 264.0], [33.6, 264.0], [33.7, 265.0], [33.8, 265.0], [33.9, 266.0], [34.0, 267.0], [34.1, 267.0], [34.2, 268.0], [34.3, 268.0], [34.4, 269.0], [34.5, 270.0], [34.6, 271.0], [34.7, 272.0], [34.8, 273.0], [34.9, 274.0], [35.0, 274.0], [35.1, 274.0], [35.2, 275.0], [35.3, 276.0], [35.4, 277.0], [35.5, 277.0], [35.6, 278.0], [35.7, 279.0], [35.8, 279.0], [35.9, 280.0], [36.0, 280.0], [36.1, 280.0], [36.2, 281.0], [36.3, 281.0], [36.4, 282.0], [36.5, 282.0], [36.6, 283.0], [36.7, 283.0], [36.8, 284.0], [36.9, 284.0], [37.0, 285.0], [37.1, 286.0], [37.2, 286.0], [37.3, 287.0], [37.4, 287.0], [37.5, 287.0], [37.6, 288.0], [37.7, 289.0], [37.8, 289.0], [37.9, 290.0], [38.0, 291.0], [38.1, 292.0], [38.2, 293.0], [38.3, 294.0], [38.4, 295.0], [38.5, 295.0], [38.6, 296.0], [38.7, 296.0], [38.8, 297.0], [38.9, 298.0], [39.0, 299.0], [39.1, 299.0], [39.2, 300.0], [39.3, 300.0], [39.4, 301.0], [39.5, 302.0], [39.6, 305.0], [39.7, 306.0], [39.8, 307.0], [39.9, 308.0], [40.0, 308.0], [40.1, 309.0], [40.2, 310.0], [40.3, 311.0], [40.4, 312.0], [40.5, 313.0], [40.6, 314.0], [40.7, 314.0], [40.8, 315.0], [40.9, 316.0], [41.0, 316.0], [41.1, 317.0], [41.2, 318.0], [41.3, 318.0], [41.4, 319.0], [41.5, 319.0], [41.6, 319.0], [41.7, 320.0], [41.8, 321.0], [41.9, 322.0], [42.0, 322.0], [42.1, 323.0], [42.2, 324.0], [42.3, 324.0], [42.4, 325.0], [42.5, 327.0], [42.6, 328.0], [42.7, 328.0], [42.8, 330.0], [42.9, 330.0], [43.0, 330.0], [43.1, 331.0], [43.2, 332.0], [43.3, 332.0], [43.4, 333.0], [43.5, 334.0], [43.6, 334.0], [43.7, 334.0], [43.8, 335.0], [43.9, 336.0], [44.0, 337.0], [44.1, 338.0], [44.2, 338.0], [44.3, 339.0], [44.4, 339.0], [44.5, 339.0], [44.6, 340.0], [44.7, 341.0], [44.8, 342.0], [44.9, 344.0], [45.0, 344.0], [45.1, 345.0], [45.2, 345.0], [45.3, 346.0], [45.4, 347.0], [45.5, 347.0], [45.6, 349.0], [45.7, 350.0], [45.8, 350.0], [45.9, 351.0], [46.0, 352.0], [46.1, 353.0], [46.2, 353.0], [46.3, 353.0], [46.4, 354.0], [46.5, 355.0], [46.6, 356.0], [46.7, 358.0], [46.8, 359.0], [46.9, 359.0], [47.0, 361.0], [47.1, 361.0], [47.2, 362.0], [47.3, 362.0], [47.4, 364.0], [47.5, 364.0], [47.6, 365.0], [47.7, 366.0], [47.8, 366.0], [47.9, 367.0], [48.0, 368.0], [48.1, 368.0], [48.2, 368.0], [48.3, 369.0], [48.4, 371.0], [48.5, 371.0], [48.6, 372.0], [48.7, 372.0], [48.8, 373.0], [48.9, 373.0], [49.0, 375.0], [49.1, 375.0], [49.2, 376.0], [49.3, 377.0], [49.4, 377.0], [49.5, 379.0], [49.6, 379.0], [49.7, 380.0], [49.8, 380.0], [49.9, 381.0], [50.0, 383.0], [50.1, 384.0], [50.2, 385.0], [50.3, 387.0], [50.4, 387.0], [50.5, 388.0], [50.6, 389.0], [50.7, 389.0], [50.8, 390.0], [50.9, 391.0], [51.0, 392.0], [51.1, 393.0], [51.2, 394.0], [51.3, 395.0], [51.4, 396.0], [51.5, 396.0], [51.6, 397.0], [51.7, 398.0], [51.8, 400.0], [51.9, 402.0], [52.0, 403.0], [52.1, 404.0], [52.2, 404.0], [52.3, 404.0], [52.4, 406.0], [52.5, 409.0], [52.6, 409.0], [52.7, 410.0], [52.8, 411.0], [52.9, 412.0], [53.0, 413.0], [53.1, 413.0], [53.2, 414.0], [53.3, 415.0], [53.4, 416.0], [53.5, 417.0], [53.6, 418.0], [53.7, 419.0], [53.8, 420.0], [53.9, 421.0], [54.0, 422.0], [54.1, 423.0], [54.2, 424.0], [54.3, 425.0], [54.4, 427.0], [54.5, 428.0], [54.6, 428.0], [54.7, 430.0], [54.8, 432.0], [54.9, 432.0], [55.0, 433.0], [55.1, 435.0], [55.2, 435.0], [55.3, 436.0], [55.4, 438.0], [55.5, 440.0], [55.6, 441.0], [55.7, 442.0], [55.8, 445.0], [55.9, 446.0], [56.0, 447.0], [56.1, 448.0], [56.2, 449.0], [56.3, 449.0], [56.4, 450.0], [56.5, 452.0], [56.6, 453.0], [56.7, 453.0], [56.8, 455.0], [56.9, 457.0], [57.0, 458.0], [57.1, 459.0], [57.2, 460.0], [57.3, 461.0], [57.4, 461.0], [57.5, 462.0], [57.6, 463.0], [57.7, 463.0], [57.8, 464.0], [57.9, 465.0], [58.0, 466.0], [58.1, 466.0], [58.2, 467.0], [58.3, 468.0], [58.4, 469.0], [58.5, 470.0], [58.6, 471.0], [58.7, 472.0], [58.8, 473.0], [58.9, 475.0], [59.0, 476.0], [59.1, 477.0], [59.2, 478.0], [59.3, 481.0], [59.4, 482.0], [59.5, 482.0], [59.6, 485.0], [59.7, 486.0], [59.8, 489.0], [59.9, 491.0], [60.0, 493.0], [60.1, 494.0], [60.2, 497.0], [60.3, 500.0], [60.4, 502.0], [60.5, 503.0], [60.6, 505.0], [60.7, 505.0], [60.8, 506.0], [60.9, 508.0], [61.0, 512.0], [61.1, 512.0], [61.2, 514.0], [61.3, 515.0], [61.4, 516.0], [61.5, 516.0], [61.6, 517.0], [61.7, 519.0], [61.8, 521.0], [61.9, 522.0], [62.0, 522.0], [62.1, 524.0], [62.2, 526.0], [62.3, 527.0], [62.4, 528.0], [62.5, 530.0], [62.6, 532.0], [62.7, 534.0], [62.8, 535.0], [62.9, 537.0], [63.0, 538.0], [63.1, 540.0], [63.2, 542.0], [63.3, 543.0], [63.4, 544.0], [63.5, 545.0], [63.6, 546.0], [63.7, 547.0], [63.8, 550.0], [63.9, 550.0], [64.0, 551.0], [64.1, 552.0], [64.2, 553.0], [64.3, 554.0], [64.4, 556.0], [64.5, 557.0], [64.6, 561.0], [64.7, 563.0], [64.8, 563.0], [64.9, 564.0], [65.0, 565.0], [65.1, 567.0], [65.2, 567.0], [65.3, 568.0], [65.4, 569.0], [65.5, 570.0], [65.6, 571.0], [65.7, 573.0], [65.8, 575.0], [65.9, 576.0], [66.0, 578.0], [66.1, 578.0], [66.2, 581.0], [66.3, 583.0], [66.4, 585.0], [66.5, 589.0], [66.6, 591.0], [66.7, 592.0], [66.8, 593.0], [66.9, 593.0], [67.0, 594.0], [67.1, 597.0], [67.2, 599.0], [67.3, 601.0], [67.4, 605.0], [67.5, 606.0], [67.6, 611.0], [67.7, 612.0], [67.8, 613.0], [67.9, 614.0], [68.0, 616.0], [68.1, 617.0], [68.2, 619.0], [68.3, 620.0], [68.4, 622.0], [68.5, 625.0], [68.6, 626.0], [68.7, 631.0], [68.8, 632.0], [68.9, 632.0], [69.0, 633.0], [69.1, 635.0], [69.2, 636.0], [69.3, 637.0], [69.4, 639.0], [69.5, 639.0], [69.6, 641.0], [69.7, 643.0], [69.8, 645.0], [69.9, 646.0], [70.0, 648.0], [70.1, 650.0], [70.2, 652.0], [70.3, 654.0], [70.4, 657.0], [70.5, 658.0], [70.6, 662.0], [70.7, 664.0], [70.8, 665.0], [70.9, 669.0], [71.0, 670.0], [71.1, 671.0], [71.2, 671.0], [71.3, 672.0], [71.4, 673.0], [71.5, 675.0], [71.6, 677.0], [71.7, 678.0], [71.8, 682.0], [71.9, 683.0], [72.0, 684.0], [72.1, 685.0], [72.2, 689.0], [72.3, 691.0], [72.4, 694.0], [72.5, 694.0], [72.6, 697.0], [72.7, 698.0], [72.8, 700.0], [72.9, 704.0], [73.0, 705.0], [73.1, 707.0], [73.2, 709.0], [73.3, 710.0], [73.4, 711.0], [73.5, 713.0], [73.6, 715.0], [73.7, 716.0], [73.8, 718.0], [73.9, 720.0], [74.0, 724.0], [74.1, 725.0], [74.2, 727.0], [74.3, 730.0], [74.4, 731.0], [74.5, 734.0], [74.6, 737.0], [74.7, 739.0], [74.8, 740.0], [74.9, 745.0], [75.0, 748.0], [75.1, 750.0], [75.2, 756.0], [75.3, 757.0], [75.4, 761.0], [75.5, 764.0], [75.6, 768.0], [75.7, 772.0], [75.8, 775.0], [75.9, 778.0], [76.0, 780.0], [76.1, 783.0], [76.2, 786.0], [76.3, 787.0], [76.4, 788.0], [76.5, 790.0], [76.6, 793.0], [76.7, 796.0], [76.8, 797.0], [76.9, 806.0], [77.0, 808.0], [77.1, 810.0], [77.2, 814.0], [77.3, 818.0], [77.4, 821.0], [77.5, 825.0], [77.6, 830.0], [77.7, 833.0], [77.8, 835.0], [77.9, 841.0], [78.0, 843.0], [78.1, 846.0], [78.2, 849.0], [78.3, 852.0], [78.4, 854.0], [78.5, 863.0], [78.6, 866.0], [78.7, 867.0], [78.8, 869.0], [78.9, 874.0], [79.0, 878.0], [79.1, 883.0], [79.2, 888.0], [79.3, 889.0], [79.4, 892.0], [79.5, 902.0], [79.6, 906.0], [79.7, 910.0], [79.8, 911.0], [79.9, 913.0], [80.0, 916.0], [80.1, 921.0], [80.2, 922.0], [80.3, 926.0], [80.4, 930.0], [80.5, 931.0], [80.6, 937.0], [80.7, 940.0], [80.8, 942.0], [80.9, 947.0], [81.0, 950.0], [81.1, 953.0], [81.2, 954.0], [81.3, 958.0], [81.4, 960.0], [81.5, 963.0], [81.6, 966.0], [81.7, 973.0], [81.8, 976.0], [81.9, 977.0], [82.0, 979.0], [82.1, 987.0], [82.2, 990.0], [82.3, 994.0], [82.4, 997.0], [82.5, 999.0], [82.6, 1003.0], [82.7, 1007.0], [82.8, 1012.0], [82.9, 1020.0], [83.0, 1029.0], [83.1, 1037.0], [83.2, 1042.0], [83.3, 1050.0], [83.4, 1055.0], [83.5, 1057.0], [83.6, 1060.0], [83.7, 1066.0], [83.8, 1073.0], [83.9, 1077.0], [84.0, 1080.0], [84.1, 1086.0], [84.2, 1092.0], [84.3, 1097.0], [84.4, 1106.0], [84.5, 1115.0], [84.6, 1129.0], [84.7, 1132.0], [84.8, 1134.0], [84.9, 1141.0], [85.0, 1152.0], [85.1, 1161.0], [85.2, 1167.0], [85.3, 1170.0], [85.4, 1175.0], [85.5, 1180.0], [85.6, 1184.0], [85.7, 1194.0], [85.8, 1195.0], [85.9, 1202.0], [86.0, 1207.0], [86.1, 1219.0], [86.2, 1226.0], [86.3, 1235.0], [86.4, 1238.0], [86.5, 1244.0], [86.6, 1247.0], [86.7, 1247.0], [86.8, 1250.0], [86.9, 1256.0], [87.0, 1259.0], [87.1, 1260.0], [87.2, 1266.0], [87.3, 1271.0], [87.4, 1275.0], [87.5, 1285.0], [87.6, 1292.0], [87.7, 1302.0], [87.8, 1304.0], [87.9, 1315.0], [88.0, 1324.0], [88.1, 1329.0], [88.2, 1337.0], [88.3, 1339.0], [88.4, 1344.0], [88.5, 1348.0], [88.6, 1363.0], [88.7, 1369.0], [88.8, 1375.0], [88.9, 1388.0], [89.0, 1393.0], [89.1, 1399.0], [89.2, 1405.0], [89.3, 1409.0], [89.4, 1417.0], [89.5, 1419.0], [89.6, 1428.0], [89.7, 1436.0], [89.8, 1443.0], [89.9, 1446.0], [90.0, 1454.0], [90.1, 1458.0], [90.2, 1470.0], [90.3, 1479.0], [90.4, 1494.0], [90.5, 1504.0], [90.6, 1506.0], [90.7, 1515.0], [90.8, 1538.0], [90.9, 1552.0], [91.0, 1559.0], [91.1, 1570.0], [91.2, 1584.0], [91.3, 1592.0], [91.4, 1624.0], [91.5, 1650.0], [91.6, 1654.0], [91.7, 1674.0], [91.8, 1708.0], [91.9, 1709.0], [92.0, 1747.0], [92.1, 1765.0], [92.2, 1797.0], [92.3, 1820.0], [92.4, 1834.0], [92.5, 1845.0], [92.6, 1851.0], [92.7, 1867.0], [92.8, 1903.0], [92.9, 1910.0], [93.0, 1939.0], [93.1, 1986.0], [93.2, 2002.0], [93.3, 2012.0], [93.4, 2029.0], [93.5, 2062.0], [93.6, 2104.0], [93.7, 2147.0], [93.8, 2167.0], [93.9, 2178.0], [94.0, 2202.0], [94.1, 2218.0], [94.2, 2253.0], [94.3, 2258.0], [94.4, 2287.0], [94.5, 2298.0], [94.6, 2313.0], [94.7, 2350.0], [94.8, 2373.0], [94.9, 2416.0], [95.0, 2447.0], [95.1, 2500.0], [95.2, 2516.0], [95.3, 2534.0], [95.4, 2550.0], [95.5, 2582.0], [95.6, 2598.0], [95.7, 2673.0], [95.8, 2699.0], [95.9, 2740.0], [96.0, 2789.0], [96.1, 2842.0], [96.2, 2863.0], [96.3, 2884.0], [96.4, 2971.0], [96.5, 3069.0], [96.6, 3169.0], [96.7, 3244.0], [96.8, 3298.0], [96.9, 3325.0], [97.0, 3442.0], [97.1, 3512.0], [97.2, 3618.0], [97.3, 3657.0], [97.4, 3710.0], [97.5, 3766.0], [97.6, 3814.0], [97.7, 4013.0], [97.8, 4071.0], [97.9, 4153.0], [98.0, 4311.0], [98.1, 4324.0], [98.2, 4450.0], [98.3, 4625.0], [98.4, 4756.0], [98.5, 4847.0], [98.6, 5041.0], [98.7, 5101.0], [98.8, 5142.0], [98.9, 5433.0], [99.0, 5675.0], [99.1, 5819.0], [99.2, 6106.0], [99.3, 6720.0], [99.4, 7129.0], [99.5, 8697.0], [99.6, 10343.0], [99.7, 10443.0], [99.8, 16536.0], [99.9, 29605.0], [100.0, 65241.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 644.0, "series": [{"data": [[0.0, 5.0], [600.0, 238.0], [700.0, 110.0], [800.0, 98.0], [900.0, 97.0], [1000.0, 80.0], [1100.0, 63.0], [1200.0, 75.0], [1300.0, 59.0], [1400.0, 40.0], [1500.0, 40.0], [1600.0, 32.0], [1700.0, 31.0], [1800.0, 22.0], [1900.0, 15.0], [2000.0, 14.0], [2100.0, 17.0], [2300.0, 15.0], [2200.0, 10.0], [2400.0, 9.0], [2500.0, 13.0], [2600.0, 33.0], [2800.0, 6.0], [2700.0, 9.0], [2900.0, 9.0], [3000.0, 4.0], [3100.0, 6.0], [3300.0, 5.0], [3200.0, 4.0], [3400.0, 5.0], [3500.0, 2.0], [3700.0, 2.0], [3600.0, 3.0], [3800.0, 1.0], [3900.0, 4.0], [4100.0, 1.0], [4300.0, 2.0], [4500.0, 5.0], [4600.0, 2.0], [4800.0, 1.0], [5000.0, 2.0], [5100.0, 3.0], [4900.0, 2.0], [5300.0, 10.0], [5200.0, 2.0], [5400.0, 2.0], [5600.0, 6.0], [5500.0, 2.0], [5700.0, 1.0], [6000.0, 1.0], [6400.0, 2.0], [7200.0, 2.0], [7600.0, 1.0], [7800.0, 1.0], [8300.0, 1.0], [8800.0, 1.0], [9500.0, 2.0], [10600.0, 1.0], [11000.0, 1.0], [11900.0, 1.0], [13300.0, 2.0], [100.0, 644.0], [33400.0, 1.0], [200.0, 629.0], [58700.0, 1.0], [300.0, 461.0], [400.0, 409.0], [500.0, 304.0]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[65900.0, 1.0], [100.0, 3.0], [34700.0, 1.0], [35500.0, 1.0], [200.0, 33.0], [52700.0, 1.0], [60100.0, 1.0], [61500.0, 1.0], [300.0, 41.0], [400.0, 97.0], [500.0, 139.0], [600.0, 200.0], [700.0, 208.0], [800.0, 260.0], [900.0, 195.0], [1000.0, 193.0], [1100.0, 174.0], [1200.0, 153.0], [1300.0, 147.0], [1400.0, 149.0], [1500.0, 114.0], [1600.0, 86.0], [1700.0, 90.0], [1800.0, 79.0], [1900.0, 61.0], [2000.0, 75.0], [2100.0, 68.0], [2200.0, 58.0], [2300.0, 70.0], [2400.0, 57.0], [2500.0, 44.0], [2600.0, 47.0], [2800.0, 37.0], [2700.0, 48.0], [2900.0, 45.0], [3000.0, 42.0], [3100.0, 47.0], [3200.0, 24.0], [3300.0, 33.0], [3400.0, 39.0], [3500.0, 27.0], [3700.0, 23.0], [3600.0, 25.0], [3800.0, 15.0], [3900.0, 31.0], [4000.0, 14.0], [4200.0, 17.0], [4300.0, 23.0], [4100.0, 16.0], [4500.0, 11.0], [4600.0, 12.0], [4400.0, 14.0], [4800.0, 7.0], [4700.0, 12.0], [5100.0, 9.0], [5000.0, 14.0], [4900.0, 7.0], [5200.0, 15.0], [5300.0, 11.0], [5600.0, 14.0], [5500.0, 10.0], [5400.0, 4.0], [5800.0, 11.0], [5700.0, 7.0], [6000.0, 8.0], [6100.0, 13.0], [5900.0, 2.0], [6200.0, 8.0], [6300.0, 6.0], [6600.0, 11.0], [6400.0, 12.0], [6500.0, 4.0], [6700.0, 6.0], [6900.0, 10.0], [6800.0, 5.0], [7100.0, 7.0], [7000.0, 5.0], [7300.0, 5.0], [7200.0, 2.0], [7400.0, 2.0], [7500.0, 7.0], [7600.0, 4.0], [7900.0, 7.0], [7700.0, 4.0], [8100.0, 4.0], [8200.0, 2.0], [8500.0, 3.0], [8300.0, 1.0], [8400.0, 1.0], [8600.0, 1.0], [8800.0, 4.0], [9200.0, 2.0], [9100.0, 1.0], [9600.0, 1.0], [9400.0, 2.0], [9500.0, 4.0], [9700.0, 2.0], [9300.0, 1.0], [10100.0, 2.0], [9900.0, 1.0], [9800.0, 3.0], [10000.0, 2.0], [10200.0, 3.0], [10500.0, 6.0], [10700.0, 2.0], [10400.0, 1.0], [11100.0, 1.0], [11000.0, 1.0], [10900.0, 1.0], [11400.0, 3.0], [11300.0, 1.0], [11700.0, 2.0], [11600.0, 2.0], [12100.0, 1.0], [12000.0, 2.0], [12500.0, 1.0], [12300.0, 1.0], [13700.0, 2.0], [13500.0, 1.0], [13600.0, 1.0], [14100.0, 1.0], [14200.0, 1.0], [14400.0, 1.0], [14800.0, 1.0], [14700.0, 1.0], [15500.0, 1.0], [15600.0, 1.0], [15700.0, 1.0], [16200.0, 1.0], [17000.0, 1.0], [18400.0, 2.0], [17900.0, 1.0], [18200.0, 2.0], [19300.0, 1.0], [19000.0, 1.0], [20000.0, 1.0], [20300.0, 1.0], [19900.0, 1.0], [27600.0, 1.0], [26800.0, 1.0], [31100.0, 1.0], [31600.0, 1.0], [34400.0, 1.0], [42200.0, 1.0], [65000.0, 1.0]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[0.0, 90.0], [100.0, 282.0], [34500.0, 2.0], [200.0, 356.0], [300.0, 353.0], [400.0, 334.0], [500.0, 253.0], [600.0, 215.0], [700.0, 207.0], [800.0, 163.0], [900.0, 135.0], [1000.0, 84.0], [1100.0, 93.0], [1200.0, 89.0], [1300.0, 59.0], [1400.0, 55.0], [1500.0, 59.0], [1600.0, 46.0], [1700.0, 48.0], [1800.0, 35.0], [1900.0, 41.0], [2000.0, 40.0], [2100.0, 45.0], [2200.0, 28.0], [2300.0, 31.0], [2400.0, 32.0], [2500.0, 27.0], [2600.0, 21.0], [2800.0, 23.0], [2700.0, 21.0], [2900.0, 24.0], [3000.0, 16.0], [3100.0, 22.0], [3300.0, 24.0], [3200.0, 13.0], [3400.0, 12.0], [3500.0, 9.0], [3600.0, 11.0], [3700.0, 11.0], [3800.0, 12.0], [3900.0, 6.0], [4000.0, 6.0], [4200.0, 10.0], [4300.0, 15.0], [4100.0, 11.0], [4500.0, 7.0], [4600.0, 12.0], [4400.0, 5.0], [4800.0, 11.0], [4700.0, 7.0], [5000.0, 5.0], [4900.0, 8.0], [5100.0, 3.0], [5200.0, 7.0], [5300.0, 8.0], [5400.0, 3.0], [5600.0, 7.0], [5500.0, 10.0], [5800.0, 15.0], [5700.0, 9.0], [5900.0, 4.0], [6000.0, 5.0], [6100.0, 6.0], [6200.0, 3.0], [6300.0, 2.0], [6400.0, 4.0], [6600.0, 2.0], [6500.0, 1.0], [6700.0, 5.0], [6800.0, 2.0], [6900.0, 5.0], [7100.0, 3.0], [7000.0, 2.0], [7400.0, 3.0], [7200.0, 3.0], [7600.0, 3.0], [7500.0, 3.0], [7900.0, 4.0], [7800.0, 4.0], [7700.0, 2.0], [8000.0, 1.0], [8100.0, 1.0], [8200.0, 3.0], [8700.0, 3.0], [8400.0, 2.0], [8500.0, 4.0], [8600.0, 1.0], [8800.0, 1.0], [9000.0, 3.0], [9100.0, 6.0], [9200.0, 3.0], [8900.0, 1.0], [9500.0, 3.0], [9400.0, 1.0], [9300.0, 1.0], [9900.0, 1.0], [9800.0, 1.0], [10500.0, 1.0], [11000.0, 1.0], [10900.0, 1.0], [12300.0, 1.0], [12600.0, 1.0], [12800.0, 1.0], [15000.0, 1.0], [16100.0, 1.0], [18100.0, 1.0], [17500.0, 1.0], [19000.0, 1.0], [18500.0, 1.0], [20000.0, 1.0], [24000.0, 1.0], [32200.0, 1.0], [34000.0, 1.0], [51000.0, 1.0], [65200.0, 1.0]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[0.0, 356.0], [600.0, 203.0], [700.0, 150.0], [800.0, 99.0], [900.0, 112.0], [1000.0, 66.0], [1100.0, 57.0], [1200.0, 67.0], [1300.0, 53.0], [1400.0, 50.0], [1500.0, 32.0], [1600.0, 17.0], [1700.0, 16.0], [1800.0, 21.0], [1900.0, 14.0], [2000.0, 15.0], [2100.0, 15.0], [2200.0, 20.0], [2300.0, 12.0], [2400.0, 9.0], [2500.0, 19.0], [2600.0, 7.0], [2800.0, 10.0], [2700.0, 9.0], [2900.0, 4.0], [3000.0, 3.0], [3100.0, 6.0], [3300.0, 5.0], [3200.0, 5.0], [3400.0, 5.0], [3500.0, 4.0], [3700.0, 5.0], [3600.0, 8.0], [3800.0, 4.0], [3900.0, 2.0], [4000.0, 4.0], [4300.0, 6.0], [4100.0, 4.0], [4200.0, 3.0], [4400.0, 3.0], [4600.0, 4.0], [4500.0, 1.0], [4800.0, 5.0], [4700.0, 1.0], [5100.0, 4.0], [5000.0, 5.0], [4900.0, 1.0], [5200.0, 2.0], [5300.0, 1.0], [5500.0, 2.0], [5600.0, 2.0], [5400.0, 1.0], [5700.0, 2.0], [5800.0, 2.0], [5900.0, 2.0], [6100.0, 1.0], [6200.0, 1.0], [6600.0, 1.0], [6500.0, 1.0], [6800.0, 2.0], [6700.0, 1.0], [7100.0, 1.0], [7400.0, 1.0], [8000.0, 1.0], [8600.0, 1.0], [8200.0, 1.0], [9700.0, 1.0], [10200.0, 2.0], [10300.0, 3.0], [10700.0, 1.0], [10400.0, 1.0], [13600.0, 1.0], [13800.0, 1.0], [16500.0, 1.0], [18200.0, 1.0], [18500.0, 1.0], [23300.0, 1.0], [100.0, 542.0], [29600.0, 2.0], [200.0, 546.0], [65200.0, 1.0], [64300.0, 1.0], [300.0, 468.0], [400.0, 313.0], [500.0, 258.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 65900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3402.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 5970.0, "series": [{"data": [[0.0, 5970.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 5443.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3402.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.5, "minX": 1.5584577E12, "maxY": 80.0, "series": [{"data": [[1.55845794E12, 80.0], [1.55845776E12, 80.0], [1.55845782E12, 80.0], [1.5584577E12, 80.0], [1.558458E12, 78.51741803278692], [1.55845806E12, 2.5], [1.55845788E12, 80.0]], "isOverall": false, "label": "distributed-test", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55845806E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 201.0, "minX": 2.0, "maxY": 65264.0, "series": [{"data": [[33.0, 572.0], [38.0, 1891.0], [40.0, 616.0], [42.0, 431.0], [44.0, 3918.0], [11.0, 599.0], [49.0, 1172.0], [52.0, 536.0], [14.0, 1121.0], [15.0, 3269.0], [67.0, 512.0], [66.0, 443.0], [64.0, 776.0], [16.0, 201.0], [17.0, 492.0], [79.0, 2955.0], [78.0, 2226.5], [19.0, 3681.0], [80.0, 730.8189773038017], [5.0, 254.0], [21.0, 3034.0], [26.0, 1316.0], [27.0, 3556.0], [7.0, 929.0]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[79.71374253123301, 736.3451928299843]], "isOverall": false, "label": "BuyBook-Aggregated", "isController": false}, {"data": [[32.0, 4225.0], [8.0, 9510.0], [9.0, 10218.0], [38.0, 4649.0], [40.0, 5544.0], [48.0, 4397.0], [3.0, 65055.0], [53.0, 5742.0], [52.0, 4330.0], [59.0, 4530.0], [61.0, 6187.0], [60.0, 5520.0], [62.0, 5897.0], [65.0, 4779.0], [69.0, 3601.5], [73.0, 4729.0], [78.0, 3834.5], [80.0, 2257.2053426875314], [20.0, 3867.0], [22.0, 4316.0], [23.0, 5838.0], [25.0, 4781.0], [29.0, 4283.0], [30.0, 4274.0]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[79.72155287817942, 2294.9274431057543]], "isOverall": false, "label": "SearchBooks-Aggregated", "isController": false}, {"data": [[41.0, 2076.0], [45.0, 4672.0], [44.0, 4325.0], [46.0, 8266.0], [12.0, 7089.0], [13.0, 7086.0], [54.0, 2190.0], [56.0, 3038.0], [64.0, 7814.0], [4.0, 65264.0], [70.0, 4517.0], [18.0, 8762.0], [80.0, 1365.6668472372733], [6.0, 10546.0], [31.0, 3476.0]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[79.8337830545062, 1398.0472207231553]], "isOverall": false, "label": "GetBook-Aggregated", "isController": false}, {"data": [[2.0, 64362.0], [73.0, 4226.0], [78.0, 3169.0], [80.0, 743.6290059750127], [10.0, 7129.0], [47.0, 4240.0], [52.0, 3669.0], [55.0, 3806.0], [57.0, 2218.0], [58.0, 3649.0], [29.0, 4246.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[79.9081798483207, 768.8938244853728]], "isOverall": false, "label": "Login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 80.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4.933333333333334, "minX": 1.5584577E12, "maxY": 342195.25, "series": [{"data": [[1.55845794E12, 342195.25], [1.55845776E12, 295510.31666666665], [1.55845782E12, 272332.68333333335], [1.5584577E12, 73504.46666666666], [1.558458E12, 187379.8], [1.55845806E12, 268.9166666666667], [1.55845788E12, 245456.05]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.55845794E12, 8931.083333333334], [1.55845776E12, 7756.6], [1.55845782E12, 7119.95], [1.5584577E12, 1830.15], [1.558458E12, 4871.0], [1.55845806E12, 4.933333333333334], [1.55845788E12, 6451.916666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55845806E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 585.4725643896982, "minX": 1.5584577E12, "maxY": 65055.0, "series": [{"data": [[1.55845794E12, 601.2662921348316], [1.55845776E12, 734.2287917737791], [1.55845782E12, 731.2496493688637], [1.5584577E12, 1685.953488372093], [1.558458E12, 666.971193415638], [1.55845788E12, 729.9424572317246]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[1.55845794E12, 2053.2214839424137], [1.55845776E12, 2113.4704370179984], [1.55845782E12, 2355.899581589959], [1.5584577E12, 3292.1717171717164], [1.558458E12, 2097.8205645161283], [1.55845806E12, 65055.0], [1.55845788E12, 2533.6619937694695]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[1.55845794E12, 1125.8208286674123], [1.55845776E12, 1420.2176165803119], [1.55845782E12, 1374.6111888111886], [1.5584577E12, 2099.058201058202], [1.558458E12, 1426.1024590163918], [1.55845788E12, 1546.8258859784278]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[1.55845794E12, 585.4725643896982], [1.55845776E12, 649.5661103979461], [1.55845782E12, 944.6242937853103], [1.5584577E12, 907.4576271186442], [1.558458E12, 737.3319502074693], [1.55845806E12, 64362.0], [1.55845788E12, 860.0414110429431]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55845806E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 547.5610302351629, "minX": 1.5584577E12, "maxY": 65015.0, "series": [{"data": [[1.55845794E12, 601.2617977528082], [1.55845776E12, 734.214652956298], [1.55845782E12, 731.2440392706876], [1.5584577E12, 1685.9244186046503], [1.558458E12, 666.9629629629629], [1.55845788E12, 729.9346811819596]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[1.55845794E12, 871.2547065337775], [1.55845776E12, 916.8650385604118], [1.55845782E12, 970.6945606694559], [1.5584577E12, 2098.656565656566], [1.558458E12, 984.778225806452], [1.55845806E12, 65015.0], [1.55845788E12, 1171.4267912772589]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[1.55845794E12, 702.0470324748042], [1.55845776E12, 928.1049222797913], [1.55845782E12, 870.9412587412586], [1.5584577E12, 1654.105820105819], [1.558458E12, 955.7336065573769], [1.55845788E12, 982.5901386748848]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[1.55845794E12, 547.5610302351629], [1.55845776E12, 605.024390243903], [1.55845782E12, 879.0833333333337], [1.5584577E12, 868.7627118644068], [1.558458E12, 703.4211618257257], [1.55845806E12, 64303.0], [1.55845788E12, 759.3634969325151]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55845806E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 88.06629213483166, "minX": 1.5584577E12, "maxY": 64829.0, "series": [{"data": [[1.55845794E12, 88.06629213483166], [1.55845776E12, 102.13239074550144], [1.55845782E12, 129.96213183730717], [1.5584577E12, 227.45930232558135], [1.558458E12, 148.42592592592598], [1.55845788E12, 115.99844479004673]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[1.55845794E12, 375.2901439645626], [1.55845776E12, 324.6696658097685], [1.55845782E12, 335.69316596931617], [1.5584577E12, 319.17171717171726], [1.558458E12, 387.6129032258065], [1.55845806E12, 64829.0], [1.55845788E12, 451.3785046728967]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[1.55845794E12, 126.67861142217251], [1.55845776E12, 151.91580310880843], [1.55845782E12, 244.71188811188838], [1.5584577E12, 491.67195767195744], [1.558458E12, 271.51844262295083], [1.55845788E12, 198.8767334360553]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[1.55845794E12, 99.6270996640538], [1.55845776E12, 127.80744544287516], [1.55845782E12, 258.998587570621], [1.5584577E12, 237.81920903954799], [1.558458E12, 163.41286307053943], [1.55845806E12, 64172.0], [1.55845788E12, 231.0552147239267]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55845806E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 51.0, "minX": 1.5584577E12, "maxY": 65922.0, "series": [{"data": [[1.55845794E12, 65922.0], [1.55845776E12, 51061.0], [1.55845782E12, 65241.0], [1.5584577E12, 11179.0], [1.558458E12, 65264.0], [1.55845806E12, 65055.0], [1.55845788E12, 52710.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.55845794E12, 52.0], [1.55845776E12, 54.0], [1.55845782E12, 51.0], [1.5584577E12, 93.0], [1.558458E12, 53.0], [1.55845806E12, 64362.0], [1.55845788E12, 52.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.55845794E12, 2349.0], [1.55845776E12, 2635.4000000000005], [1.55845782E12, 3188.3999999999987], [1.5584577E12, 5166.300000000006], [1.558458E12, 2981.7000000000007], [1.55845806E12, 65055.0], [1.55845788E12, 2991.3]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.55845794E12, 6610.799999999995], [1.55845776E12, 10120.760000000015], [1.55845782E12, 8651.78000000001], [1.5584577E12, 8261.67], [1.558458E12, 7892.020000000004], [1.55845806E12, 65055.0], [1.55845788E12, 14771.690000000013]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.55845794E12, 3362.0], [1.55845776E12, 4220.5999999999985], [1.55845782E12, 4825.599999999997], [1.5584577E12, 5882.6], [1.558458E12, 4060.6499999999946], [1.55845806E12, 65055.0], [1.55845788E12, 5546.6]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55845806E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 249.0, "minX": 1.0, "maxY": 7129.0, "series": [{"data": [[2.0, 4072.5], [3.0, 3602.0], [4.0, 3065.0], [5.0, 948.0], [6.0, 2855.0], [7.0, 2912.0], [9.0, 2141.0], [10.0, 4279.5], [11.0, 3554.0], [12.0, 1837.0], [15.0, 1938.0], [16.0, 1329.0], [17.0, 777.0], [18.0, 1291.5], [21.0, 2802.0], [22.0, 1053.5], [23.0, 928.0], [24.0, 873.0], [26.0, 2029.0], [28.0, 2280.5], [29.0, 1744.5], [30.0, 3071.5], [31.0, 3567.0], [33.0, 2273.5], [32.0, 3674.0], [35.0, 1597.0], [34.0, 1074.5], [37.0, 1733.0], [36.0, 2452.0], [39.0, 1319.0], [38.0, 978.0], [40.0, 1436.5], [41.0, 951.0], [43.0, 1404.0], [42.0, 1483.0], [45.0, 936.5], [44.0, 844.0], [46.0, 955.0], [47.0, 886.0], [49.0, 878.0], [48.0, 479.0], [51.0, 846.0], [50.0, 524.0], [52.0, 1170.5], [53.0, 249.0], [55.0, 578.0], [54.0, 627.0], [56.0, 482.0], [57.0, 637.5], [59.0, 660.0], [58.0, 871.5], [60.0, 473.5], [61.0, 434.0], [62.0, 484.5], [63.0, 689.0], [67.0, 532.5], [65.0, 543.0], [64.0, 666.5], [66.0, 259.5], [68.0, 488.0], [70.0, 630.5], [69.0, 776.0], [71.0, 250.0], [73.0, 979.0], [75.0, 537.0], [72.0, 399.0], [77.0, 466.5], [78.0, 483.5], [76.0, 675.0], [79.0, 1029.0], [80.0, 415.0], [82.0, 740.0], [81.0, 591.0], [83.0, 575.5], [85.0, 529.0], [84.0, 699.5], [86.0, 568.5], [87.0, 479.0], [88.0, 366.0], [90.0, 329.5], [96.0, 554.0], [99.0, 513.0], [101.0, 444.5], [100.0, 577.5], [105.0, 503.0], [109.0, 474.0], [111.0, 402.0], [108.0, 610.5], [114.0, 417.0], [115.0, 505.0], [113.0, 464.0], [112.0, 397.0], [121.0, 365.0], [124.0, 452.0], [130.0, 389.5], [144.0, 449.0], [1.0, 7129.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 144.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 200.5, "minX": 1.0, "maxY": 4427.0, "series": [{"data": [[2.0, 3199.0], [3.0, 2625.0], [4.0, 1649.5], [5.0, 837.0], [6.0, 1412.0], [7.0, 1034.0], [9.0, 1306.0], [10.0, 3657.5], [11.0, 1511.0], [12.0, 1119.5], [15.0, 1153.5], [16.0, 1068.5], [17.0, 686.5], [18.0, 943.5], [21.0, 1057.0], [22.0, 672.5], [23.0, 751.5], [24.0, 671.0], [26.0, 905.5], [28.0, 1470.0], [29.0, 1465.5], [30.0, 1680.5], [31.0, 1316.0], [33.0, 1313.0], [32.0, 1750.5], [35.0, 1287.0], [34.0, 617.0], [37.0, 598.0], [36.0, 1841.0], [39.0, 1229.0], [38.0, 611.5], [40.0, 660.0], [41.0, 830.5], [43.0, 1025.0], [42.0, 1390.0], [45.0, 674.0], [44.0, 428.5], [46.0, 757.5], [47.0, 568.5], [49.0, 673.0], [48.0, 218.5], [51.0, 608.0], [50.0, 232.0], [52.0, 698.0], [53.0, 213.0], [55.0, 537.0], [54.0, 565.5], [56.0, 287.5], [57.0, 354.0], [59.0, 454.0], [58.0, 527.0], [60.0, 247.0], [61.0, 280.0], [62.0, 318.0], [63.0, 406.0], [67.0, 396.0], [65.0, 443.5], [64.0, 441.0], [66.0, 200.5], [68.0, 281.0], [70.0, 438.5], [69.0, 413.0], [71.0, 230.0], [73.0, 959.0], [75.0, 482.0], [72.0, 286.5], [77.0, 374.0], [78.0, 385.5], [76.0, 498.0], [79.0, 944.0], [80.0, 370.0], [82.0, 637.5], [81.0, 531.5], [83.0, 503.0], [85.0, 497.0], [84.0, 609.0], [86.0, 545.0], [87.0, 463.0], [88.0, 312.0], [90.0, 322.0], [96.0, 533.5], [99.0, 455.0], [101.0, 384.0], [100.0, 522.5], [105.0, 485.0], [109.0, 448.0], [111.0, 395.0], [108.0, 516.0], [114.0, 351.0], [115.0, 471.0], [113.0, 450.0], [112.0, 386.0], [121.0, 361.0], [124.0, 373.0], [130.0, 383.0], [144.0, 394.5], [1.0, 4427.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 144.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 13.283333333333333, "minX": 1.5584577E12, "maxY": 59.666666666666664, "series": [{"data": [[1.55845794E12, 59.666666666666664], [1.55845776E12, 51.75], [1.55845782E12, 47.55], [1.5584577E12, 13.283333333333333], [1.558458E12, 31.583333333333332], [1.55845788E12, 43.083333333333336]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.558458E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.5584577E12, "maxY": 49.96666666666667, "series": [{"data": [[1.55845794E12, 49.96666666666667], [1.55845776E12, 43.18333333333333], [1.55845782E12, 39.75], [1.5584577E12, 10.616666666666667], [1.558458E12, 27.35], [1.55845806E12, 0.03333333333333333], [1.55845788E12, 36.06666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.55845794E12, 9.683333333333334], [1.55845776E12, 8.6], [1.55845782E12, 7.8], [1.5584577E12, 1.65], [1.558458E12, 5.183333333333334], [1.55845788E12, 7.033333333333333]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55845806E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.5584577E12, "maxY": 15.05, "series": [{"data": [[1.55845794E12, 14.883333333333333], [1.55845776E12, 12.866666666666667], [1.55845782E12, 11.916666666666666], [1.5584577E12, 3.15], [1.558458E12, 8.133333333333333], [1.55845788E12, 10.816666666666666]], "isOverall": false, "label": "GetBook-success", "isController": false}, {"data": [[1.55845794E12, 14.833333333333334], [1.55845776E12, 12.966666666666667], [1.55845782E12, 11.883333333333333], [1.5584577E12, 2.8666666666666667], [1.558458E12, 8.1], [1.55845788E12, 10.716666666666667]], "isOverall": false, "label": "BuyBook-success", "isController": false}, {"data": [[1.55845794E12, 15.05], [1.55845776E12, 12.966666666666667], [1.55845782E12, 11.95], [1.5584577E12, 3.3], [1.558458E12, 8.266666666666667], [1.55845806E12, 0.016666666666666666], [1.55845788E12, 10.7]], "isOverall": false, "label": "SearchBooks-success", "isController": false}, {"data": [[1.55845794E12, 14.883333333333333], [1.55845776E12, 12.983333333333333], [1.55845782E12, 11.8], [1.5584577E12, 2.95], [1.558458E12, 8.033333333333333], [1.55845806E12, 0.016666666666666666], [1.55845788E12, 10.866666666666667]], "isOverall": false, "label": "Login-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55845806E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.5584577E12, "maxY": 59.65, "series": [{"data": [[1.55845794E12, 59.65], [1.55845776E12, 51.78333333333333], [1.55845782E12, 47.55], [1.5584577E12, 12.266666666666667], [1.558458E12, 32.53333333333333], [1.55845806E12, 0.03333333333333333], [1.55845788E12, 43.1]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55845806E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

