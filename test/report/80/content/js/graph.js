/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 65.0, "minX": 0.0, "maxY": 93182.0, "series": [{"data": [[0.0, 67.0], [0.1, 91.0], [0.2, 107.0], [0.3, 109.0], [0.4, 116.0], [0.5, 120.0], [0.6, 124.0], [0.7, 129.0], [0.8, 131.0], [0.9, 134.0], [1.0, 135.0], [1.1, 137.0], [1.2, 138.0], [1.3, 138.0], [1.4, 140.0], [1.5, 142.0], [1.6, 143.0], [1.7, 143.0], [1.8, 145.0], [1.9, 145.0], [2.0, 145.0], [2.1, 146.0], [2.2, 147.0], [2.3, 147.0], [2.4, 147.0], [2.5, 147.0], [2.6, 148.0], [2.7, 149.0], [2.8, 150.0], [2.9, 150.0], [3.0, 151.0], [3.1, 151.0], [3.2, 152.0], [3.3, 152.0], [3.4, 152.0], [3.5, 152.0], [3.6, 153.0], [3.7, 153.0], [3.8, 154.0], [3.9, 154.0], [4.0, 154.0], [4.1, 155.0], [4.2, 155.0], [4.3, 155.0], [4.4, 156.0], [4.5, 156.0], [4.6, 157.0], [4.7, 157.0], [4.8, 157.0], [4.9, 158.0], [5.0, 158.0], [5.1, 158.0], [5.2, 158.0], [5.3, 159.0], [5.4, 159.0], [5.5, 159.0], [5.6, 159.0], [5.7, 160.0], [5.8, 160.0], [5.9, 160.0], [6.0, 160.0], [6.1, 160.0], [6.2, 161.0], [6.3, 161.0], [6.4, 161.0], [6.5, 162.0], [6.6, 162.0], [6.7, 163.0], [6.8, 163.0], [6.9, 163.0], [7.0, 163.0], [7.1, 164.0], [7.2, 164.0], [7.3, 165.0], [7.4, 165.0], [7.5, 166.0], [7.6, 166.0], [7.7, 166.0], [7.8, 166.0], [7.9, 167.0], [8.0, 167.0], [8.1, 167.0], [8.2, 167.0], [8.3, 168.0], [8.4, 168.0], [8.5, 168.0], [8.6, 168.0], [8.7, 168.0], [8.8, 169.0], [8.9, 169.0], [9.0, 169.0], [9.1, 169.0], [9.2, 169.0], [9.3, 170.0], [9.4, 170.0], [9.5, 170.0], [9.6, 170.0], [9.7, 170.0], [9.8, 171.0], [9.9, 171.0], [10.0, 171.0], [10.1, 171.0], [10.2, 171.0], [10.3, 172.0], [10.4, 172.0], [10.5, 172.0], [10.6, 172.0], [10.7, 172.0], [10.8, 173.0], [10.9, 173.0], [11.0, 173.0], [11.1, 173.0], [11.2, 173.0], [11.3, 174.0], [11.4, 174.0], [11.5, 174.0], [11.6, 174.0], [11.7, 174.0], [11.8, 174.0], [11.9, 174.0], [12.0, 175.0], [12.1, 175.0], [12.2, 175.0], [12.3, 175.0], [12.4, 175.0], [12.5, 175.0], [12.6, 176.0], [12.7, 176.0], [12.8, 176.0], [12.9, 176.0], [13.0, 176.0], [13.1, 176.0], [13.2, 176.0], [13.3, 176.0], [13.4, 176.0], [13.5, 177.0], [13.6, 177.0], [13.7, 177.0], [13.8, 177.0], [13.9, 177.0], [14.0, 177.0], [14.1, 178.0], [14.2, 178.0], [14.3, 178.0], [14.4, 178.0], [14.5, 178.0], [14.6, 178.0], [14.7, 178.0], [14.8, 178.0], [14.9, 179.0], [15.0, 179.0], [15.1, 179.0], [15.2, 179.0], [15.3, 179.0], [15.4, 179.0], [15.5, 179.0], [15.6, 179.0], [15.7, 179.0], [15.8, 180.0], [15.9, 180.0], [16.0, 180.0], [16.1, 180.0], [16.2, 180.0], [16.3, 180.0], [16.4, 180.0], [16.5, 180.0], [16.6, 180.0], [16.7, 181.0], [16.8, 181.0], [16.9, 181.0], [17.0, 181.0], [17.1, 181.0], [17.2, 181.0], [17.3, 181.0], [17.4, 181.0], [17.5, 181.0], [17.6, 182.0], [17.7, 182.0], [17.8, 182.0], [17.9, 182.0], [18.0, 182.0], [18.1, 182.0], [18.2, 182.0], [18.3, 182.0], [18.4, 182.0], [18.5, 183.0], [18.6, 183.0], [18.7, 183.0], [18.8, 183.0], [18.9, 183.0], [19.0, 183.0], [19.1, 183.0], [19.2, 183.0], [19.3, 183.0], [19.4, 183.0], [19.5, 183.0], [19.6, 183.0], [19.7, 184.0], [19.8, 184.0], [19.9, 184.0], [20.0, 184.0], [20.1, 184.0], [20.2, 184.0], [20.3, 184.0], [20.4, 184.0], [20.5, 185.0], [20.6, 185.0], [20.7, 185.0], [20.8, 185.0], [20.9, 185.0], [21.0, 185.0], [21.1, 185.0], [21.2, 185.0], [21.3, 185.0], [21.4, 186.0], [21.5, 186.0], [21.6, 186.0], [21.7, 186.0], [21.8, 186.0], [21.9, 186.0], [22.0, 186.0], [22.1, 186.0], [22.2, 186.0], [22.3, 186.0], [22.4, 186.0], [22.5, 186.0], [22.6, 186.0], [22.7, 187.0], [22.8, 187.0], [22.9, 187.0], [23.0, 187.0], [23.1, 187.0], [23.2, 187.0], [23.3, 187.0], [23.4, 187.0], [23.5, 187.0], [23.6, 187.0], [23.7, 187.0], [23.8, 187.0], [23.9, 187.0], [24.0, 188.0], [24.1, 188.0], [24.2, 188.0], [24.3, 188.0], [24.4, 188.0], [24.5, 188.0], [24.6, 188.0], [24.7, 188.0], [24.8, 188.0], [24.9, 188.0], [25.0, 188.0], [25.1, 189.0], [25.2, 189.0], [25.3, 189.0], [25.4, 189.0], [25.5, 189.0], [25.6, 189.0], [25.7, 189.0], [25.8, 189.0], [25.9, 189.0], [26.0, 189.0], [26.1, 189.0], [26.2, 189.0], [26.3, 189.0], [26.4, 189.0], [26.5, 189.0], [26.6, 190.0], [26.7, 190.0], [26.8, 190.0], [26.9, 190.0], [27.0, 190.0], [27.1, 190.0], [27.2, 190.0], [27.3, 190.0], [27.4, 190.0], [27.5, 190.0], [27.6, 190.0], [27.7, 190.0], [27.8, 190.0], [27.9, 190.0], [28.0, 191.0], [28.1, 191.0], [28.2, 191.0], [28.3, 191.0], [28.4, 191.0], [28.5, 191.0], [28.6, 191.0], [28.7, 191.0], [28.8, 191.0], [28.9, 191.0], [29.0, 192.0], [29.1, 192.0], [29.2, 192.0], [29.3, 192.0], [29.4, 192.0], [29.5, 192.0], [29.6, 192.0], [29.7, 192.0], [29.8, 192.0], [29.9, 192.0], [30.0, 193.0], [30.1, 193.0], [30.2, 193.0], [30.3, 193.0], [30.4, 193.0], [30.5, 193.0], [30.6, 193.0], [30.7, 193.0], [30.8, 193.0], [30.9, 193.0], [31.0, 193.0], [31.1, 193.0], [31.2, 194.0], [31.3, 194.0], [31.4, 194.0], [31.5, 194.0], [31.6, 194.0], [31.7, 194.0], [31.8, 194.0], [31.9, 194.0], [32.0, 194.0], [32.1, 194.0], [32.2, 194.0], [32.3, 195.0], [32.4, 195.0], [32.5, 195.0], [32.6, 195.0], [32.7, 195.0], [32.8, 195.0], [32.9, 195.0], [33.0, 195.0], [33.1, 195.0], [33.2, 195.0], [33.3, 196.0], [33.4, 196.0], [33.5, 196.0], [33.6, 196.0], [33.7, 196.0], [33.8, 196.0], [33.9, 196.0], [34.0, 196.0], [34.1, 196.0], [34.2, 196.0], [34.3, 197.0], [34.4, 197.0], [34.5, 197.0], [34.6, 197.0], [34.7, 197.0], [34.8, 197.0], [34.9, 197.0], [35.0, 197.0], [35.1, 197.0], [35.2, 197.0], [35.3, 197.0], [35.4, 198.0], [35.5, 198.0], [35.6, 198.0], [35.7, 198.0], [35.8, 198.0], [35.9, 198.0], [36.0, 198.0], [36.1, 198.0], [36.2, 199.0], [36.3, 199.0], [36.4, 199.0], [36.5, 199.0], [36.6, 199.0], [36.7, 199.0], [36.8, 199.0], [36.9, 199.0], [37.0, 199.0], [37.1, 199.0], [37.2, 199.0], [37.3, 199.0], [37.4, 200.0], [37.5, 200.0], [37.6, 200.0], [37.7, 200.0], [37.8, 200.0], [37.9, 200.0], [38.0, 200.0], [38.1, 200.0], [38.2, 200.0], [38.3, 200.0], [38.4, 201.0], [38.5, 201.0], [38.6, 201.0], [38.7, 201.0], [38.8, 201.0], [38.9, 201.0], [39.0, 201.0], [39.1, 201.0], [39.2, 201.0], [39.3, 202.0], [39.4, 202.0], [39.5, 202.0], [39.6, 202.0], [39.7, 202.0], [39.8, 202.0], [39.9, 202.0], [40.0, 202.0], [40.1, 203.0], [40.2, 203.0], [40.3, 203.0], [40.4, 203.0], [40.5, 203.0], [40.6, 203.0], [40.7, 203.0], [40.8, 203.0], [40.9, 203.0], [41.0, 203.0], [41.1, 203.0], [41.2, 203.0], [41.3, 204.0], [41.4, 204.0], [41.5, 204.0], [41.6, 204.0], [41.7, 204.0], [41.8, 204.0], [41.9, 204.0], [42.0, 204.0], [42.1, 204.0], [42.2, 204.0], [42.3, 204.0], [42.4, 205.0], [42.5, 205.0], [42.6, 205.0], [42.7, 205.0], [42.8, 205.0], [42.9, 205.0], [43.0, 205.0], [43.1, 205.0], [43.2, 206.0], [43.3, 206.0], [43.4, 206.0], [43.5, 206.0], [43.6, 206.0], [43.7, 206.0], [43.8, 206.0], [43.9, 206.0], [44.0, 206.0], [44.1, 206.0], [44.2, 206.0], [44.3, 206.0], [44.4, 207.0], [44.5, 207.0], [44.6, 207.0], [44.7, 207.0], [44.8, 207.0], [44.9, 207.0], [45.0, 207.0], [45.1, 207.0], [45.2, 207.0], [45.3, 208.0], [45.4, 208.0], [45.5, 208.0], [45.6, 208.0], [45.7, 208.0], [45.8, 208.0], [45.9, 208.0], [46.0, 209.0], [46.1, 209.0], [46.2, 209.0], [46.3, 209.0], [46.4, 209.0], [46.5, 209.0], [46.6, 209.0], [46.7, 209.0], [46.8, 210.0], [46.9, 210.0], [47.0, 210.0], [47.1, 210.0], [47.2, 210.0], [47.3, 210.0], [47.4, 210.0], [47.5, 210.0], [47.6, 211.0], [47.7, 211.0], [47.8, 211.0], [47.9, 211.0], [48.0, 211.0], [48.1, 211.0], [48.2, 211.0], [48.3, 212.0], [48.4, 212.0], [48.5, 212.0], [48.6, 212.0], [48.7, 212.0], [48.8, 212.0], [48.9, 213.0], [49.0, 213.0], [49.1, 213.0], [49.2, 213.0], [49.3, 213.0], [49.4, 214.0], [49.5, 214.0], [49.6, 214.0], [49.7, 214.0], [49.8, 214.0], [49.9, 214.0], [50.0, 215.0], [50.1, 215.0], [50.2, 215.0], [50.3, 215.0], [50.4, 215.0], [50.5, 215.0], [50.6, 215.0], [50.7, 216.0], [50.8, 216.0], [50.9, 216.0], [51.0, 216.0], [51.1, 216.0], [51.2, 216.0], [51.3, 217.0], [51.4, 217.0], [51.5, 217.0], [51.6, 217.0], [51.7, 217.0], [51.8, 218.0], [51.9, 218.0], [52.0, 218.0], [52.1, 218.0], [52.2, 218.0], [52.3, 218.0], [52.4, 219.0], [52.5, 219.0], [52.6, 219.0], [52.7, 219.0], [52.8, 220.0], [52.9, 220.0], [53.0, 220.0], [53.1, 220.0], [53.2, 220.0], [53.3, 221.0], [53.4, 221.0], [53.5, 221.0], [53.6, 222.0], [53.7, 222.0], [53.8, 222.0], [53.9, 222.0], [54.0, 222.0], [54.1, 223.0], [54.2, 223.0], [54.3, 223.0], [54.4, 223.0], [54.5, 223.0], [54.6, 224.0], [54.7, 224.0], [54.8, 224.0], [54.9, 224.0], [55.0, 224.0], [55.1, 225.0], [55.2, 225.0], [55.3, 225.0], [55.4, 225.0], [55.5, 225.0], [55.6, 225.0], [55.7, 226.0], [55.8, 226.0], [55.9, 226.0], [56.0, 226.0], [56.1, 227.0], [56.2, 227.0], [56.3, 227.0], [56.4, 227.0], [56.5, 227.0], [56.6, 227.0], [56.7, 228.0], [56.8, 228.0], [56.9, 228.0], [57.0, 228.0], [57.1, 228.0], [57.2, 228.0], [57.3, 229.0], [57.4, 229.0], [57.5, 229.0], [57.6, 230.0], [57.7, 230.0], [57.8, 230.0], [57.9, 230.0], [58.0, 230.0], [58.1, 231.0], [58.2, 231.0], [58.3, 231.0], [58.4, 231.0], [58.5, 231.0], [58.6, 232.0], [58.7, 232.0], [58.8, 232.0], [58.9, 232.0], [59.0, 232.0], [59.1, 232.0], [59.2, 232.0], [59.3, 233.0], [59.4, 233.0], [59.5, 233.0], [59.6, 233.0], [59.7, 233.0], [59.8, 234.0], [59.9, 234.0], [60.0, 234.0], [60.1, 234.0], [60.2, 234.0], [60.3, 235.0], [60.4, 235.0], [60.5, 235.0], [60.6, 236.0], [60.7, 236.0], [60.8, 236.0], [60.9, 236.0], [61.0, 237.0], [61.1, 237.0], [61.2, 237.0], [61.3, 238.0], [61.4, 238.0], [61.5, 238.0], [61.6, 238.0], [61.7, 238.0], [61.8, 239.0], [61.9, 239.0], [62.0, 239.0], [62.1, 239.0], [62.2, 240.0], [62.3, 240.0], [62.4, 240.0], [62.5, 240.0], [62.6, 241.0], [62.7, 241.0], [62.8, 242.0], [62.9, 242.0], [63.0, 242.0], [63.1, 243.0], [63.2, 243.0], [63.3, 243.0], [63.4, 244.0], [63.5, 244.0], [63.6, 244.0], [63.7, 244.0], [63.8, 245.0], [63.9, 245.0], [64.0, 245.0], [64.1, 245.0], [64.2, 246.0], [64.3, 246.0], [64.4, 247.0], [64.5, 247.0], [64.6, 247.0], [64.7, 248.0], [64.8, 248.0], [64.9, 248.0], [65.0, 248.0], [65.1, 249.0], [65.2, 249.0], [65.3, 249.0], [65.4, 250.0], [65.5, 250.0], [65.6, 250.0], [65.7, 250.0], [65.8, 250.0], [65.9, 251.0], [66.0, 251.0], [66.1, 251.0], [66.2, 252.0], [66.3, 252.0], [66.4, 252.0], [66.5, 253.0], [66.6, 253.0], [66.7, 253.0], [66.8, 254.0], [66.9, 254.0], [67.0, 254.0], [67.1, 255.0], [67.2, 255.0], [67.3, 255.0], [67.4, 255.0], [67.5, 256.0], [67.6, 256.0], [67.7, 257.0], [67.8, 257.0], [67.9, 257.0], [68.0, 258.0], [68.1, 258.0], [68.2, 259.0], [68.3, 259.0], [68.4, 259.0], [68.5, 260.0], [68.6, 260.0], [68.7, 260.0], [68.8, 260.0], [68.9, 261.0], [69.0, 261.0], [69.1, 261.0], [69.2, 261.0], [69.3, 262.0], [69.4, 262.0], [69.5, 263.0], [69.6, 263.0], [69.7, 264.0], [69.8, 265.0], [69.9, 265.0], [70.0, 265.0], [70.1, 266.0], [70.2, 266.0], [70.3, 267.0], [70.4, 267.0], [70.5, 268.0], [70.6, 268.0], [70.7, 268.0], [70.8, 269.0], [70.9, 269.0], [71.0, 269.0], [71.1, 270.0], [71.2, 270.0], [71.3, 270.0], [71.4, 271.0], [71.5, 271.0], [71.6, 272.0], [71.7, 272.0], [71.8, 273.0], [71.9, 274.0], [72.0, 274.0], [72.1, 274.0], [72.2, 275.0], [72.3, 275.0], [72.4, 275.0], [72.5, 276.0], [72.6, 276.0], [72.7, 276.0], [72.8, 277.0], [72.9, 277.0], [73.0, 277.0], [73.1, 278.0], [73.2, 278.0], [73.3, 279.0], [73.4, 280.0], [73.5, 280.0], [73.6, 281.0], [73.7, 282.0], [73.8, 282.0], [73.9, 283.0], [74.0, 283.0], [74.1, 283.0], [74.2, 284.0], [74.3, 284.0], [74.4, 285.0], [74.5, 285.0], [74.6, 285.0], [74.7, 286.0], [74.8, 287.0], [74.9, 287.0], [75.0, 288.0], [75.1, 288.0], [75.2, 289.0], [75.3, 289.0], [75.4, 290.0], [75.5, 290.0], [75.6, 291.0], [75.7, 291.0], [75.8, 292.0], [75.9, 293.0], [76.0, 293.0], [76.1, 293.0], [76.2, 294.0], [76.3, 294.0], [76.4, 295.0], [76.5, 296.0], [76.6, 296.0], [76.7, 297.0], [76.8, 297.0], [76.9, 297.0], [77.0, 298.0], [77.1, 298.0], [77.2, 299.0], [77.3, 299.0], [77.4, 300.0], [77.5, 301.0], [77.6, 301.0], [77.7, 302.0], [77.8, 303.0], [77.9, 304.0], [78.0, 304.0], [78.1, 306.0], [78.2, 306.0], [78.3, 307.0], [78.4, 308.0], [78.5, 308.0], [78.6, 310.0], [78.7, 311.0], [78.8, 312.0], [78.9, 313.0], [79.0, 314.0], [79.1, 316.0], [79.2, 317.0], [79.3, 318.0], [79.4, 319.0], [79.5, 320.0], [79.6, 321.0], [79.7, 322.0], [79.8, 324.0], [79.9, 325.0], [80.0, 326.0], [80.1, 327.0], [80.2, 328.0], [80.3, 329.0], [80.4, 331.0], [80.5, 334.0], [80.6, 335.0], [80.7, 337.0], [80.8, 339.0], [80.9, 340.0], [81.0, 341.0], [81.1, 343.0], [81.2, 345.0], [81.3, 346.0], [81.4, 348.0], [81.5, 349.0], [81.6, 350.0], [81.7, 354.0], [81.8, 355.0], [81.9, 357.0], [82.0, 359.0], [82.1, 361.0], [82.2, 361.0], [82.3, 363.0], [82.4, 367.0], [82.5, 369.0], [82.6, 371.0], [82.7, 372.0], [82.8, 376.0], [82.9, 379.0], [83.0, 382.0], [83.1, 385.0], [83.2, 385.0], [83.3, 388.0], [83.4, 394.0], [83.5, 399.0], [83.6, 401.0], [83.7, 403.0], [83.8, 406.0], [83.9, 410.0], [84.0, 413.0], [84.1, 416.0], [84.2, 419.0], [84.3, 423.0], [84.4, 427.0], [84.5, 430.0], [84.6, 434.0], [84.7, 439.0], [84.8, 443.0], [84.9, 445.0], [85.0, 448.0], [85.1, 448.0], [85.2, 452.0], [85.3, 454.0], [85.4, 459.0], [85.5, 464.0], [85.6, 466.0], [85.7, 469.0], [85.8, 470.0], [85.9, 472.0], [86.0, 476.0], [86.1, 479.0], [86.2, 482.0], [86.3, 484.0], [86.4, 487.0], [86.5, 490.0], [86.6, 491.0], [86.7, 495.0], [86.8, 497.0], [86.9, 498.0], [87.0, 502.0], [87.1, 504.0], [87.2, 506.0], [87.3, 513.0], [87.4, 514.0], [87.5, 516.0], [87.6, 520.0], [87.7, 524.0], [87.8, 529.0], [87.9, 534.0], [88.0, 540.0], [88.1, 542.0], [88.2, 545.0], [88.3, 556.0], [88.4, 557.0], [88.5, 564.0], [88.6, 568.0], [88.7, 569.0], [88.8, 573.0], [88.9, 576.0], [89.0, 578.0], [89.1, 584.0], [89.2, 590.0], [89.3, 600.0], [89.4, 608.0], [89.5, 615.0], [89.6, 622.0], [89.7, 628.0], [89.8, 632.0], [89.9, 643.0], [90.0, 645.0], [90.1, 658.0], [90.2, 664.0], [90.3, 668.0], [90.4, 670.0], [90.5, 676.0], [90.6, 682.0], [90.7, 686.0], [90.8, 696.0], [90.9, 704.0], [91.0, 705.0], [91.1, 709.0], [91.2, 719.0], [91.3, 723.0], [91.4, 728.0], [91.5, 731.0], [91.6, 743.0], [91.7, 751.0], [91.8, 760.0], [91.9, 766.0], [92.0, 773.0], [92.1, 791.0], [92.2, 801.0], [92.3, 809.0], [92.4, 819.0], [92.5, 834.0], [92.6, 836.0], [92.7, 841.0], [92.8, 846.0], [92.9, 869.0], [93.0, 882.0], [93.1, 885.0], [93.2, 889.0], [93.3, 900.0], [93.4, 910.0], [93.5, 921.0], [93.6, 940.0], [93.7, 958.0], [93.8, 970.0], [93.9, 977.0], [94.0, 997.0], [94.1, 1009.0], [94.2, 1022.0], [94.3, 1036.0], [94.4, 1057.0], [94.5, 1088.0], [94.6, 1107.0], [94.7, 1118.0], [94.8, 1143.0], [94.9, 1158.0], [95.0, 1195.0], [95.1, 1228.0], [95.2, 1245.0], [95.3, 1271.0], [95.4, 1282.0], [95.5, 1287.0], [95.6, 1291.0], [95.7, 1294.0], [95.8, 1301.0], [95.9, 1308.0], [96.0, 1313.0], [96.1, 1318.0], [96.2, 1329.0], [96.3, 1347.0], [96.4, 1360.0], [96.5, 1400.0], [96.6, 1425.0], [96.7, 1436.0], [96.8, 1474.0], [96.9, 1531.0], [97.0, 1562.0], [97.1, 1603.0], [97.2, 1612.0], [97.3, 1637.0], [97.4, 1677.0], [97.5, 1696.0], [97.6, 1757.0], [97.7, 1795.0], [97.8, 1882.0], [97.9, 1935.0], [98.0, 2055.0], [98.1, 2092.0], [98.2, 2127.0], [98.3, 2222.0], [98.4, 2412.0], [98.5, 2501.0], [98.6, 2561.0], [98.7, 2780.0], [98.8, 2833.0], [98.9, 2882.0], [99.0, 2948.0], [99.1, 2954.0], [99.2, 3003.0], [99.3, 3022.0], [99.4, 3068.0], [99.5, 3121.0], [99.6, 3207.0], [99.7, 3734.0], [99.8, 3933.0], [99.9, 4479.0], [100.0, 5194.0]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[0.0, 157.0], [0.1, 219.0], [0.2, 228.0], [0.3, 240.0], [0.4, 247.0], [0.5, 251.0], [0.6, 253.0], [0.7, 255.0], [0.8, 258.0], [0.9, 262.0], [1.0, 266.0], [1.1, 268.0], [1.2, 270.0], [1.3, 273.0], [1.4, 275.0], [1.5, 279.0], [1.6, 286.0], [1.7, 293.0], [1.8, 298.0], [1.9, 299.0], [2.0, 307.0], [2.1, 312.0], [2.2, 315.0], [2.3, 320.0], [2.4, 323.0], [2.5, 328.0], [2.6, 337.0], [2.7, 346.0], [2.8, 350.0], [2.9, 356.0], [3.0, 366.0], [3.1, 372.0], [3.2, 375.0], [3.3, 380.0], [3.4, 384.0], [3.5, 393.0], [3.6, 409.0], [3.7, 418.0], [3.8, 425.0], [3.9, 434.0], [4.0, 439.0], [4.1, 443.0], [4.2, 451.0], [4.3, 455.0], [4.4, 459.0], [4.5, 464.0], [4.6, 471.0], [4.7, 473.0], [4.8, 479.0], [4.9, 481.0], [5.0, 485.0], [5.1, 487.0], [5.2, 489.0], [5.3, 492.0], [5.4, 495.0], [5.5, 496.0], [5.6, 500.0], [5.7, 503.0], [5.8, 504.0], [5.9, 507.0], [6.0, 510.0], [6.1, 513.0], [6.2, 516.0], [6.3, 521.0], [6.4, 525.0], [6.5, 527.0], [6.6, 530.0], [6.7, 532.0], [6.8, 533.0], [6.9, 536.0], [7.0, 537.0], [7.1, 539.0], [7.2, 543.0], [7.3, 545.0], [7.4, 548.0], [7.5, 549.0], [7.6, 550.0], [7.7, 554.0], [7.8, 555.0], [7.9, 556.0], [8.0, 557.0], [8.1, 559.0], [8.2, 563.0], [8.3, 564.0], [8.4, 567.0], [8.5, 569.0], [8.6, 570.0], [8.7, 573.0], [8.8, 574.0], [8.9, 576.0], [9.0, 577.0], [9.1, 579.0], [9.2, 580.0], [9.3, 581.0], [9.4, 582.0], [9.5, 584.0], [9.6, 586.0], [9.7, 587.0], [9.8, 588.0], [9.9, 591.0], [10.0, 592.0], [10.1, 594.0], [10.2, 595.0], [10.3, 597.0], [10.4, 599.0], [10.5, 603.0], [10.6, 604.0], [10.7, 607.0], [10.8, 609.0], [10.9, 610.0], [11.0, 611.0], [11.1, 614.0], [11.2, 615.0], [11.3, 616.0], [11.4, 617.0], [11.5, 619.0], [11.6, 621.0], [11.7, 624.0], [11.8, 625.0], [11.9, 627.0], [12.0, 631.0], [12.1, 633.0], [12.2, 635.0], [12.3, 637.0], [12.4, 638.0], [12.5, 639.0], [12.6, 642.0], [12.7, 643.0], [12.8, 644.0], [12.9, 647.0], [13.0, 649.0], [13.1, 652.0], [13.2, 653.0], [13.3, 657.0], [13.4, 661.0], [13.5, 663.0], [13.6, 664.0], [13.7, 666.0], [13.8, 668.0], [13.9, 669.0], [14.0, 674.0], [14.1, 675.0], [14.2, 676.0], [14.3, 678.0], [14.4, 679.0], [14.5, 680.0], [14.6, 681.0], [14.7, 683.0], [14.8, 684.0], [14.9, 685.0], [15.0, 689.0], [15.1, 689.0], [15.2, 691.0], [15.3, 694.0], [15.4, 695.0], [15.5, 697.0], [15.6, 699.0], [15.7, 700.0], [15.8, 702.0], [15.9, 703.0], [16.0, 706.0], [16.1, 708.0], [16.2, 709.0], [16.3, 710.0], [16.4, 712.0], [16.5, 714.0], [16.6, 718.0], [16.7, 719.0], [16.8, 721.0], [16.9, 723.0], [17.0, 725.0], [17.1, 726.0], [17.2, 728.0], [17.3, 729.0], [17.4, 730.0], [17.5, 731.0], [17.6, 733.0], [17.7, 735.0], [17.8, 736.0], [17.9, 737.0], [18.0, 739.0], [18.1, 741.0], [18.2, 744.0], [18.3, 745.0], [18.4, 746.0], [18.5, 748.0], [18.6, 748.0], [18.7, 751.0], [18.8, 753.0], [18.9, 755.0], [19.0, 757.0], [19.1, 759.0], [19.2, 761.0], [19.3, 763.0], [19.4, 764.0], [19.5, 764.0], [19.6, 766.0], [19.7, 769.0], [19.8, 774.0], [19.9, 776.0], [20.0, 778.0], [20.1, 780.0], [20.2, 782.0], [20.3, 784.0], [20.4, 785.0], [20.5, 787.0], [20.6, 789.0], [20.7, 791.0], [20.8, 792.0], [20.9, 794.0], [21.0, 796.0], [21.1, 798.0], [21.2, 800.0], [21.3, 804.0], [21.4, 807.0], [21.5, 811.0], [21.6, 813.0], [21.7, 817.0], [21.8, 819.0], [21.9, 820.0], [22.0, 820.0], [22.1, 823.0], [22.2, 824.0], [22.3, 825.0], [22.4, 827.0], [22.5, 830.0], [22.6, 831.0], [22.7, 832.0], [22.8, 836.0], [22.9, 838.0], [23.0, 841.0], [23.1, 842.0], [23.2, 844.0], [23.3, 847.0], [23.4, 851.0], [23.5, 854.0], [23.6, 857.0], [23.7, 858.0], [23.8, 859.0], [23.9, 862.0], [24.0, 865.0], [24.1, 867.0], [24.2, 869.0], [24.3, 872.0], [24.4, 873.0], [24.5, 875.0], [24.6, 877.0], [24.7, 877.0], [24.8, 878.0], [24.9, 879.0], [25.0, 880.0], [25.1, 881.0], [25.2, 883.0], [25.3, 884.0], [25.4, 887.0], [25.5, 892.0], [25.6, 893.0], [25.7, 895.0], [25.8, 897.0], [25.9, 899.0], [26.0, 900.0], [26.1, 902.0], [26.2, 903.0], [26.3, 905.0], [26.4, 906.0], [26.5, 908.0], [26.6, 909.0], [26.7, 913.0], [26.8, 915.0], [26.9, 916.0], [27.0, 920.0], [27.1, 921.0], [27.2, 922.0], [27.3, 924.0], [27.4, 924.0], [27.5, 927.0], [27.6, 929.0], [27.7, 930.0], [27.8, 931.0], [27.9, 933.0], [28.0, 935.0], [28.1, 937.0], [28.2, 938.0], [28.3, 940.0], [28.4, 942.0], [28.5, 944.0], [28.6, 945.0], [28.7, 948.0], [28.8, 950.0], [28.9, 950.0], [29.0, 952.0], [29.1, 957.0], [29.2, 959.0], [29.3, 961.0], [29.4, 962.0], [29.5, 963.0], [29.6, 965.0], [29.7, 967.0], [29.8, 968.0], [29.9, 972.0], [30.0, 974.0], [30.1, 975.0], [30.2, 979.0], [30.3, 982.0], [30.4, 983.0], [30.5, 984.0], [30.6, 988.0], [30.7, 990.0], [30.8, 993.0], [30.9, 997.0], [31.0, 998.0], [31.1, 1000.0], [31.2, 1001.0], [31.3, 1003.0], [31.4, 1004.0], [31.5, 1006.0], [31.6, 1007.0], [31.7, 1009.0], [31.8, 1010.0], [31.9, 1012.0], [32.0, 1015.0], [32.1, 1016.0], [32.2, 1018.0], [32.3, 1020.0], [32.4, 1023.0], [32.5, 1025.0], [32.6, 1029.0], [32.7, 1033.0], [32.8, 1035.0], [32.9, 1038.0], [33.0, 1040.0], [33.1, 1040.0], [33.2, 1043.0], [33.3, 1044.0], [33.4, 1045.0], [33.5, 1047.0], [33.6, 1050.0], [33.7, 1052.0], [33.8, 1055.0], [33.9, 1057.0], [34.0, 1060.0], [34.1, 1061.0], [34.2, 1062.0], [34.3, 1064.0], [34.4, 1066.0], [34.5, 1068.0], [34.6, 1068.0], [34.7, 1070.0], [34.8, 1072.0], [34.9, 1077.0], [35.0, 1080.0], [35.1, 1083.0], [35.2, 1086.0], [35.3, 1087.0], [35.4, 1090.0], [35.5, 1091.0], [35.6, 1094.0], [35.7, 1096.0], [35.8, 1098.0], [35.9, 1100.0], [36.0, 1104.0], [36.1, 1105.0], [36.2, 1107.0], [36.3, 1108.0], [36.4, 1110.0], [36.5, 1113.0], [36.6, 1114.0], [36.7, 1115.0], [36.8, 1116.0], [36.9, 1120.0], [37.0, 1122.0], [37.1, 1124.0], [37.2, 1128.0], [37.3, 1130.0], [37.4, 1134.0], [37.5, 1136.0], [37.6, 1138.0], [37.7, 1142.0], [37.8, 1144.0], [37.9, 1146.0], [38.0, 1149.0], [38.1, 1151.0], [38.2, 1152.0], [38.3, 1155.0], [38.4, 1158.0], [38.5, 1161.0], [38.6, 1163.0], [38.7, 1165.0], [38.8, 1168.0], [38.9, 1171.0], [39.0, 1174.0], [39.1, 1176.0], [39.2, 1177.0], [39.3, 1181.0], [39.4, 1182.0], [39.5, 1185.0], [39.6, 1188.0], [39.7, 1188.0], [39.8, 1193.0], [39.9, 1196.0], [40.0, 1200.0], [40.1, 1201.0], [40.2, 1205.0], [40.3, 1207.0], [40.4, 1212.0], [40.5, 1215.0], [40.6, 1217.0], [40.7, 1219.0], [40.8, 1222.0], [40.9, 1223.0], [41.0, 1225.0], [41.1, 1228.0], [41.2, 1232.0], [41.3, 1237.0], [41.4, 1239.0], [41.5, 1241.0], [41.6, 1242.0], [41.7, 1245.0], [41.8, 1246.0], [41.9, 1249.0], [42.0, 1252.0], [42.1, 1254.0], [42.2, 1260.0], [42.3, 1265.0], [42.4, 1268.0], [42.5, 1271.0], [42.6, 1273.0], [42.7, 1277.0], [42.8, 1280.0], [42.9, 1284.0], [43.0, 1287.0], [43.1, 1289.0], [43.2, 1290.0], [43.3, 1297.0], [43.4, 1300.0], [43.5, 1304.0], [43.6, 1307.0], [43.7, 1309.0], [43.8, 1313.0], [43.9, 1316.0], [44.0, 1317.0], [44.1, 1320.0], [44.2, 1324.0], [44.3, 1325.0], [44.4, 1331.0], [44.5, 1332.0], [44.6, 1334.0], [44.7, 1337.0], [44.8, 1339.0], [44.9, 1343.0], [45.0, 1346.0], [45.1, 1347.0], [45.2, 1349.0], [45.3, 1351.0], [45.4, 1352.0], [45.5, 1356.0], [45.6, 1359.0], [45.7, 1361.0], [45.8, 1363.0], [45.9, 1364.0], [46.0, 1369.0], [46.1, 1372.0], [46.2, 1375.0], [46.3, 1377.0], [46.4, 1381.0], [46.5, 1382.0], [46.6, 1384.0], [46.7, 1387.0], [46.8, 1390.0], [46.9, 1393.0], [47.0, 1396.0], [47.1, 1398.0], [47.2, 1400.0], [47.3, 1406.0], [47.4, 1411.0], [47.5, 1415.0], [47.6, 1417.0], [47.7, 1422.0], [47.8, 1423.0], [47.9, 1430.0], [48.0, 1431.0], [48.1, 1434.0], [48.2, 1437.0], [48.3, 1440.0], [48.4, 1443.0], [48.5, 1446.0], [48.6, 1449.0], [48.7, 1451.0], [48.8, 1456.0], [48.9, 1460.0], [49.0, 1461.0], [49.1, 1464.0], [49.2, 1467.0], [49.3, 1471.0], [49.4, 1472.0], [49.5, 1476.0], [49.6, 1480.0], [49.7, 1482.0], [49.8, 1484.0], [49.9, 1486.0], [50.0, 1488.0], [50.1, 1490.0], [50.2, 1493.0], [50.3, 1495.0], [50.4, 1497.0], [50.5, 1501.0], [50.6, 1505.0], [50.7, 1507.0], [50.8, 1509.0], [50.9, 1510.0], [51.0, 1514.0], [51.1, 1518.0], [51.2, 1522.0], [51.3, 1526.0], [51.4, 1528.0], [51.5, 1529.0], [51.6, 1534.0], [51.7, 1539.0], [51.8, 1541.0], [51.9, 1546.0], [52.0, 1550.0], [52.1, 1553.0], [52.2, 1555.0], [52.3, 1555.0], [52.4, 1557.0], [52.5, 1559.0], [52.6, 1561.0], [52.7, 1561.0], [52.8, 1565.0], [52.9, 1566.0], [53.0, 1570.0], [53.1, 1573.0], [53.2, 1576.0], [53.3, 1582.0], [53.4, 1588.0], [53.5, 1589.0], [53.6, 1591.0], [53.7, 1594.0], [53.8, 1596.0], [53.9, 1597.0], [54.0, 1602.0], [54.1, 1605.0], [54.2, 1607.0], [54.3, 1609.0], [54.4, 1612.0], [54.5, 1615.0], [54.6, 1619.0], [54.7, 1622.0], [54.8, 1626.0], [54.9, 1628.0], [55.0, 1630.0], [55.1, 1632.0], [55.2, 1634.0], [55.3, 1636.0], [55.4, 1640.0], [55.5, 1641.0], [55.6, 1642.0], [55.7, 1646.0], [55.8, 1649.0], [55.9, 1649.0], [56.0, 1654.0], [56.1, 1656.0], [56.2, 1656.0], [56.3, 1659.0], [56.4, 1664.0], [56.5, 1666.0], [56.6, 1669.0], [56.7, 1672.0], [56.8, 1673.0], [56.9, 1676.0], [57.0, 1680.0], [57.1, 1681.0], [57.2, 1683.0], [57.3, 1686.0], [57.4, 1690.0], [57.5, 1692.0], [57.6, 1696.0], [57.7, 1697.0], [57.8, 1698.0], [57.9, 1702.0], [58.0, 1704.0], [58.1, 1706.0], [58.2, 1709.0], [58.3, 1711.0], [58.4, 1714.0], [58.5, 1715.0], [58.6, 1717.0], [58.7, 1719.0], [58.8, 1721.0], [58.9, 1723.0], [59.0, 1726.0], [59.1, 1728.0], [59.2, 1730.0], [59.3, 1732.0], [59.4, 1734.0], [59.5, 1736.0], [59.6, 1737.0], [59.7, 1738.0], [59.8, 1743.0], [59.9, 1748.0], [60.0, 1755.0], [60.1, 1761.0], [60.2, 1765.0], [60.3, 1767.0], [60.4, 1770.0], [60.5, 1776.0], [60.6, 1778.0], [60.7, 1783.0], [60.8, 1786.0], [60.9, 1790.0], [61.0, 1793.0], [61.1, 1801.0], [61.2, 1806.0], [61.3, 1811.0], [61.4, 1813.0], [61.5, 1818.0], [61.6, 1820.0], [61.7, 1827.0], [61.8, 1833.0], [61.9, 1838.0], [62.0, 1839.0], [62.1, 1846.0], [62.2, 1849.0], [62.3, 1852.0], [62.4, 1857.0], [62.5, 1861.0], [62.6, 1864.0], [62.7, 1868.0], [62.8, 1870.0], [62.9, 1876.0], [63.0, 1878.0], [63.1, 1882.0], [63.2, 1886.0], [63.3, 1890.0], [63.4, 1893.0], [63.5, 1896.0], [63.6, 1900.0], [63.7, 1902.0], [63.8, 1906.0], [63.9, 1908.0], [64.0, 1912.0], [64.1, 1914.0], [64.2, 1916.0], [64.3, 1919.0], [64.4, 1925.0], [64.5, 1930.0], [64.6, 1933.0], [64.7, 1937.0], [64.8, 1941.0], [64.9, 1946.0], [65.0, 1950.0], [65.1, 1953.0], [65.2, 1956.0], [65.3, 1958.0], [65.4, 1961.0], [65.5, 1964.0], [65.6, 1968.0], [65.7, 1970.0], [65.8, 1976.0], [65.9, 1980.0], [66.0, 1983.0], [66.1, 1988.0], [66.2, 1993.0], [66.3, 1996.0], [66.4, 1998.0], [66.5, 2003.0], [66.6, 2006.0], [66.7, 2009.0], [66.8, 2011.0], [66.9, 2016.0], [67.0, 2020.0], [67.1, 2024.0], [67.2, 2030.0], [67.3, 2036.0], [67.4, 2038.0], [67.5, 2042.0], [67.6, 2046.0], [67.7, 2050.0], [67.8, 2055.0], [67.9, 2057.0], [68.0, 2058.0], [68.1, 2064.0], [68.2, 2066.0], [68.3, 2075.0], [68.4, 2081.0], [68.5, 2083.0], [68.6, 2086.0], [68.7, 2090.0], [68.8, 2095.0], [68.9, 2099.0], [69.0, 2104.0], [69.1, 2111.0], [69.2, 2115.0], [69.3, 2120.0], [69.4, 2122.0], [69.5, 2125.0], [69.6, 2129.0], [69.7, 2139.0], [69.8, 2143.0], [69.9, 2148.0], [70.0, 2150.0], [70.1, 2156.0], [70.2, 2159.0], [70.3, 2162.0], [70.4, 2166.0], [70.5, 2170.0], [70.6, 2174.0], [70.7, 2184.0], [70.8, 2186.0], [70.9, 2191.0], [71.0, 2196.0], [71.1, 2204.0], [71.2, 2211.0], [71.3, 2215.0], [71.4, 2219.0], [71.5, 2221.0], [71.6, 2228.0], [71.7, 2230.0], [71.8, 2234.0], [71.9, 2238.0], [72.0, 2245.0], [72.1, 2249.0], [72.2, 2256.0], [72.3, 2262.0], [72.4, 2272.0], [72.5, 2276.0], [72.6, 2280.0], [72.7, 2283.0], [72.8, 2288.0], [72.9, 2296.0], [73.0, 2300.0], [73.1, 2306.0], [73.2, 2313.0], [73.3, 2322.0], [73.4, 2327.0], [73.5, 2330.0], [73.6, 2335.0], [73.7, 2341.0], [73.8, 2345.0], [73.9, 2347.0], [74.0, 2352.0], [74.1, 2362.0], [74.2, 2366.0], [74.3, 2373.0], [74.4, 2379.0], [74.5, 2386.0], [74.6, 2394.0], [74.7, 2409.0], [74.8, 2414.0], [74.9, 2420.0], [75.0, 2427.0], [75.1, 2434.0], [75.2, 2444.0], [75.3, 2453.0], [75.4, 2456.0], [75.5, 2469.0], [75.6, 2482.0], [75.7, 2488.0], [75.8, 2494.0], [75.9, 2497.0], [76.0, 2500.0], [76.1, 2503.0], [76.2, 2509.0], [76.3, 2519.0], [76.4, 2527.0], [76.5, 2533.0], [76.6, 2536.0], [76.7, 2545.0], [76.8, 2550.0], [76.9, 2555.0], [77.0, 2561.0], [77.1, 2566.0], [77.2, 2572.0], [77.3, 2580.0], [77.4, 2585.0], [77.5, 2590.0], [77.6, 2599.0], [77.7, 2609.0], [77.8, 2610.0], [77.9, 2629.0], [78.0, 2640.0], [78.1, 2647.0], [78.2, 2655.0], [78.3, 2661.0], [78.4, 2664.0], [78.5, 2669.0], [78.6, 2695.0], [78.7, 2703.0], [78.8, 2711.0], [78.9, 2720.0], [79.0, 2730.0], [79.1, 2742.0], [79.2, 2750.0], [79.3, 2760.0], [79.4, 2768.0], [79.5, 2784.0], [79.6, 2797.0], [79.7, 2811.0], [79.8, 2820.0], [79.9, 2826.0], [80.0, 2840.0], [80.1, 2857.0], [80.2, 2861.0], [80.3, 2881.0], [80.4, 2892.0], [80.5, 2897.0], [80.6, 2906.0], [80.7, 2914.0], [80.8, 2920.0], [80.9, 2928.0], [81.0, 2937.0], [81.1, 2940.0], [81.2, 2951.0], [81.3, 2955.0], [81.4, 2961.0], [81.5, 2969.0], [81.6, 2983.0], [81.7, 2996.0], [81.8, 3002.0], [81.9, 3014.0], [82.0, 3021.0], [82.1, 3050.0], [82.2, 3058.0], [82.3, 3067.0], [82.4, 3075.0], [82.5, 3089.0], [82.6, 3091.0], [82.7, 3104.0], [82.8, 3116.0], [82.9, 3130.0], [83.0, 3138.0], [83.1, 3155.0], [83.2, 3161.0], [83.3, 3175.0], [83.4, 3188.0], [83.5, 3198.0], [83.6, 3205.0], [83.7, 3214.0], [83.8, 3222.0], [83.9, 3230.0], [84.0, 3236.0], [84.1, 3245.0], [84.2, 3253.0], [84.3, 3267.0], [84.4, 3278.0], [84.5, 3283.0], [84.6, 3294.0], [84.7, 3300.0], [84.8, 3308.0], [84.9, 3317.0], [85.0, 3321.0], [85.1, 3335.0], [85.2, 3349.0], [85.3, 3352.0], [85.4, 3377.0], [85.5, 3384.0], [85.6, 3406.0], [85.7, 3415.0], [85.8, 3439.0], [85.9, 3451.0], [86.0, 3479.0], [86.1, 3489.0], [86.2, 3506.0], [86.3, 3520.0], [86.4, 3541.0], [86.5, 3568.0], [86.6, 3589.0], [86.7, 3600.0], [86.8, 3608.0], [86.9, 3627.0], [87.0, 3658.0], [87.1, 3676.0], [87.2, 3694.0], [87.3, 3719.0], [87.4, 3733.0], [87.5, 3759.0], [87.6, 3779.0], [87.7, 3807.0], [87.8, 3815.0], [87.9, 3832.0], [88.0, 3839.0], [88.1, 3849.0], [88.2, 3875.0], [88.3, 3892.0], [88.4, 3908.0], [88.5, 3916.0], [88.6, 3960.0], [88.7, 3984.0], [88.8, 4008.0], [88.9, 4036.0], [89.0, 4052.0], [89.1, 4085.0], [89.2, 4097.0], [89.3, 4119.0], [89.4, 4161.0], [89.5, 4189.0], [89.6, 4231.0], [89.7, 4259.0], [89.8, 4283.0], [89.9, 4332.0], [90.0, 4367.0], [90.1, 4435.0], [90.2, 4492.0], [90.3, 4568.0], [90.4, 4590.0], [90.5, 4638.0], [90.6, 4670.0], [90.7, 4695.0], [90.8, 4752.0], [90.9, 4838.0], [91.0, 4859.0], [91.1, 4922.0], [91.2, 4973.0], [91.3, 4983.0], [91.4, 5030.0], [91.5, 5089.0], [91.6, 5126.0], [91.7, 5148.0], [91.8, 5179.0], [91.9, 5186.0], [92.0, 5204.0], [92.1, 5216.0], [92.2, 5235.0], [92.3, 5247.0], [92.4, 5255.0], [92.5, 5280.0], [92.6, 5335.0], [92.7, 5366.0], [92.8, 5402.0], [92.9, 5426.0], [93.0, 5464.0], [93.1, 5483.0], [93.2, 5528.0], [93.3, 5542.0], [93.4, 5571.0], [93.5, 5642.0], [93.6, 5656.0], [93.7, 5671.0], [93.8, 5703.0], [93.9, 5725.0], [94.0, 5751.0], [94.1, 5773.0], [94.2, 5811.0], [94.3, 5862.0], [94.4, 5902.0], [94.5, 5924.0], [94.6, 5932.0], [94.7, 5938.0], [94.8, 5943.0], [94.9, 5945.0], [95.0, 5969.0], [95.1, 6026.0], [95.2, 6046.0], [95.3, 6123.0], [95.4, 6174.0], [95.5, 6198.0], [95.6, 6238.0], [95.7, 6288.0], [95.8, 6299.0], [95.9, 6331.0], [96.0, 6339.0], [96.1, 6356.0], [96.2, 6380.0], [96.3, 6421.0], [96.4, 6476.0], [96.5, 6525.0], [96.6, 6548.0], [96.7, 6596.0], [96.8, 6650.0], [96.9, 6712.0], [97.0, 6753.0], [97.1, 6784.0], [97.2, 6866.0], [97.3, 6882.0], [97.4, 6979.0], [97.5, 7067.0], [97.6, 7151.0], [97.7, 7230.0], [97.8, 7423.0], [97.9, 7607.0], [98.0, 7679.0], [98.1, 7739.0], [98.2, 7934.0], [98.3, 8365.0], [98.4, 8773.0], [98.5, 9026.0], [98.6, 9375.0], [98.7, 10009.0], [98.8, 10221.0], [98.9, 10427.0], [99.0, 10706.0], [99.1, 11000.0], [99.2, 11191.0], [99.3, 11513.0], [99.4, 12387.0], [99.5, 12791.0], [99.6, 14340.0], [99.7, 19820.0], [99.8, 25879.0], [99.9, 61099.0]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[0.0, 76.0], [0.1, 87.0], [0.2, 90.0], [0.3, 91.0], [0.4, 91.0], [0.5, 93.0], [0.6, 94.0], [0.7, 94.0], [0.8, 95.0], [0.9, 95.0], [1.0, 96.0], [1.1, 96.0], [1.2, 96.0], [1.3, 97.0], [1.4, 98.0], [1.5, 98.0], [1.6, 99.0], [1.7, 99.0], [1.8, 100.0], [1.9, 100.0], [2.0, 100.0], [2.1, 101.0], [2.2, 101.0], [2.3, 101.0], [2.4, 102.0], [2.5, 102.0], [2.6, 102.0], [2.7, 103.0], [2.8, 103.0], [2.9, 103.0], [3.0, 104.0], [3.1, 104.0], [3.2, 105.0], [3.3, 105.0], [3.4, 105.0], [3.5, 105.0], [3.6, 106.0], [3.7, 106.0], [3.8, 106.0], [3.9, 107.0], [4.0, 107.0], [4.1, 108.0], [4.2, 108.0], [4.3, 108.0], [4.4, 109.0], [4.5, 109.0], [4.6, 110.0], [4.7, 110.0], [4.8, 111.0], [4.9, 111.0], [5.0, 112.0], [5.1, 112.0], [5.2, 112.0], [5.3, 113.0], [5.4, 113.0], [5.5, 114.0], [5.6, 114.0], [5.7, 115.0], [5.8, 115.0], [5.9, 116.0], [6.0, 116.0], [6.1, 117.0], [6.2, 117.0], [6.3, 117.0], [6.4, 118.0], [6.5, 118.0], [6.6, 119.0], [6.7, 120.0], [6.8, 121.0], [6.9, 121.0], [7.0, 122.0], [7.1, 123.0], [7.2, 124.0], [7.3, 124.0], [7.4, 126.0], [7.5, 126.0], [7.6, 127.0], [7.7, 127.0], [7.8, 128.0], [7.9, 130.0], [8.0, 131.0], [8.1, 132.0], [8.2, 133.0], [8.3, 134.0], [8.4, 137.0], [8.5, 139.0], [8.6, 142.0], [8.7, 144.0], [8.8, 146.0], [8.9, 150.0], [9.0, 153.0], [9.1, 155.0], [9.2, 156.0], [9.3, 157.0], [9.4, 158.0], [9.5, 161.0], [9.6, 161.0], [9.7, 162.0], [9.8, 164.0], [9.9, 165.0], [10.0, 166.0], [10.1, 167.0], [10.2, 168.0], [10.3, 168.0], [10.4, 169.0], [10.5, 169.0], [10.6, 169.0], [10.7, 170.0], [10.8, 170.0], [10.9, 171.0], [11.0, 171.0], [11.1, 172.0], [11.2, 172.0], [11.3, 172.0], [11.4, 173.0], [11.5, 173.0], [11.6, 174.0], [11.7, 175.0], [11.8, 175.0], [11.9, 175.0], [12.0, 176.0], [12.1, 177.0], [12.2, 177.0], [12.3, 177.0], [12.4, 178.0], [12.5, 178.0], [12.6, 179.0], [12.7, 179.0], [12.8, 179.0], [12.9, 179.0], [13.0, 180.0], [13.1, 180.0], [13.2, 180.0], [13.3, 180.0], [13.4, 180.0], [13.5, 181.0], [13.6, 181.0], [13.7, 182.0], [13.8, 182.0], [13.9, 182.0], [14.0, 183.0], [14.1, 183.0], [14.2, 184.0], [14.3, 184.0], [14.4, 184.0], [14.5, 184.0], [14.6, 185.0], [14.7, 185.0], [14.8, 185.0], [14.9, 186.0], [15.0, 186.0], [15.1, 186.0], [15.2, 187.0], [15.3, 187.0], [15.4, 188.0], [15.5, 188.0], [15.6, 188.0], [15.7, 189.0], [15.8, 189.0], [15.9, 190.0], [16.0, 190.0], [16.1, 191.0], [16.2, 191.0], [16.3, 191.0], [16.4, 191.0], [16.5, 192.0], [16.6, 192.0], [16.7, 193.0], [16.8, 193.0], [16.9, 193.0], [17.0, 193.0], [17.1, 194.0], [17.2, 194.0], [17.3, 194.0], [17.4, 195.0], [17.5, 195.0], [17.6, 195.0], [17.7, 196.0], [17.8, 196.0], [17.9, 196.0], [18.0, 197.0], [18.1, 197.0], [18.2, 197.0], [18.3, 198.0], [18.4, 198.0], [18.5, 198.0], [18.6, 199.0], [18.7, 199.0], [18.8, 199.0], [18.9, 200.0], [19.0, 200.0], [19.1, 200.0], [19.2, 201.0], [19.3, 202.0], [19.4, 202.0], [19.5, 203.0], [19.6, 203.0], [19.7, 204.0], [19.8, 204.0], [19.9, 205.0], [20.0, 205.0], [20.1, 206.0], [20.2, 207.0], [20.3, 208.0], [20.4, 209.0], [20.5, 209.0], [20.6, 210.0], [20.7, 210.0], [20.8, 211.0], [20.9, 211.0], [21.0, 214.0], [21.1, 215.0], [21.2, 215.0], [21.3, 216.0], [21.4, 216.0], [21.5, 217.0], [21.6, 218.0], [21.7, 219.0], [21.8, 221.0], [21.9, 222.0], [22.0, 223.0], [22.1, 224.0], [22.2, 225.0], [22.3, 225.0], [22.4, 226.0], [22.5, 229.0], [22.6, 230.0], [22.7, 232.0], [22.8, 233.0], [22.9, 234.0], [23.0, 235.0], [23.1, 236.0], [23.2, 238.0], [23.3, 239.0], [23.4, 240.0], [23.5, 241.0], [23.6, 243.0], [23.7, 244.0], [23.8, 244.0], [23.9, 246.0], [24.0, 248.0], [24.1, 249.0], [24.2, 251.0], [24.3, 252.0], [24.4, 253.0], [24.5, 254.0], [24.6, 256.0], [24.7, 259.0], [24.8, 260.0], [24.9, 261.0], [25.0, 262.0], [25.1, 264.0], [25.2, 265.0], [25.3, 267.0], [25.4, 268.0], [25.5, 270.0], [25.6, 272.0], [25.7, 273.0], [25.8, 274.0], [25.9, 275.0], [26.0, 277.0], [26.1, 279.0], [26.2, 282.0], [26.3, 283.0], [26.4, 285.0], [26.5, 286.0], [26.6, 287.0], [26.7, 289.0], [26.8, 289.0], [26.9, 292.0], [27.0, 294.0], [27.1, 295.0], [27.2, 297.0], [27.3, 298.0], [27.4, 300.0], [27.5, 302.0], [27.6, 304.0], [27.7, 308.0], [27.8, 310.0], [27.9, 312.0], [28.0, 314.0], [28.1, 314.0], [28.2, 316.0], [28.3, 316.0], [28.4, 319.0], [28.5, 321.0], [28.6, 321.0], [28.7, 324.0], [28.8, 324.0], [28.9, 327.0], [29.0, 328.0], [29.1, 329.0], [29.2, 333.0], [29.3, 336.0], [29.4, 337.0], [29.5, 340.0], [29.6, 343.0], [29.7, 347.0], [29.8, 349.0], [29.9, 351.0], [30.0, 354.0], [30.1, 358.0], [30.2, 361.0], [30.3, 365.0], [30.4, 369.0], [30.5, 373.0], [30.6, 375.0], [30.7, 380.0], [30.8, 382.0], [30.9, 384.0], [31.0, 389.0], [31.1, 394.0], [31.2, 396.0], [31.3, 398.0], [31.4, 400.0], [31.5, 402.0], [31.6, 406.0], [31.7, 408.0], [31.8, 411.0], [31.9, 414.0], [32.0, 416.0], [32.1, 418.0], [32.2, 422.0], [32.3, 425.0], [32.4, 429.0], [32.5, 433.0], [32.6, 436.0], [32.7, 441.0], [32.8, 445.0], [32.9, 448.0], [33.0, 451.0], [33.1, 453.0], [33.2, 457.0], [33.3, 462.0], [33.4, 463.0], [33.5, 466.0], [33.6, 467.0], [33.7, 468.0], [33.8, 469.0], [33.9, 471.0], [34.0, 473.0], [34.1, 474.0], [34.2, 474.0], [34.3, 475.0], [34.4, 476.0], [34.5, 477.0], [34.6, 478.0], [34.7, 479.0], [34.8, 480.0], [34.9, 481.0], [35.0, 483.0], [35.1, 484.0], [35.2, 485.0], [35.3, 486.0], [35.4, 487.0], [35.5, 488.0], [35.6, 489.0], [35.7, 490.0], [35.8, 491.0], [35.9, 491.0], [36.0, 493.0], [36.1, 493.0], [36.2, 494.0], [36.3, 495.0], [36.4, 495.0], [36.5, 496.0], [36.6, 497.0], [36.7, 497.0], [36.8, 498.0], [36.9, 499.0], [37.0, 500.0], [37.1, 500.0], [37.2, 501.0], [37.3, 502.0], [37.4, 502.0], [37.5, 503.0], [37.6, 504.0], [37.7, 505.0], [37.8, 507.0], [37.9, 507.0], [38.0, 508.0], [38.1, 508.0], [38.2, 509.0], [38.3, 510.0], [38.4, 511.0], [38.5, 511.0], [38.6, 512.0], [38.7, 513.0], [38.8, 513.0], [38.9, 513.0], [39.0, 515.0], [39.1, 515.0], [39.2, 515.0], [39.3, 517.0], [39.4, 518.0], [39.5, 519.0], [39.6, 519.0], [39.7, 520.0], [39.8, 520.0], [39.9, 521.0], [40.0, 521.0], [40.1, 521.0], [40.2, 522.0], [40.3, 523.0], [40.4, 524.0], [40.5, 524.0], [40.6, 525.0], [40.7, 525.0], [40.8, 526.0], [40.9, 527.0], [41.0, 527.0], [41.1, 528.0], [41.2, 529.0], [41.3, 529.0], [41.4, 530.0], [41.5, 531.0], [41.6, 532.0], [41.7, 533.0], [41.8, 533.0], [41.9, 534.0], [42.0, 534.0], [42.1, 535.0], [42.2, 535.0], [42.3, 536.0], [42.4, 536.0], [42.5, 537.0], [42.6, 537.0], [42.7, 538.0], [42.8, 538.0], [42.9, 539.0], [43.0, 540.0], [43.1, 541.0], [43.2, 542.0], [43.3, 542.0], [43.4, 543.0], [43.5, 543.0], [43.6, 544.0], [43.7, 545.0], [43.8, 546.0], [43.9, 547.0], [44.0, 547.0], [44.1, 549.0], [44.2, 550.0], [44.3, 550.0], [44.4, 551.0], [44.5, 552.0], [44.6, 553.0], [44.7, 553.0], [44.8, 554.0], [44.9, 556.0], [45.0, 557.0], [45.1, 558.0], [45.2, 558.0], [45.3, 559.0], [45.4, 559.0], [45.5, 560.0], [45.6, 562.0], [45.7, 563.0], [45.8, 564.0], [45.9, 566.0], [46.0, 567.0], [46.1, 568.0], [46.2, 568.0], [46.3, 569.0], [46.4, 570.0], [46.5, 571.0], [46.6, 572.0], [46.7, 573.0], [46.8, 576.0], [46.9, 577.0], [47.0, 578.0], [47.1, 579.0], [47.2, 579.0], [47.3, 580.0], [47.4, 581.0], [47.5, 582.0], [47.6, 583.0], [47.7, 583.0], [47.8, 585.0], [47.9, 586.0], [48.0, 587.0], [48.1, 587.0], [48.2, 588.0], [48.3, 589.0], [48.4, 590.0], [48.5, 591.0], [48.6, 593.0], [48.7, 593.0], [48.8, 595.0], [48.9, 596.0], [49.0, 598.0], [49.1, 600.0], [49.2, 602.0], [49.3, 603.0], [49.4, 605.0], [49.5, 606.0], [49.6, 607.0], [49.7, 610.0], [49.8, 611.0], [49.9, 615.0], [50.0, 615.0], [50.1, 616.0], [50.2, 618.0], [50.3, 620.0], [50.4, 623.0], [50.5, 625.0], [50.6, 626.0], [50.7, 627.0], [50.8, 629.0], [50.9, 629.0], [51.0, 631.0], [51.1, 633.0], [51.2, 636.0], [51.3, 637.0], [51.4, 638.0], [51.5, 640.0], [51.6, 643.0], [51.7, 644.0], [51.8, 647.0], [51.9, 650.0], [52.0, 652.0], [52.1, 658.0], [52.2, 660.0], [52.3, 663.0], [52.4, 664.0], [52.5, 669.0], [52.6, 672.0], [52.7, 674.0], [52.8, 676.0], [52.9, 680.0], [53.0, 684.0], [53.1, 687.0], [53.2, 689.0], [53.3, 691.0], [53.4, 694.0], [53.5, 700.0], [53.6, 703.0], [53.7, 705.0], [53.8, 708.0], [53.9, 711.0], [54.0, 714.0], [54.1, 716.0], [54.2, 719.0], [54.3, 722.0], [54.4, 725.0], [54.5, 728.0], [54.6, 732.0], [54.7, 735.0], [54.8, 735.0], [54.9, 737.0], [55.0, 739.0], [55.1, 742.0], [55.2, 745.0], [55.3, 746.0], [55.4, 748.0], [55.5, 750.0], [55.6, 751.0], [55.7, 753.0], [55.8, 755.0], [55.9, 757.0], [56.0, 758.0], [56.1, 760.0], [56.2, 762.0], [56.3, 763.0], [56.4, 765.0], [56.5, 768.0], [56.6, 769.0], [56.7, 770.0], [56.8, 770.0], [56.9, 771.0], [57.0, 774.0], [57.1, 775.0], [57.2, 776.0], [57.3, 778.0], [57.4, 779.0], [57.5, 780.0], [57.6, 782.0], [57.7, 783.0], [57.8, 783.0], [57.9, 784.0], [58.0, 786.0], [58.1, 786.0], [58.2, 788.0], [58.3, 789.0], [58.4, 791.0], [58.5, 793.0], [58.6, 794.0], [58.7, 796.0], [58.8, 796.0], [58.9, 797.0], [59.0, 798.0], [59.1, 800.0], [59.2, 801.0], [59.3, 802.0], [59.4, 804.0], [59.5, 805.0], [59.6, 806.0], [59.7, 806.0], [59.8, 807.0], [59.9, 808.0], [60.0, 809.0], [60.1, 810.0], [60.2, 812.0], [60.3, 813.0], [60.4, 814.0], [60.5, 815.0], [60.6, 816.0], [60.7, 818.0], [60.8, 819.0], [60.9, 819.0], [61.0, 820.0], [61.1, 822.0], [61.2, 822.0], [61.3, 823.0], [61.4, 825.0], [61.5, 826.0], [61.6, 827.0], [61.7, 827.0], [61.8, 829.0], [61.9, 830.0], [62.0, 830.0], [62.1, 831.0], [62.2, 831.0], [62.3, 833.0], [62.4, 834.0], [62.5, 835.0], [62.6, 837.0], [62.7, 838.0], [62.8, 839.0], [62.9, 839.0], [63.0, 840.0], [63.1, 841.0], [63.2, 842.0], [63.3, 843.0], [63.4, 845.0], [63.5, 845.0], [63.6, 846.0], [63.7, 847.0], [63.8, 848.0], [63.9, 849.0], [64.0, 850.0], [64.1, 850.0], [64.2, 852.0], [64.3, 853.0], [64.4, 854.0], [64.5, 855.0], [64.6, 856.0], [64.7, 857.0], [64.8, 858.0], [64.9, 858.0], [65.0, 860.0], [65.1, 861.0], [65.2, 864.0], [65.3, 866.0], [65.4, 867.0], [65.5, 867.0], [65.6, 869.0], [65.7, 870.0], [65.8, 871.0], [65.9, 872.0], [66.0, 874.0], [66.1, 876.0], [66.2, 877.0], [66.3, 882.0], [66.4, 883.0], [66.5, 883.0], [66.6, 884.0], [66.7, 886.0], [66.8, 887.0], [66.9, 889.0], [67.0, 890.0], [67.1, 892.0], [67.2, 893.0], [67.3, 896.0], [67.4, 897.0], [67.5, 899.0], [67.6, 901.0], [67.7, 902.0], [67.8, 904.0], [67.9, 904.0], [68.0, 906.0], [68.1, 907.0], [68.2, 911.0], [68.3, 912.0], [68.4, 913.0], [68.5, 916.0], [68.6, 916.0], [68.7, 919.0], [68.8, 920.0], [68.9, 922.0], [69.0, 924.0], [69.1, 929.0], [69.2, 930.0], [69.3, 932.0], [69.4, 934.0], [69.5, 935.0], [69.6, 938.0], [69.7, 940.0], [69.8, 943.0], [69.9, 946.0], [70.0, 949.0], [70.1, 951.0], [70.2, 954.0], [70.3, 955.0], [70.4, 957.0], [70.5, 958.0], [70.6, 961.0], [70.7, 969.0], [70.8, 972.0], [70.9, 974.0], [71.0, 978.0], [71.1, 981.0], [71.2, 984.0], [71.3, 991.0], [71.4, 995.0], [71.5, 1001.0], [71.6, 1003.0], [71.7, 1006.0], [71.8, 1010.0], [71.9, 1015.0], [72.0, 1019.0], [72.1, 1028.0], [72.2, 1030.0], [72.3, 1037.0], [72.4, 1046.0], [72.5, 1049.0], [72.6, 1054.0], [72.7, 1059.0], [72.8, 1069.0], [72.9, 1074.0], [73.0, 1079.0], [73.1, 1082.0], [73.2, 1084.0], [73.3, 1093.0], [73.4, 1095.0], [73.5, 1100.0], [73.6, 1106.0], [73.7, 1108.0], [73.8, 1111.0], [73.9, 1114.0], [74.0, 1120.0], [74.1, 1123.0], [74.2, 1126.0], [74.3, 1131.0], [74.4, 1134.0], [74.5, 1142.0], [74.6, 1145.0], [74.7, 1150.0], [74.8, 1154.0], [74.9, 1162.0], [75.0, 1166.0], [75.1, 1172.0], [75.2, 1176.0], [75.3, 1179.0], [75.4, 1183.0], [75.5, 1185.0], [75.6, 1193.0], [75.7, 1195.0], [75.8, 1196.0], [75.9, 1200.0], [76.0, 1203.0], [76.1, 1204.0], [76.2, 1209.0], [76.3, 1210.0], [76.4, 1212.0], [76.5, 1216.0], [76.6, 1217.0], [76.7, 1220.0], [76.8, 1225.0], [76.9, 1232.0], [77.0, 1235.0], [77.1, 1236.0], [77.2, 1238.0], [77.3, 1239.0], [77.4, 1242.0], [77.5, 1243.0], [77.6, 1245.0], [77.7, 1255.0], [77.8, 1258.0], [77.9, 1261.0], [78.0, 1266.0], [78.1, 1273.0], [78.2, 1276.0], [78.3, 1284.0], [78.4, 1287.0], [78.5, 1289.0], [78.6, 1302.0], [78.7, 1304.0], [78.8, 1307.0], [78.9, 1312.0], [79.0, 1317.0], [79.1, 1325.0], [79.2, 1330.0], [79.3, 1336.0], [79.4, 1340.0], [79.5, 1344.0], [79.6, 1347.0], [79.7, 1355.0], [79.8, 1359.0], [79.9, 1363.0], [80.0, 1366.0], [80.1, 1373.0], [80.2, 1376.0], [80.3, 1380.0], [80.4, 1384.0], [80.5, 1390.0], [80.6, 1393.0], [80.7, 1399.0], [80.8, 1406.0], [80.9, 1408.0], [81.0, 1412.0], [81.1, 1417.0], [81.2, 1418.0], [81.3, 1423.0], [81.4, 1426.0], [81.5, 1429.0], [81.6, 1432.0], [81.7, 1434.0], [81.8, 1437.0], [81.9, 1444.0], [82.0, 1447.0], [82.1, 1449.0], [82.2, 1456.0], [82.3, 1459.0], [82.4, 1462.0], [82.5, 1463.0], [82.6, 1467.0], [82.7, 1471.0], [82.8, 1472.0], [82.9, 1476.0], [83.0, 1480.0], [83.1, 1487.0], [83.2, 1493.0], [83.3, 1512.0], [83.4, 1517.0], [83.5, 1523.0], [83.6, 1527.0], [83.7, 1530.0], [83.8, 1533.0], [83.9, 1535.0], [84.0, 1538.0], [84.1, 1543.0], [84.2, 1546.0], [84.3, 1550.0], [84.4, 1558.0], [84.5, 1571.0], [84.6, 1580.0], [84.7, 1585.0], [84.8, 1587.0], [84.9, 1593.0], [85.0, 1598.0], [85.1, 1604.0], [85.2, 1613.0], [85.3, 1621.0], [85.4, 1626.0], [85.5, 1632.0], [85.6, 1636.0], [85.7, 1649.0], [85.8, 1655.0], [85.9, 1660.0], [86.0, 1662.0], [86.1, 1666.0], [86.2, 1675.0], [86.3, 1682.0], [86.4, 1690.0], [86.5, 1697.0], [86.6, 1710.0], [86.7, 1718.0], [86.8, 1726.0], [86.9, 1734.0], [87.0, 1750.0], [87.1, 1760.0], [87.2, 1765.0], [87.3, 1769.0], [87.4, 1779.0], [87.5, 1785.0], [87.6, 1794.0], [87.7, 1799.0], [87.8, 1803.0], [87.9, 1809.0], [88.0, 1816.0], [88.1, 1820.0], [88.2, 1827.0], [88.3, 1833.0], [88.4, 1840.0], [88.5, 1851.0], [88.6, 1853.0], [88.7, 1857.0], [88.8, 1864.0], [88.9, 1873.0], [89.0, 1887.0], [89.1, 1890.0], [89.2, 1899.0], [89.3, 1921.0], [89.4, 1937.0], [89.5, 1958.0], [89.6, 1971.0], [89.7, 2002.0], [89.8, 2015.0], [89.9, 2020.0], [90.0, 2029.0], [90.1, 2036.0], [90.2, 2054.0], [90.3, 2059.0], [90.4, 2063.0], [90.5, 2068.0], [90.6, 2071.0], [90.7, 2081.0], [90.8, 2093.0], [90.9, 2110.0], [91.0, 2131.0], [91.1, 2142.0], [91.2, 2152.0], [91.3, 2160.0], [91.4, 2190.0], [91.5, 2207.0], [91.6, 2231.0], [91.7, 2263.0], [91.8, 2295.0], [91.9, 2349.0], [92.0, 2379.0], [92.1, 2467.0], [92.2, 2478.0], [92.3, 2503.0], [92.4, 2522.0], [92.5, 2535.0], [92.6, 2551.0], [92.7, 2560.0], [92.8, 2582.0], [92.9, 2589.0], [93.0, 2617.0], [93.1, 2635.0], [93.2, 2650.0], [93.3, 2658.0], [93.4, 2679.0], [93.5, 2691.0], [93.6, 2718.0], [93.7, 2733.0], [93.8, 2744.0], [93.9, 2759.0], [94.0, 2779.0], [94.1, 2810.0], [94.2, 2837.0], [94.3, 2877.0], [94.4, 2892.0], [94.5, 2908.0], [94.6, 2921.0], [94.7, 2937.0], [94.8, 2969.0], [94.9, 2975.0], [95.0, 3011.0], [95.1, 3050.0], [95.2, 3072.0], [95.3, 3112.0], [95.4, 3156.0], [95.5, 3180.0], [95.6, 3324.0], [95.7, 3397.0], [95.8, 3450.0], [95.9, 3539.0], [96.0, 3594.0], [96.1, 3654.0], [96.2, 3690.0], [96.3, 3845.0], [96.4, 3951.0], [96.5, 4074.0], [96.6, 4136.0], [96.7, 4436.0], [96.8, 4527.0], [96.9, 4693.0], [97.0, 4810.0], [97.1, 4876.0], [97.2, 4964.0], [97.3, 5038.0], [97.4, 5089.0], [97.5, 5102.0], [97.6, 5110.0], [97.7, 5138.0], [97.8, 5178.0], [97.9, 5204.0], [98.0, 5223.0], [98.1, 5232.0], [98.2, 5281.0], [98.3, 5389.0], [98.4, 5454.0], [98.5, 5524.0], [98.6, 5747.0], [98.7, 5824.0], [98.8, 5931.0], [98.9, 6053.0], [99.0, 6100.0], [99.1, 6509.0], [99.2, 6727.0], [99.3, 7170.0], [99.4, 7613.0], [99.5, 8705.0], [99.6, 9796.0], [99.7, 10193.0], [99.8, 10517.0], [99.9, 18506.0]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[0.0, 65.0], [0.1, 70.0], [0.2, 71.0], [0.3, 72.0], [0.4, 73.0], [0.5, 74.0], [0.6, 75.0], [0.7, 77.0], [0.8, 77.0], [0.9, 77.0], [1.0, 78.0], [1.1, 78.0], [1.2, 78.0], [1.3, 78.0], [1.4, 78.0], [1.5, 79.0], [1.6, 79.0], [1.7, 79.0], [1.8, 79.0], [1.9, 79.0], [2.0, 79.0], [2.1, 80.0], [2.2, 80.0], [2.3, 80.0], [2.4, 80.0], [2.5, 80.0], [2.6, 80.0], [2.7, 80.0], [2.8, 81.0], [2.9, 81.0], [3.0, 81.0], [3.1, 81.0], [3.2, 81.0], [3.3, 81.0], [3.4, 81.0], [3.5, 82.0], [3.6, 82.0], [3.7, 82.0], [3.8, 82.0], [3.9, 82.0], [4.0, 82.0], [4.1, 82.0], [4.2, 82.0], [4.3, 82.0], [4.4, 83.0], [4.5, 83.0], [4.6, 83.0], [4.7, 83.0], [4.8, 83.0], [4.9, 83.0], [5.0, 83.0], [5.1, 83.0], [5.2, 83.0], [5.3, 83.0], [5.4, 84.0], [5.5, 84.0], [5.6, 84.0], [5.7, 84.0], [5.8, 84.0], [5.9, 84.0], [6.0, 84.0], [6.1, 84.0], [6.2, 84.0], [6.3, 84.0], [6.4, 84.0], [6.5, 84.0], [6.6, 84.0], [6.7, 84.0], [6.8, 84.0], [6.9, 85.0], [7.0, 85.0], [7.1, 85.0], [7.2, 85.0], [7.3, 85.0], [7.4, 85.0], [7.5, 85.0], [7.6, 85.0], [7.7, 85.0], [7.8, 85.0], [7.9, 85.0], [8.0, 85.0], [8.1, 85.0], [8.2, 86.0], [8.3, 86.0], [8.4, 86.0], [8.5, 86.0], [8.6, 86.0], [8.7, 86.0], [8.8, 86.0], [8.9, 86.0], [9.0, 86.0], [9.1, 86.0], [9.2, 86.0], [9.3, 86.0], [9.4, 87.0], [9.5, 87.0], [9.6, 87.0], [9.7, 87.0], [9.8, 87.0], [9.9, 87.0], [10.0, 87.0], [10.1, 87.0], [10.2, 87.0], [10.3, 87.0], [10.4, 87.0], [10.5, 87.0], [10.6, 88.0], [10.7, 88.0], [10.8, 88.0], [10.9, 88.0], [11.0, 88.0], [11.1, 88.0], [11.2, 88.0], [11.3, 88.0], [11.4, 88.0], [11.5, 88.0], [11.6, 88.0], [11.7, 88.0], [11.8, 88.0], [11.9, 89.0], [12.0, 89.0], [12.1, 89.0], [12.2, 89.0], [12.3, 89.0], [12.4, 89.0], [12.5, 89.0], [12.6, 89.0], [12.7, 89.0], [12.8, 89.0], [12.9, 89.0], [13.0, 89.0], [13.1, 89.0], [13.2, 89.0], [13.3, 89.0], [13.4, 89.0], [13.5, 90.0], [13.6, 90.0], [13.7, 90.0], [13.8, 90.0], [13.9, 90.0], [14.0, 90.0], [14.1, 90.0], [14.2, 90.0], [14.3, 90.0], [14.4, 90.0], [14.5, 90.0], [14.6, 90.0], [14.7, 90.0], [14.8, 90.0], [14.9, 90.0], [15.0, 90.0], [15.1, 90.0], [15.2, 91.0], [15.3, 91.0], [15.4, 91.0], [15.5, 91.0], [15.6, 91.0], [15.7, 91.0], [15.8, 91.0], [15.9, 91.0], [16.0, 91.0], [16.1, 91.0], [16.2, 91.0], [16.3, 91.0], [16.4, 91.0], [16.5, 92.0], [16.6, 92.0], [16.7, 92.0], [16.8, 92.0], [16.9, 92.0], [17.0, 92.0], [17.1, 92.0], [17.2, 92.0], [17.3, 92.0], [17.4, 92.0], [17.5, 92.0], [17.6, 92.0], [17.7, 93.0], [17.8, 93.0], [17.9, 93.0], [18.0, 93.0], [18.1, 93.0], [18.2, 93.0], [18.3, 93.0], [18.4, 93.0], [18.5, 93.0], [18.6, 93.0], [18.7, 93.0], [18.8, 93.0], [18.9, 93.0], [19.0, 93.0], [19.1, 93.0], [19.2, 93.0], [19.3, 93.0], [19.4, 94.0], [19.5, 94.0], [19.6, 94.0], [19.7, 94.0], [19.8, 94.0], [19.9, 94.0], [20.0, 94.0], [20.1, 94.0], [20.2, 94.0], [20.3, 94.0], [20.4, 94.0], [20.5, 94.0], [20.6, 94.0], [20.7, 94.0], [20.8, 94.0], [20.9, 94.0], [21.0, 94.0], [21.1, 95.0], [21.2, 95.0], [21.3, 95.0], [21.4, 95.0], [21.5, 95.0], [21.6, 95.0], [21.7, 95.0], [21.8, 95.0], [21.9, 95.0], [22.0, 95.0], [22.1, 95.0], [22.2, 95.0], [22.3, 96.0], [22.4, 96.0], [22.5, 96.0], [22.6, 96.0], [22.7, 96.0], [22.8, 96.0], [22.9, 96.0], [23.0, 96.0], [23.1, 96.0], [23.2, 96.0], [23.3, 96.0], [23.4, 96.0], [23.5, 96.0], [23.6, 96.0], [23.7, 96.0], [23.8, 97.0], [23.9, 97.0], [24.0, 97.0], [24.1, 97.0], [24.2, 97.0], [24.3, 97.0], [24.4, 97.0], [24.5, 97.0], [24.6, 97.0], [24.7, 97.0], [24.8, 98.0], [24.9, 98.0], [25.0, 98.0], [25.1, 98.0], [25.2, 98.0], [25.3, 98.0], [25.4, 98.0], [25.5, 98.0], [25.6, 98.0], [25.7, 98.0], [25.8, 98.0], [25.9, 98.0], [26.0, 99.0], [26.1, 99.0], [26.2, 99.0], [26.3, 99.0], [26.4, 99.0], [26.5, 99.0], [26.6, 99.0], [26.7, 99.0], [26.8, 99.0], [26.9, 100.0], [27.0, 100.0], [27.1, 100.0], [27.2, 100.0], [27.3, 100.0], [27.4, 100.0], [27.5, 100.0], [27.6, 100.0], [27.7, 100.0], [27.8, 100.0], [27.9, 100.0], [28.0, 100.0], [28.1, 100.0], [28.2, 101.0], [28.3, 101.0], [28.4, 101.0], [28.5, 101.0], [28.6, 101.0], [28.7, 101.0], [28.8, 101.0], [28.9, 101.0], [29.0, 101.0], [29.1, 101.0], [29.2, 101.0], [29.3, 101.0], [29.4, 102.0], [29.5, 102.0], [29.6, 102.0], [29.7, 102.0], [29.8, 102.0], [29.9, 102.0], [30.0, 102.0], [30.1, 102.0], [30.2, 102.0], [30.3, 102.0], [30.4, 102.0], [30.5, 102.0], [30.6, 102.0], [30.7, 103.0], [30.8, 103.0], [30.9, 103.0], [31.0, 103.0], [31.1, 103.0], [31.2, 103.0], [31.3, 103.0], [31.4, 103.0], [31.5, 103.0], [31.6, 103.0], [31.7, 104.0], [31.8, 104.0], [31.9, 104.0], [32.0, 104.0], [32.1, 104.0], [32.2, 104.0], [32.3, 104.0], [32.4, 104.0], [32.5, 105.0], [32.6, 105.0], [32.7, 105.0], [32.8, 105.0], [32.9, 105.0], [33.0, 105.0], [33.1, 105.0], [33.2, 105.0], [33.3, 105.0], [33.4, 105.0], [33.5, 105.0], [33.6, 106.0], [33.7, 106.0], [33.8, 106.0], [33.9, 106.0], [34.0, 106.0], [34.1, 106.0], [34.2, 106.0], [34.3, 107.0], [34.4, 107.0], [34.5, 107.0], [34.6, 107.0], [34.7, 107.0], [34.8, 107.0], [34.9, 107.0], [35.0, 108.0], [35.1, 108.0], [35.2, 108.0], [35.3, 108.0], [35.4, 108.0], [35.5, 108.0], [35.6, 108.0], [35.7, 108.0], [35.8, 108.0], [35.9, 109.0], [36.0, 109.0], [36.1, 109.0], [36.2, 109.0], [36.3, 109.0], [36.4, 110.0], [36.5, 110.0], [36.6, 110.0], [36.7, 110.0], [36.8, 110.0], [36.9, 110.0], [37.0, 110.0], [37.1, 111.0], [37.2, 111.0], [37.3, 111.0], [37.4, 111.0], [37.5, 111.0], [37.6, 111.0], [37.7, 111.0], [37.8, 112.0], [37.9, 112.0], [38.0, 112.0], [38.1, 112.0], [38.2, 112.0], [38.3, 113.0], [38.4, 113.0], [38.5, 113.0], [38.6, 113.0], [38.7, 113.0], [38.8, 113.0], [38.9, 114.0], [39.0, 114.0], [39.1, 114.0], [39.2, 114.0], [39.3, 115.0], [39.4, 115.0], [39.5, 115.0], [39.6, 115.0], [39.7, 116.0], [39.8, 116.0], [39.9, 116.0], [40.0, 116.0], [40.1, 117.0], [40.2, 117.0], [40.3, 117.0], [40.4, 117.0], [40.5, 118.0], [40.6, 118.0], [40.7, 118.0], [40.8, 118.0], [40.9, 119.0], [41.0, 119.0], [41.1, 119.0], [41.2, 120.0], [41.3, 120.0], [41.4, 121.0], [41.5, 121.0], [41.6, 121.0], [41.7, 121.0], [41.8, 122.0], [41.9, 122.0], [42.0, 123.0], [42.1, 123.0], [42.2, 124.0], [42.3, 124.0], [42.4, 125.0], [42.5, 125.0], [42.6, 126.0], [42.7, 127.0], [42.8, 127.0], [42.9, 128.0], [43.0, 128.0], [43.1, 129.0], [43.2, 129.0], [43.3, 130.0], [43.4, 130.0], [43.5, 131.0], [43.6, 133.0], [43.7, 133.0], [43.8, 134.0], [43.9, 135.0], [44.0, 136.0], [44.1, 137.0], [44.2, 137.0], [44.3, 138.0], [44.4, 139.0], [44.5, 140.0], [44.6, 140.0], [44.7, 141.0], [44.8, 142.0], [44.9, 143.0], [45.0, 144.0], [45.1, 145.0], [45.2, 145.0], [45.3, 145.0], [45.4, 147.0], [45.5, 147.0], [45.6, 148.0], [45.7, 149.0], [45.8, 150.0], [45.9, 151.0], [46.0, 151.0], [46.1, 152.0], [46.2, 152.0], [46.3, 153.0], [46.4, 153.0], [46.5, 154.0], [46.6, 154.0], [46.7, 155.0], [46.8, 156.0], [46.9, 156.0], [47.0, 157.0], [47.1, 158.0], [47.2, 158.0], [47.3, 158.0], [47.4, 159.0], [47.5, 159.0], [47.6, 160.0], [47.7, 160.0], [47.8, 161.0], [47.9, 161.0], [48.0, 161.0], [48.1, 161.0], [48.2, 161.0], [48.3, 162.0], [48.4, 163.0], [48.5, 163.0], [48.6, 164.0], [48.7, 164.0], [48.8, 164.0], [48.9, 164.0], [49.0, 165.0], [49.1, 165.0], [49.2, 165.0], [49.3, 165.0], [49.4, 165.0], [49.5, 166.0], [49.6, 166.0], [49.7, 166.0], [49.8, 167.0], [49.9, 167.0], [50.0, 167.0], [50.1, 167.0], [50.2, 167.0], [50.3, 168.0], [50.4, 168.0], [50.5, 168.0], [50.6, 169.0], [50.7, 169.0], [50.8, 169.0], [50.9, 169.0], [51.0, 169.0], [51.1, 170.0], [51.2, 170.0], [51.3, 170.0], [51.4, 170.0], [51.5, 171.0], [51.6, 171.0], [51.7, 171.0], [51.8, 171.0], [51.9, 172.0], [52.0, 172.0], [52.1, 172.0], [52.2, 172.0], [52.3, 173.0], [52.4, 173.0], [52.5, 173.0], [52.6, 173.0], [52.7, 173.0], [52.8, 174.0], [52.9, 174.0], [53.0, 174.0], [53.1, 174.0], [53.2, 174.0], [53.3, 175.0], [53.4, 175.0], [53.5, 175.0], [53.6, 176.0], [53.7, 176.0], [53.8, 176.0], [53.9, 176.0], [54.0, 176.0], [54.1, 177.0], [54.2, 177.0], [54.3, 177.0], [54.4, 177.0], [54.5, 177.0], [54.6, 178.0], [54.7, 178.0], [54.8, 178.0], [54.9, 178.0], [55.0, 179.0], [55.1, 179.0], [55.2, 179.0], [55.3, 179.0], [55.4, 179.0], [55.5, 180.0], [55.6, 180.0], [55.7, 180.0], [55.8, 180.0], [55.9, 181.0], [56.0, 181.0], [56.1, 181.0], [56.2, 181.0], [56.3, 181.0], [56.4, 181.0], [56.5, 181.0], [56.6, 182.0], [56.7, 182.0], [56.8, 182.0], [56.9, 183.0], [57.0, 183.0], [57.1, 183.0], [57.2, 184.0], [57.3, 184.0], [57.4, 184.0], [57.5, 184.0], [57.6, 184.0], [57.7, 185.0], [57.8, 185.0], [57.9, 185.0], [58.0, 186.0], [58.1, 186.0], [58.2, 186.0], [58.3, 186.0], [58.4, 187.0], [58.5, 187.0], [58.6, 188.0], [58.7, 188.0], [58.8, 188.0], [58.9, 189.0], [59.0, 189.0], [59.1, 189.0], [59.2, 190.0], [59.3, 190.0], [59.4, 190.0], [59.5, 190.0], [59.6, 191.0], [59.7, 191.0], [59.8, 191.0], [59.9, 192.0], [60.0, 192.0], [60.1, 192.0], [60.2, 193.0], [60.3, 193.0], [60.4, 194.0], [60.5, 194.0], [60.6, 194.0], [60.7, 194.0], [60.8, 195.0], [60.9, 196.0], [61.0, 196.0], [61.1, 197.0], [61.2, 197.0], [61.3, 198.0], [61.4, 198.0], [61.5, 198.0], [61.6, 199.0], [61.7, 199.0], [61.8, 199.0], [61.9, 200.0], [62.0, 200.0], [62.1, 201.0], [62.2, 201.0], [62.3, 202.0], [62.4, 203.0], [62.5, 203.0], [62.6, 203.0], [62.7, 204.0], [62.8, 205.0], [62.9, 205.0], [63.0, 205.0], [63.1, 206.0], [63.2, 207.0], [63.3, 207.0], [63.4, 209.0], [63.5, 209.0], [63.6, 210.0], [63.7, 211.0], [63.8, 212.0], [63.9, 214.0], [64.0, 214.0], [64.1, 214.0], [64.2, 215.0], [64.3, 216.0], [64.4, 217.0], [64.5, 218.0], [64.6, 219.0], [64.7, 220.0], [64.8, 222.0], [64.9, 223.0], [65.0, 224.0], [65.1, 225.0], [65.2, 227.0], [65.3, 227.0], [65.4, 228.0], [65.5, 230.0], [65.6, 230.0], [65.7, 232.0], [65.8, 233.0], [65.9, 236.0], [66.0, 238.0], [66.1, 239.0], [66.2, 240.0], [66.3, 240.0], [66.4, 244.0], [66.5, 246.0], [66.6, 248.0], [66.7, 249.0], [66.8, 254.0], [66.9, 254.0], [67.0, 256.0], [67.1, 258.0], [67.2, 261.0], [67.3, 263.0], [67.4, 265.0], [67.5, 270.0], [67.6, 272.0], [67.7, 274.0], [67.8, 276.0], [67.9, 278.0], [68.0, 280.0], [68.1, 285.0], [68.2, 287.0], [68.3, 289.0], [68.4, 292.0], [68.5, 294.0], [68.6, 295.0], [68.7, 297.0], [68.8, 301.0], [68.9, 303.0], [69.0, 304.0], [69.1, 306.0], [69.2, 309.0], [69.3, 311.0], [69.4, 312.0], [69.5, 314.0], [69.6, 314.0], [69.7, 316.0], [69.8, 318.0], [69.9, 319.0], [70.0, 321.0], [70.1, 323.0], [70.2, 324.0], [70.3, 324.0], [70.4, 326.0], [70.5, 327.0], [70.6, 328.0], [70.7, 329.0], [70.8, 330.0], [70.9, 332.0], [71.0, 333.0], [71.1, 333.0], [71.2, 334.0], [71.3, 335.0], [71.4, 335.0], [71.5, 336.0], [71.6, 337.0], [71.7, 338.0], [71.8, 339.0], [71.9, 340.0], [72.0, 340.0], [72.1, 341.0], [72.2, 341.0], [72.3, 342.0], [72.4, 342.0], [72.5, 344.0], [72.6, 344.0], [72.7, 345.0], [72.8, 345.0], [72.9, 346.0], [73.0, 347.0], [73.1, 348.0], [73.2, 348.0], [73.3, 349.0], [73.4, 350.0], [73.5, 350.0], [73.6, 352.0], [73.7, 352.0], [73.8, 352.0], [73.9, 353.0], [74.0, 353.0], [74.1, 354.0], [74.2, 354.0], [74.3, 355.0], [74.4, 356.0], [74.5, 356.0], [74.6, 356.0], [74.7, 357.0], [74.8, 359.0], [74.9, 359.0], [75.0, 359.0], [75.1, 360.0], [75.2, 361.0], [75.3, 361.0], [75.4, 362.0], [75.5, 362.0], [75.6, 363.0], [75.7, 363.0], [75.8, 364.0], [75.9, 364.0], [76.0, 365.0], [76.1, 366.0], [76.2, 366.0], [76.3, 367.0], [76.4, 367.0], [76.5, 368.0], [76.6, 369.0], [76.7, 370.0], [76.8, 371.0], [76.9, 372.0], [77.0, 373.0], [77.1, 374.0], [77.2, 375.0], [77.3, 376.0], [77.4, 376.0], [77.5, 377.0], [77.6, 379.0], [77.7, 382.0], [77.8, 383.0], [77.9, 385.0], [78.0, 386.0], [78.1, 387.0], [78.2, 389.0], [78.3, 390.0], [78.4, 391.0], [78.5, 392.0], [78.6, 393.0], [78.7, 394.0], [78.8, 395.0], [78.9, 396.0], [79.0, 398.0], [79.1, 401.0], [79.2, 403.0], [79.3, 403.0], [79.4, 405.0], [79.5, 406.0], [79.6, 407.0], [79.7, 409.0], [79.8, 410.0], [79.9, 413.0], [80.0, 413.0], [80.1, 416.0], [80.2, 417.0], [80.3, 419.0], [80.4, 421.0], [80.5, 422.0], [80.6, 425.0], [80.7, 427.0], [80.8, 429.0], [80.9, 432.0], [81.0, 434.0], [81.1, 435.0], [81.2, 437.0], [81.3, 439.0], [81.4, 440.0], [81.5, 442.0], [81.6, 444.0], [81.7, 446.0], [81.8, 448.0], [81.9, 449.0], [82.0, 457.0], [82.1, 460.0], [82.2, 462.0], [82.3, 468.0], [82.4, 472.0], [82.5, 475.0], [82.6, 478.0], [82.7, 480.0], [82.8, 482.0], [82.9, 486.0], [83.0, 489.0], [83.1, 492.0], [83.2, 495.0], [83.3, 497.0], [83.4, 499.0], [83.5, 502.0], [83.6, 503.0], [83.7, 505.0], [83.8, 507.0], [83.9, 509.0], [84.0, 511.0], [84.1, 513.0], [84.2, 515.0], [84.3, 518.0], [84.4, 519.0], [84.5, 520.0], [84.6, 524.0], [84.7, 526.0], [84.8, 530.0], [84.9, 535.0], [85.0, 538.0], [85.1, 540.0], [85.2, 542.0], [85.3, 545.0], [85.4, 548.0], [85.5, 551.0], [85.6, 552.0], [85.7, 558.0], [85.8, 559.0], [85.9, 561.0], [86.0, 567.0], [86.1, 571.0], [86.2, 572.0], [86.3, 576.0], [86.4, 579.0], [86.5, 585.0], [86.6, 588.0], [86.7, 593.0], [86.8, 596.0], [86.9, 602.0], [87.0, 607.0], [87.1, 610.0], [87.2, 613.0], [87.3, 616.0], [87.4, 621.0], [87.5, 626.0], [87.6, 628.0], [87.7, 631.0], [87.8, 635.0], [87.9, 636.0], [88.0, 638.0], [88.1, 640.0], [88.2, 642.0], [88.3, 645.0], [88.4, 647.0], [88.5, 648.0], [88.6, 651.0], [88.7, 653.0], [88.8, 654.0], [88.9, 656.0], [89.0, 660.0], [89.1, 663.0], [89.2, 665.0], [89.3, 669.0], [89.4, 673.0], [89.5, 677.0], [89.6, 679.0], [89.7, 680.0], [89.8, 682.0], [89.9, 684.0], [90.0, 684.0], [90.1, 688.0], [90.2, 693.0], [90.3, 696.0], [90.4, 700.0], [90.5, 704.0], [90.6, 707.0], [90.7, 714.0], [90.8, 715.0], [90.9, 720.0], [91.0, 723.0], [91.1, 724.0], [91.2, 729.0], [91.3, 734.0], [91.4, 735.0], [91.5, 746.0], [91.6, 749.0], [91.7, 751.0], [91.8, 761.0], [91.9, 763.0], [92.0, 767.0], [92.1, 772.0], [92.2, 776.0], [92.3, 778.0], [92.4, 780.0], [92.5, 783.0], [92.6, 788.0], [92.7, 793.0], [92.8, 803.0], [92.9, 808.0], [93.0, 821.0], [93.1, 824.0], [93.2, 834.0], [93.3, 840.0], [93.4, 851.0], [93.5, 860.0], [93.6, 883.0], [93.7, 907.0], [93.8, 947.0], [93.9, 975.0], [94.0, 982.0], [94.1, 1004.0], [94.2, 1025.0], [94.3, 1053.0], [94.4, 1075.0], [94.5, 1090.0], [94.6, 1109.0], [94.7, 1135.0], [94.8, 1155.0], [94.9, 1164.0], [95.0, 1176.0], [95.1, 1183.0], [95.2, 1186.0], [95.3, 1190.0], [95.4, 1194.0], [95.5, 1202.0], [95.6, 1204.0], [95.7, 1209.0], [95.8, 1214.0], [95.9, 1230.0], [96.0, 1251.0], [96.1, 1256.0], [96.2, 1266.0], [96.3, 1274.0], [96.4, 1281.0], [96.5, 1295.0], [96.6, 1301.0], [96.7, 1304.0], [96.8, 1323.0], [96.9, 1350.0], [97.0, 1374.0], [97.1, 1387.0], [97.2, 1433.0], [97.3, 1475.0], [97.4, 1490.0], [97.5, 1560.0], [97.6, 1621.0], [97.7, 1719.0], [97.8, 1806.0], [97.9, 1857.0], [98.0, 2002.0], [98.1, 2210.0], [98.2, 2314.0], [98.3, 2377.0], [98.4, 2406.0], [98.5, 2465.0], [98.6, 2550.0], [98.7, 2624.0], [98.8, 2678.0], [98.9, 2796.0], [99.0, 3252.0], [99.1, 3463.0], [99.2, 4502.0], [99.3, 4756.0], [99.4, 4843.0], [99.5, 5093.0], [99.6, 5184.0], [99.7, 5277.0], [99.8, 6018.0], [99.9, 9394.0], [100.0, 20609.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1845.0, "series": [{"data": [[0.0, 8.0], [600.0, 73.0], [700.0, 60.0], [800.0, 51.0], [900.0, 35.0], [1000.0, 25.0], [1100.0, 21.0], [1200.0, 34.0], [1300.0, 33.0], [1400.0, 19.0], [1500.0, 8.0], [1600.0, 20.0], [100.0, 1714.0], [1700.0, 9.0], [1800.0, 6.0], [1900.0, 7.0], [2000.0, 6.0], [2100.0, 8.0], [2300.0, 2.0], [2200.0, 3.0], [2400.0, 4.0], [2500.0, 6.0], [2600.0, 3.0], [2800.0, 10.0], [2700.0, 2.0], [2900.0, 12.0], [3000.0, 11.0], [3100.0, 7.0], [3200.0, 3.0], [200.0, 1845.0], [3300.0, 1.0], [3400.0, 1.0], [3700.0, 2.0], [3800.0, 2.0], [3900.0, 2.0], [4000.0, 1.0], [4300.0, 1.0], [4400.0, 2.0], [300.0, 286.0], [4700.0, 1.0], [5000.0, 1.0], [5100.0, 2.0], [400.0, 157.0], [500.0, 108.0]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[93100.0, 1.0], [100.0, 4.0], [38500.0, 1.0], [48900.0, 1.0], [200.0, 86.0], [300.0, 76.0], [400.0, 95.0], [500.0, 225.0], [600.0, 245.0], [700.0, 256.0], [800.0, 225.0], [900.0, 238.0], [1000.0, 223.0], [1100.0, 193.0], [1200.0, 159.0], [1300.0, 176.0], [1400.0, 154.0], [1500.0, 163.0], [1600.0, 183.0], [1700.0, 150.0], [1800.0, 116.0], [1900.0, 133.0], [2000.0, 116.0], [2100.0, 100.0], [2300.0, 79.0], [2200.0, 90.0], [2400.0, 61.0], [2500.0, 76.0], [2600.0, 48.0], [2700.0, 46.0], [2800.0, 41.0], [2900.0, 58.0], [3000.0, 42.0], [3100.0, 41.0], [3200.0, 54.0], [3300.0, 41.0], [3400.0, 26.0], [3500.0, 27.0], [3700.0, 21.0], [3600.0, 24.0], [3800.0, 32.0], [3900.0, 18.0], [4000.0, 22.0], [4100.0, 16.0], [4200.0, 12.0], [4300.0, 10.0], [68100.0, 1.0], [4400.0, 9.0], [4600.0, 13.0], [4500.0, 10.0], [4800.0, 7.0], [4700.0, 9.0], [74900.0, 1.0], [4900.0, 13.0], [5000.0, 11.0], [5100.0, 20.0], [5200.0, 26.0], [5300.0, 11.0], [5500.0, 14.0], [5600.0, 16.0], [5400.0, 16.0], [5800.0, 10.0], [5700.0, 19.0], [5900.0, 32.0], [6000.0, 10.0], [6100.0, 10.0], [6200.0, 14.0], [6300.0, 20.0], [6400.0, 12.0], [6500.0, 10.0], [6600.0, 9.0], [6900.0, 6.0], [6800.0, 9.0], [6700.0, 11.0], [7000.0, 4.0], [7100.0, 6.0], [7200.0, 2.0], [7300.0, 4.0], [7400.0, 2.0], [7600.0, 7.0], [7500.0, 2.0], [7700.0, 5.0], [7900.0, 3.0], [7800.0, 1.0], [8000.0, 2.0], [8500.0, 2.0], [8400.0, 1.0], [8300.0, 2.0], [8700.0, 2.0], [8600.0, 1.0], [9000.0, 3.0], [9200.0, 2.0], [9100.0, 1.0], [8800.0, 1.0], [9400.0, 1.0], [9600.0, 1.0], [9300.0, 1.0], [9700.0, 1.0], [10200.0, 4.0], [10000.0, 2.0], [10100.0, 1.0], [9800.0, 1.0], [10600.0, 3.0], [10500.0, 1.0], [10700.0, 2.0], [10400.0, 3.0], [11100.0, 5.0], [11000.0, 2.0], [10800.0, 2.0], [11500.0, 3.0], [11300.0, 2.0], [11800.0, 1.0], [12100.0, 1.0], [12600.0, 2.0], [12400.0, 1.0], [12500.0, 1.0], [12300.0, 1.0], [12700.0, 1.0], [13300.0, 2.0], [13800.0, 1.0], [14200.0, 1.0], [14300.0, 1.0], [15800.0, 1.0], [18700.0, 1.0], [19100.0, 1.0], [19800.0, 1.0], [20100.0, 1.0], [21300.0, 1.0], [21500.0, 1.0], [22300.0, 1.0], [25800.0, 1.0], [39200.0, 1.0], [43400.0, 1.0], [61000.0, 1.0], [66000.0, 1.0]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[0.0, 82.0], [600.0, 205.0], [700.0, 259.0], [800.0, 392.0], [900.0, 181.0], [1000.0, 93.0], [1100.0, 113.0], [1200.0, 124.0], [1300.0, 100.0], [1400.0, 117.0], [1500.0, 81.0], [1600.0, 72.0], [1700.0, 54.0], [1800.0, 69.0], [1900.0, 21.0], [2000.0, 56.0], [2100.0, 26.0], [2200.0, 19.0], [2300.0, 10.0], [2400.0, 11.0], [2500.0, 28.0], [2600.0, 29.0], [2800.0, 17.0], [2700.0, 25.0], [2900.0, 26.0], [3000.0, 12.0], [3100.0, 12.0], [3200.0, 2.0], [3300.0, 8.0], [3400.0, 7.0], [3500.0, 6.0], [3600.0, 9.0], [3700.0, 3.0], [3800.0, 4.0], [3900.0, 5.0], [4000.0, 2.0], [4100.0, 5.0], [4300.0, 2.0], [4200.0, 2.0], [4600.0, 3.0], [4400.0, 3.0], [4500.0, 4.0], [4800.0, 9.0], [4700.0, 2.0], [5100.0, 18.0], [4900.0, 4.0], [5000.0, 12.0], [5200.0, 17.0], [5300.0, 3.0], [5600.0, 4.0], [5400.0, 6.0], [5500.0, 3.0], [5800.0, 4.0], [5700.0, 4.0], [6000.0, 8.0], [6100.0, 1.0], [5900.0, 2.0], [6300.0, 1.0], [6200.0, 1.0], [6400.0, 2.0], [6500.0, 3.0], [6600.0, 1.0], [6700.0, 2.0], [6800.0, 2.0], [7100.0, 2.0], [7400.0, 1.0], [7200.0, 2.0], [7300.0, 1.0], [7600.0, 1.0], [8000.0, 1.0], [8700.0, 1.0], [8200.0, 1.0], [8600.0, 1.0], [9100.0, 1.0], [9600.0, 2.0], [9700.0, 2.0], [10100.0, 2.0], [9800.0, 3.0], [9900.0, 1.0], [10200.0, 1.0], [10500.0, 1.0], [10400.0, 1.0], [10600.0, 1.0], [11000.0, 1.0], [12300.0, 1.0], [15200.0, 1.0], [18500.0, 1.0], [18700.0, 1.0], [20000.0, 1.0], [100.0, 790.0], [41400.0, 1.0], [200.0, 396.0], [61600.0, 1.0], [300.0, 186.0], [400.0, 260.0], [500.0, 560.0]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[0.0, 1240.0], [600.0, 162.0], [700.0, 110.0], [800.0, 42.0], [900.0, 19.0], [1000.0, 22.0], [1100.0, 41.0], [1200.0, 53.0], [1300.0, 25.0], [1400.0, 14.0], [1500.0, 7.0], [1600.0, 5.0], [1700.0, 4.0], [1800.0, 8.0], [1900.0, 2.0], [2000.0, 3.0], [2100.0, 2.0], [2300.0, 11.0], [2200.0, 3.0], [2400.0, 6.0], [2500.0, 5.0], [2600.0, 10.0], [2700.0, 3.0], [3000.0, 1.0], [3100.0, 2.0], [3300.0, 3.0], [3200.0, 2.0], [3400.0, 3.0], [3600.0, 1.0], [3800.0, 1.0], [4500.0, 1.0], [4600.0, 2.0], [4800.0, 4.0], [4700.0, 3.0], [4900.0, 2.0], [5000.0, 2.0], [5100.0, 6.0], [5300.0, 3.0], [5200.0, 4.0], [6000.0, 1.0], [6200.0, 1.0], [7200.0, 1.0], [7500.0, 1.0], [7800.0, 1.0], [9300.0, 1.0], [9400.0, 1.0], [10000.0, 1.0], [18800.0, 1.0], [20600.0, 1.0], [100.0, 1616.0], [200.0, 322.0], [300.0, 474.0], [400.0, 202.0], [500.0, 159.0]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 93100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 91.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 9831.0, "series": [{"data": [[0.0, 9831.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 5334.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3277.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 91.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 79.12648809523809, "minX": 1.55918514E12, "maxY": 80.0, "series": [{"data": [[1.55918526E12, 80.0], [1.5591852E12, 80.0], [1.55918538E12, 80.0], [1.55918532E12, 80.0], [1.55918544E12, 79.12648809523809], [1.55918514E12, 80.0]], "isOverall": false, "label": "distributed-test", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55918544E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 84.0, "minX": 4.0, "maxY": 74945.0, "series": [{"data": [[33.0, 198.0], [35.0, 209.0], [39.0, 197.0], [43.0, 273.0], [47.0, 196.0], [48.0, 180.0], [50.0, 201.0], [54.0, 207.0], [56.0, 276.0], [58.0, 242.0], [60.0, 201.0], [62.0, 183.0], [74.0, 252.0], [72.0, 389.0], [79.0, 217.0], [77.0, 236.0], [80.0, 360.85430752453624], [9.0, 616.0], [10.0, 199.0], [13.0, 183.0], [20.0, 271.0], [22.0, 231.0], [25.0, 182.0], [28.0, 254.0], [31.0, 206.0]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[79.79965307892455, 360.13876843018187]], "isOverall": false, "label": "BuyBook-Aggregated", "isController": false}, {"data": [[35.0, 1303.0], [37.0, 2759.0], [36.0, 895.0], [39.0, 1171.0], [46.0, 1234.5], [51.0, 3916.0], [50.0, 1083.0], [52.0, 902.0], [55.0, 733.0], [63.0, 2219.0], [66.0, 1158.0], [64.0, 1604.0], [4.0, 74945.0], [70.0, 3298.0], [69.0, 1002.0], [68.0, 1094.0], [73.0, 271.0], [80.0, 2149.7284696740726], [5.0, 20105.0], [6.0, 5393.0], [7.0, 8050.0], [8.0, 6043.0], [14.0, 2918.0], [15.0, 5974.0], [17.0, 2827.0], [18.0, 2797.0], [19.0, 2703.0], [21.0, 2496.0], [23.0, 1223.0], [25.0, 972.0], [26.0, 2826.0], [27.0, 869.0], [31.0, 1195.0]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[79.67795157488756, 2170.152131990568]], "isOverall": false, "label": "SearchBooks-Aggregated", "isController": false}, {"data": [[33.0, 1593.0], [41.0, 5931.0], [40.0, 746.0], [11.0, 4218.0], [46.0, 1833.0], [12.0, 2288.0], [58.0, 891.0], [62.0, 1471.0], [67.0, 491.0], [65.0, 432.0], [16.0, 6039.0], [71.0, 2097.0], [73.0, 496.0], [76.0, 1564.0], [80.0, 1009.6357142857175]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[79.9031074665516, 1013.0787656452342]], "isOverall": false, "label": "GetBook-Aggregated", "isController": false}, {"data": [[75.0, 616.0], [74.0, 776.0], [72.0, 820.0], [78.0, 84.0], [80.0, 350.68515709642446], [42.0, 1368.0]], "isOverall": false, "label": "Login", "isController": false}, {"data": [[79.98722943722944, 351.0987012987011]], "isOverall": false, "label": "Login-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 80.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 194.86666666666667, "minX": 1.55918514E12, "maxY": 363170.5, "series": [{"data": [[1.55918526E12, 363170.5], [1.5591852E12, 343836.6666666667], [1.55918538E12, 359779.06666666665], [1.55918532E12, 361217.9], [1.55918544E12, 314306.35], [1.55918514E12, 18379.933333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.55918526E12, 9461.916666666666], [1.5591852E12, 9205.4], [1.55918538E12, 9442.4], [1.55918532E12, 9560.016666666666], [1.55918544E12, 8381.233333333334], [1.55918514E12, 194.86666666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55918544E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 228.21247357293888, "minX": 1.55918514E12, "maxY": 6052.569620253165, "series": [{"data": [[1.55918526E12, 397.413680781759], [1.5591852E12, 540.566381156317], [1.55918538E12, 228.21247357293888], [1.55918532E12, 331.98676171079404], [1.55918544E12, 299.34016887816637]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[1.55918526E12, 1990.313684210528], [1.5591852E12, 2035.276330690828], [1.55918538E12, 2181.503171247357], [1.55918532E12, 2155.2307692307704], [1.55918544E12, 2154.6325581395367], [1.55918514E12, 6052.569620253165]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[1.55918526E12, 1171.782383419688], [1.5591852E12, 1037.606837606837], [1.55918538E12, 870.1917372881351], [1.55918532E12, 908.7713382507904], [1.55918544E12, 1081.8476190476201]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[1.55918526E12, 374.4833679833681], [1.5591852E12, 328.6106951871654], [1.55918538E12, 334.07180570221794], [1.55918532E12, 349.10582010582056], [1.55918544E12, 370.99999999999983]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55918544E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 228.21035940803407, "minX": 1.55918514E12, "maxY": 5695.253164556962, "series": [{"data": [[1.55918526E12, 397.4049945711183], [1.5591852E12, 540.555674518202], [1.55918538E12, 228.21035940803407], [1.55918532E12, 331.9816700611001], [1.55918544E12, 299.3353437876958]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[1.55918526E12, 690.0957894736844], [1.5591852E12, 602.392978482446], [1.55918538E12, 486.59936575052836], [1.55918532E12, 512.132771338251], [1.55918544E12, 593.3546511627898], [1.55918514E12, 5695.253164556962]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[1.55918526E12, 610.3740932642474], [1.5591852E12, 588.9017094017092], [1.55918538E12, 362.5783898305085], [1.55918532E12, 373.84931506849307], [1.55918544E12, 538.995238095239]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[1.55918526E12, 351.5218295218296], [1.5591852E12, 311.89732620320865], [1.55918538E12, 297.6462513199578], [1.55918532E12, 284.384126984127], [1.55918544E12, 336.94223826714847]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55918544E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 11.589935760171297, "minX": 1.55918514E12, "maxY": 166.10631578947383, "series": [{"data": [[1.55918526E12, 21.844733984799106], [1.5591852E12, 11.589935760171297], [1.55918538E12, 14.279069767441857], [1.55918532E12, 13.198574338085555], [1.55918544E12, 16.294330518697226]], "isOverall": false, "label": "BuyBook", "isController": false}, {"data": [[1.55918526E12, 166.10631578947383], [1.5591852E12, 138.5028312570783], [1.55918538E12, 136.62684989429172], [1.55918532E12, 127.78292939936783], [1.55918544E12, 137.36976744186026], [1.55918514E12, 165.65822784810132]], "isOverall": false, "label": "SearchBooks", "isController": false}, {"data": [[1.55918526E12, 48.57720207253887], [1.5591852E12, 54.09722222222223], [1.55918538E12, 40.408898305084755], [1.55918532E12, 43.87249736564803], [1.55918544E12, 48.08690476190478]], "isOverall": false, "label": "GetBook", "isController": false}, {"data": [[1.55918526E12, 54.76403326403327], [1.5591852E12, 54.518716577540125], [1.55918538E12, 35.04751847940859], [1.55918532E12, 39.13015873015881], [1.55918544E12, 43.02527075812278]], "isOverall": false, "label": "Login", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55918544E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 68.0, "minX": 1.55918514E12, "maxY": 93182.0, "series": [{"data": [[1.55918526E12, 61601.0], [1.5591852E12, 21359.0], [1.55918538E12, 68147.0], [1.55918532E12, 93182.0], [1.55918544E12, 74945.0], [1.55918514E12, 7080.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.55918526E12, 69.0], [1.5591852E12, 68.0], [1.55918538E12, 70.0], [1.55918532E12, 72.0], [1.55918544E12, 69.0], [1.55918514E12, 5264.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.55918526E12, 2456.6000000000004], [1.5591852E12, 2232.4999999999995], [1.55918538E12, 2029.199999999999], [1.55918532E12, 2088.8], [1.55918544E12, 2006.6000000000013], [1.55918514E12, 6866.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.55918526E12, 6360.049999999991], [1.5591852E12, 6515.960000000005], [1.55918538E12, 6965.359999999968], [1.55918532E12, 6728.48], [1.55918544E12, 7319.119999999891], [1.55918514E12, 7080.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.55918526E12, 3533.899999999998], [1.5591852E12, 3068.5499999999997], [1.55918538E12, 3128.199999999996], [1.55918532E12, 3021.699999999998], [1.55918544E12, 3055.0], [1.55918514E12, 6980.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55918544E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 93.0, "minX": 1.0, "maxY": 10203.5, "series": [{"data": [[2.0, 7046.5], [4.0, 10203.5], [6.0, 2762.5], [11.0, 2469.0], [19.0, 1285.0], [20.0, 1232.0], [23.0, 514.0], [24.0, 175.0], [28.0, 571.0], [30.0, 1842.5], [33.0, 1471.0], [35.0, 3748.0], [39.0, 5274.5], [40.0, 4016.0], [41.0, 825.5], [44.0, 455.0], [45.0, 697.5], [47.0, 344.5], [46.0, 921.0], [48.0, 512.5], [49.0, 517.0], [50.0, 367.0], [51.0, 378.0], [53.0, 376.0], [52.0, 442.0], [54.0, 353.0], [55.0, 442.5], [57.0, 698.0], [56.0, 483.5], [58.0, 382.5], [59.0, 378.0], [60.0, 332.0], [61.0, 475.0], [62.0, 533.5], [63.0, 354.5], [67.0, 336.0], [64.0, 358.0], [66.0, 342.5], [65.0, 290.5], [69.0, 390.0], [68.0, 284.5], [71.0, 327.5], [70.0, 372.0], [73.0, 516.0], [72.0, 603.5], [74.0, 336.0], [75.0, 229.0], [79.0, 687.0], [76.0, 557.5], [78.0, 350.5], [77.0, 248.0], [80.0, 315.0], [81.0, 556.0], [83.0, 367.0], [82.0, 305.5], [85.0, 1193.5], [86.0, 558.5], [87.0, 359.0], [84.0, 154.0], [88.0, 484.5], [89.0, 289.0], [90.0, 345.5], [94.0, 381.5], [98.0, 716.0], [114.0, 326.0], [134.0, 448.0], [145.0, 288.0], [1.0, 4805.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[145.0, 5232.0], [80.0, 93.0], [83.0, 5267.0], [85.0, 6490.5], [84.0, 5136.0], [11.0, 486.0], [46.0, 5184.0], [24.0, 5078.0], [114.0, 5204.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 145.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 93.0, "minX": 1.0, "maxY": 6490.5, "series": [{"data": [[2.0, 283.5], [4.0, 306.5], [6.0, 185.0], [11.0, 461.5], [19.0, 1285.0], [20.0, 815.5], [23.0, 498.0], [24.0, 175.0], [28.0, 280.5], [30.0, 1745.5], [33.0, 472.0], [35.0, 3640.0], [39.0, 3718.5], [40.0, 3403.5], [41.0, 250.0], [44.0, 330.5], [45.0, 406.5], [47.0, 203.0], [46.0, 449.0], [48.0, 353.0], [49.0, 201.0], [50.0, 208.5], [51.0, 203.5], [53.0, 203.0], [52.0, 200.5], [54.0, 195.5], [55.0, 194.0], [57.0, 266.0], [56.0, 193.0], [58.0, 199.5], [59.0, 200.5], [60.0, 204.5], [61.0, 211.0], [62.0, 213.5], [63.0, 199.5], [67.0, 212.0], [64.0, 207.0], [66.0, 202.0], [65.0, 203.0], [69.0, 216.0], [68.0, 205.0], [71.0, 206.0], [70.0, 191.5], [73.0, 224.0], [72.0, 228.5], [74.0, 191.0], [75.0, 196.0], [79.0, 436.0], [76.0, 275.0], [78.0, 199.0], [77.0, 190.0], [80.0, 195.0], [81.0, 283.0], [83.0, 237.0], [82.0, 199.5], [85.0, 1190.0], [86.0, 558.5], [87.0, 232.0], [84.0, 152.0], [88.0, 351.0], [89.0, 200.0], [90.0, 245.5], [94.0, 381.5], [98.0, 640.0], [114.0, 246.0], [134.0, 429.5], [145.0, 273.0], [1.0, 4635.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[145.0, 5232.0], [80.0, 93.0], [83.0, 5267.0], [85.0, 6490.5], [84.0, 5136.0], [11.0, 486.0], [46.0, 5184.0], [24.0, 5078.0], [114.0, 5204.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 145.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2.65, "minX": 1.55918514E12, "maxY": 63.583333333333336, "series": [{"data": [[1.55918526E12, 63.43333333333333], [1.5591852E12, 61.2], [1.55918538E12, 62.96666666666667], [1.55918532E12, 63.583333333333336], [1.55918544E12, 55.05], [1.55918514E12, 2.65]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55918544E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.55918514E12, "maxY": 52.78333333333333, "series": [{"data": [[1.55918526E12, 52.78333333333333], [1.5591852E12, 50.916666666666664], [1.55918538E12, 51.63333333333333], [1.55918532E12, 52.5], [1.55918544E12, 45.21666666666667], [1.55918514E12, 1.3166666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.55918526E12, 10.483333333333333], [1.5591852E12, 10.55], [1.55918538E12, 11.416666666666666], [1.55918532E12, 11.25], [1.55918544E12, 9.3]], "isOverall": false, "label": "302", "isController": false}, {"data": [[1.55918544E12, 0.4]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.55918526E12, 0.03333333333333333], [1.55918544E12, 1.0833333333333333]], "isOverall": false, "label": "504", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.55918544E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.55918514E12, "maxY": 16.366666666666667, "series": [{"data": [[1.55918544E12, 0.45]], "isOverall": false, "label": "SearchBooks-failure", "isController": false}, {"data": [[1.55918526E12, 16.05], [1.5591852E12, 15.6], [1.55918538E12, 15.733333333333333], [1.55918532E12, 15.816666666666666], [1.55918544E12, 13.483333333333333]], "isOverall": false, "label": "GetBook-success", "isController": false}, {"data": [[1.55918526E12, 15.35], [1.5591852E12, 15.566666666666666], [1.55918538E12, 15.766666666666667], [1.55918532E12, 16.366666666666667], [1.55918544E12, 13.633333333333333]], "isOverall": false, "label": "BuyBook-success", "isController": false}, {"data": [[1.55918544E12, 0.18333333333333332]], "isOverall": false, "label": "BuyBook-failure", "isController": false}, {"data": [[1.55918526E12, 15.833333333333334], [1.5591852E12, 14.716666666666667], [1.55918538E12, 15.766666666666667], [1.55918532E12, 15.816666666666666], [1.55918544E12, 13.883333333333333], [1.55918514E12, 1.3166666666666667]], "isOverall": false, "label": "SearchBooks-success", "isController": false}, {"data": [[1.55918526E12, 16.033333333333335], [1.5591852E12, 15.583333333333334], [1.55918538E12, 15.783333333333333], [1.55918532E12, 15.75], [1.55918544E12, 13.516666666666667]], "isOverall": false, "label": "Login-success", "isController": false}, {"data": [[1.55918544E12, 0.3333333333333333]], "isOverall": false, "label": "Login-failure", "isController": false}, {"data": [[1.55918526E12, 0.03333333333333333], [1.55918544E12, 0.5166666666666667]], "isOverall": false, "label": "GetBook-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55918544E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.55918514E12, "maxY": 63.75, "series": [{"data": [[1.55918526E12, 63.266666666666666], [1.5591852E12, 61.46666666666667], [1.55918538E12, 63.05], [1.55918532E12, 63.75], [1.55918544E12, 54.516666666666666], [1.55918514E12, 1.3166666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.55918526E12, 0.03333333333333333], [1.55918544E12, 1.4833333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.55918544E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

