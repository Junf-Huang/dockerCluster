user  nginx;
worker_processes  auto;
# number of FD
worker_rlimit_nofile 51200;

error_log  /var/log/nginx/error.log info;
#error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    use epoll;
    worker_connections  51200;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"'
                    '$connection $upstream_addr '
                    'upstream_response_time $upstream_response_time request_time $request_time ';

    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay    on; #防止网络阻塞
    keepalive_timeout  65;

    # gzip压缩功能设置
    gzip  on;
    gzip_min_length 1k;
    gzip_buffers    4 16k;
    # gzip_http_version 1.1;
    gzip_comp_level 2;
    gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml;
    gzip_vary on;   #告知接受方数据经过gzip压缩

    proxy_redirect off;
    #重定义发往后端服务器的请求头
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #连接成功后,等候后端服务器响应时间
    proxy_read_timeout 5s;
    #后端服务器数据回传时间
    proxy_send_timeout 5s;
    #服务器连接的超时时间
    proxy_connect_timeout 5s;    

    client_body_buffer_size 512k;
    proxy_buffering on;
    #缓冲区的大小
    proxy_buffer_size 16k;
    proxy_buffers 4 64k;
    proxy_busy_buffers_size 128k;
    proxy_max_temp_file_size 5m;
    #设置nginx每次写数据到临时文件的size(大小)限制
    #proxy_temp_file_write_size 64k;

    #缓存文件路径
    #levels 设置缓存文件目录层次；levels=1:2 表示两级目录
    #keys_zone 设置缓存名字和共享内存大小 
    #inactive 在指定时间内没人访问则被删除
    #max_size 最大缓存空间，如果缓存空间满，默认覆盖掉缓存时间最长的资源。
    proxy_cache_path /tmp levels=1:2 keys_zone=webcache:8m inactive=7d max_size=100m;

    upstream bookstores {
        # 用户再次访问时，该请求通过哈希算法，自动定位到该服务器,解决登录信息丢失问题.    
        #ip_hash;
        server bookstore_web:8080;
        #server   172.17.0.3:80 weight=2 max_fails=2 fail_timeout=30s ;
        # 按后端服务器的响应时间来分配请求，响应时间短的优先分配
        #fair;
    }

    include /etc/nginx/conf.d/*.conf;
}
